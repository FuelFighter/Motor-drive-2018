
MotorController_2018.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00001eec  00001f80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001eec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000027e  0080012a  0080012a  00001faa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001faa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002008  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000458  00000000  00000000  00002048  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004bc4  00000000  00000000  000024a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000185a  00000000  00000000  00007064  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000024a4  00000000  00000000  000088be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000da0  00000000  00000000  0000ad64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000014f6  00000000  00000000  0000bb04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003a54  00000000  00000000  0000cffa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003b0  00000000  00000000  00010a4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	51 c0       	rjmp	.+162    	; 0xa4 <__ctors_end>
       2:	00 00       	nop
       4:	6d c0       	rjmp	.+218    	; 0xe0 <__bad_interrupt>
       6:	00 00       	nop
       8:	6b c0       	rjmp	.+214    	; 0xe0 <__bad_interrupt>
       a:	00 00       	nop
       c:	69 c0       	rjmp	.+210    	; 0xe0 <__bad_interrupt>
       e:	00 00       	nop
      10:	67 c0       	rjmp	.+206    	; 0xe0 <__bad_interrupt>
      12:	00 00       	nop
      14:	65 c0       	rjmp	.+202    	; 0xe0 <__bad_interrupt>
      16:	00 00       	nop
      18:	26 c6       	rjmp	.+3148   	; 0xc66 <__vector_6>
      1a:	00 00       	nop
      1c:	61 c0       	rjmp	.+194    	; 0xe0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	5f c0       	rjmp	.+190    	; 0xe0 <__bad_interrupt>
      22:	00 00       	nop
      24:	5d c0       	rjmp	.+186    	; 0xe0 <__bad_interrupt>
      26:	00 00       	nop
      28:	5b c0       	rjmp	.+182    	; 0xe0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	59 c0       	rjmp	.+178    	; 0xe0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3a c5       	rjmp	.+2676   	; 0xaa6 <__vector_12>
      32:	00 00       	nop
      34:	55 c0       	rjmp	.+170    	; 0xe0 <__bad_interrupt>
      36:	00 00       	nop
      38:	53 c0       	rjmp	.+166    	; 0xe0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	51 c0       	rjmp	.+162    	; 0xe0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7f c4       	rjmp	.+2302   	; 0x940 <__vector_16>
      42:	00 00       	nop
      44:	0c 94 2a 0a 	jmp	0x1454	; 0x1454 <__vector_17>
      48:	79 c7       	rjmp	.+3826   	; 0xf3c <__vector_18>
      4a:	00 00       	nop
      4c:	49 c0       	rjmp	.+146    	; 0xe0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	47 c0       	rjmp	.+142    	; 0xe0 <__bad_interrupt>
      52:	00 00       	nop
      54:	c2 c2       	rjmp	.+1412   	; 0x5da <__vector_21>
      56:	00 00       	nop
      58:	a2 c2       	rjmp	.+1348   	; 0x59e <__vector_22>
      5a:	00 00       	nop
      5c:	41 c0       	rjmp	.+130    	; 0xe0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	3f c0       	rjmp	.+126    	; 0xe0 <__bad_interrupt>
      62:	00 00       	nop
      64:	3d c0       	rjmp	.+122    	; 0xe0 <__bad_interrupt>
      66:	00 00       	nop
      68:	3b c0       	rjmp	.+118    	; 0xe0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	39 c0       	rjmp	.+114    	; 0xe0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	37 c0       	rjmp	.+110    	; 0xe0 <__bad_interrupt>
      72:	00 00       	nop
      74:	35 c0       	rjmp	.+106    	; 0xe0 <__bad_interrupt>
      76:	00 00       	nop
      78:	33 c0       	rjmp	.+102    	; 0xe0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	31 c0       	rjmp	.+98     	; 0xe0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e5 c2       	rjmp	.+1482   	; 0x64c <__vector_32>
      82:	00 00       	nop
      84:	c5 c2       	rjmp	.+1418   	; 0x610 <__vector_33>
      86:	00 00       	nop
      88:	2b c0       	rjmp	.+86     	; 0xe0 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	29 c0       	rjmp	.+82     	; 0xe0 <__bad_interrupt>
      8e:	00 00       	nop
      90:	27 c0       	rjmp	.+78     	; 0xe0 <__bad_interrupt>
      92:	00 00       	nop
      94:	70 07       	cpc	r23, r16
      96:	75 07       	cpc	r23, r21
      98:	7b 07       	cpc	r23, r27
      9a:	81 07       	cpc	r24, r17
      9c:	87 07       	cpc	r24, r23
      9e:	8c 07       	cpc	r24, r28
      a0:	92 07       	cpc	r25, r18
      a2:	98 07       	cpc	r25, r24

000000a4 <__ctors_end>:
      a4:	11 24       	eor	r1, r1
      a6:	1f be       	out	0x3f, r1	; 63
      a8:	cf ef       	ldi	r28, 0xFF	; 255
      aa:	d0 e1       	ldi	r29, 0x10	; 16
      ac:	de bf       	out	0x3e, r29	; 62
      ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
      b0:	11 e0       	ldi	r17, 0x01	; 1
      b2:	a0 e0       	ldi	r26, 0x00	; 0
      b4:	b1 e0       	ldi	r27, 0x01	; 1
      b6:	ec ee       	ldi	r30, 0xEC	; 236
      b8:	fe e1       	ldi	r31, 0x1E	; 30
      ba:	00 e0       	ldi	r16, 0x00	; 0
      bc:	0b bf       	out	0x3b, r16	; 59
      be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x14>
      c0:	07 90       	elpm	r0, Z+
      c2:	0d 92       	st	X+, r0
      c4:	aa 32       	cpi	r26, 0x2A	; 42
      c6:	b1 07       	cpc	r27, r17
      c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x10>

000000ca <__do_clear_bss>:
      ca:	23 e0       	ldi	r18, 0x03	; 3
      cc:	aa e2       	ldi	r26, 0x2A	; 42
      ce:	b1 e0       	ldi	r27, 0x01	; 1
      d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
      d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
      d4:	a8 3a       	cpi	r26, 0xA8	; 168
      d6:	b2 07       	cpc	r27, r18
      d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
      da:	82 d3       	rcall	.+1796   	; 0x7e0 <main>
      dc:	0c 94 74 0f 	jmp	0x1ee8	; 0x1ee8 <_exit>

000000e0 <__bad_interrupt>:
      e0:	8f cf       	rjmp	.-226    	; 0x0 <__vectors>

000000e2 <reset_I>:
      e2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <f32_Integrator>
      e6:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <f32_Integrator+0x1>
      ea:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <f32_Integrator+0x2>
      ee:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <f32_Integrator+0x3>
      f2:	08 95       	ret

000000f4 <controller>:
      f4:	4f 92       	push	r4
      f6:	5f 92       	push	r5
      f8:	6f 92       	push	r6
      fa:	7f 92       	push	r7
      fc:	8f 92       	push	r8
      fe:	9f 92       	push	r9
     100:	af 92       	push	r10
     102:	bf 92       	push	r11
     104:	cf 92       	push	r12
     106:	df 92       	push	r13
     108:	ef 92       	push	r14
     10a:	ff 92       	push	r15
     10c:	0f 93       	push	r16
     10e:	1f 93       	push	r17
     110:	cf 93       	push	r28
     112:	df 93       	push	r29
     114:	4b 01       	movw	r8, r22
     116:	5c 01       	movw	r10, r24
     118:	29 01       	movw	r4, r18
     11a:	3a 01       	movw	r6, r20
     11c:	c0 90 00 01 	lds	r12, 0x0100	; 0x800100 <__data_start>
     120:	d0 90 01 01 	lds	r13, 0x0101	; 0x800101 <__data_start+0x1>
     124:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <__data_start+0x2>
     128:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <__data_start+0x3>
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	4e eb       	ldi	r20, 0xBE	; 190
     132:	52 e4       	ldi	r21, 0x42	; 66
     134:	c7 01       	movw	r24, r14
     136:	b6 01       	movw	r22, r12
     138:	0e 94 1a 0c 	call	0x1834	; 0x1834 <__gesf2>
     13c:	88 23       	and	r24, r24
     13e:	54 f4       	brge	.+20     	; 0x154 <controller+0x60>
     140:	20 e0       	ldi	r18, 0x00	; 0
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	48 e4       	ldi	r20, 0x48	; 72
     146:	52 e4       	ldi	r21, 0x42	; 66
     148:	c7 01       	movw	r24, r14
     14a:	b6 01       	movw	r22, r12
     14c:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__cmpsf2>
     150:	18 16       	cp	r1, r24
     152:	24 f0       	brlt	.+8      	; 0x15c <controller+0x68>
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
     15a:	02 c0       	rjmp	.+4      	; 0x160 <controller+0x6c>
     15c:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
     160:	a3 01       	movw	r20, r6
     162:	92 01       	movw	r18, r4
     164:	c5 01       	movw	r24, r10
     166:	b4 01       	movw	r22, r8
     168:	0e 94 66 0a 	call	0x14cc	; 0x14cc <__subsf3>
     16c:	6b 01       	movw	r12, r22
     16e:	7c 01       	movw	r14, r24
     170:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <f32_CurrentDelta>
     174:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <f32_CurrentDelta+0x1>
     178:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <f32_CurrentDelta+0x2>
     17c:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <f32_CurrentDelta+0x3>
     180:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     184:	81 11       	cpse	r24, r1
     186:	1c c0       	rjmp	.+56     	; 0x1c0 <controller+0xcc>
     188:	2a e0       	ldi	r18, 0x0A	; 10
     18a:	37 ed       	ldi	r19, 0xD7	; 215
     18c:	43 e2       	ldi	r20, 0x23	; 35
     18e:	5c e3       	ldi	r21, 0x3C	; 60
     190:	c7 01       	movw	r24, r14
     192:	b6 01       	movw	r22, r12
     194:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     198:	9b 01       	movw	r18, r22
     19a:	ac 01       	movw	r20, r24
     19c:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <f32_Integrator>
     1a0:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <f32_Integrator+0x1>
     1a4:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <f32_Integrator+0x2>
     1a8:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <f32_Integrator+0x3>
     1ac:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__addsf3>
     1b0:	60 93 2f 01 	sts	0x012F, r22	; 0x80012f <f32_Integrator>
     1b4:	70 93 30 01 	sts	0x0130, r23	; 0x800130 <f32_Integrator+0x1>
     1b8:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <f32_Integrator+0x2>
     1bc:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <f32_Integrator+0x3>
     1c0:	23 e3       	ldi	r18, 0x33	; 51
     1c2:	33 e3       	ldi	r19, 0x33	; 51
     1c4:	43 e7       	ldi	r20, 0x73	; 115
     1c6:	52 e4       	ldi	r21, 0x42	; 66
     1c8:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <f32_Integrator>
     1cc:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <f32_Integrator+0x1>
     1d0:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <f32_Integrator+0x2>
     1d4:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <f32_Integrator+0x3>
     1d8:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     1dc:	4b 01       	movw	r8, r22
     1de:	5c 01       	movw	r10, r24
     1e0:	29 ef       	ldi	r18, 0xF9	; 249
     1e2:	3f e0       	ldi	r19, 0x0F	; 15
     1e4:	49 e7       	ldi	r20, 0x79	; 121
     1e6:	5f e3       	ldi	r21, 0x3F	; 63
     1e8:	c7 01       	movw	r24, r14
     1ea:	b6 01       	movw	r22, r12
     1ec:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     1f0:	9b 01       	movw	r18, r22
     1f2:	ac 01       	movw	r20, r24
     1f4:	c5 01       	movw	r24, r10
     1f6:	b4 01       	movw	r22, r8
     1f8:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__addsf3>
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	48 e4       	ldi	r20, 0x48	; 72
     202:	52 e4       	ldi	r21, 0x42	; 66
     204:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__addsf3>
     208:	6b 01       	movw	r12, r22
     20a:	7c 01       	movw	r14, r24
     20c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
     210:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
     214:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
     218:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
     21c:	20 e0       	ldi	r18, 0x00	; 0
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	4e eb       	ldi	r20, 0xBE	; 190
     222:	52 e4       	ldi	r21, 0x42	; 66
     224:	0e 94 1a 0c 	call	0x1834	; 0x1834 <__gesf2>
     228:	18 16       	cp	r1, r24
     22a:	6c f4       	brge	.+26     	; 0x246 <controller+0x152>
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	ae eb       	ldi	r26, 0xBE	; 190
     232:	b2 e4       	ldi	r27, 0x42	; 66
     234:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     238:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     23c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     240:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     244:	16 c0       	rjmp	.+44     	; 0x272 <controller+0x17e>
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	48 e4       	ldi	r20, 0x48	; 72
     24c:	52 e4       	ldi	r21, 0x42	; 66
     24e:	c7 01       	movw	r24, r14
     250:	b6 01       	movw	r22, r12
     252:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__cmpsf2>
     256:	88 23       	and	r24, r24
     258:	64 f4       	brge	.+24     	; 0x272 <controller+0x17e>
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	a8 e4       	ldi	r26, 0x48	; 72
     260:	b2 e4       	ldi	r27, 0x42	; 66
     262:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     266:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     26a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     26e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     272:	c0 91 96 00 	lds	r28, 0x0096	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
     276:	d0 91 97 00 	lds	r29, 0x0097	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	48 ec       	ldi	r20, 0xC8	; 200
     280:	52 e4       	ldi	r21, 0x42	; 66
     282:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     286:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     28a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     28e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     292:	0e 94 cf 0a 	call	0x159e	; 0x159e <__divsf3>
     296:	6b 01       	movw	r12, r22
     298:	7c 01       	movw	r14, r24
     29a:	be 01       	movw	r22, r28
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__floatunsisf>
     2a4:	9b 01       	movw	r18, r22
     2a6:	ac 01       	movw	r20, r24
     2a8:	c7 01       	movw	r24, r14
     2aa:	b6 01       	movw	r22, r12
     2ac:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     2b0:	0e 94 37 0b 	call	0x166e	; 0x166e <__fixsfsi>
     2b4:	e8 e9       	ldi	r30, 0x98	; 152
     2b6:	f0 e0       	ldi	r31, 0x00	; 0
     2b8:	71 83       	std	Z+1, r23	; 0x01
     2ba:	60 83       	st	Z, r22
     2bc:	80 81       	ld	r24, Z
     2be:	91 81       	ldd	r25, Z+1	; 0x01
     2c0:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     2c4:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     2c8:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     2cc:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
     2d0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
     2d4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
     2d8:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__fixunssfsi>
     2dc:	f8 01       	movw	r30, r16
     2de:	60 83       	st	Z, r22
     2e0:	df 91       	pop	r29
     2e2:	cf 91       	pop	r28
     2e4:	1f 91       	pop	r17
     2e6:	0f 91       	pop	r16
     2e8:	ff 90       	pop	r15
     2ea:	ef 90       	pop	r14
     2ec:	df 90       	pop	r13
     2ee:	cf 90       	pop	r12
     2f0:	bf 90       	pop	r11
     2f2:	af 90       	pop	r10
     2f4:	9f 90       	pop	r9
     2f6:	8f 90       	pop	r8
     2f8:	7f 90       	pop	r7
     2fa:	6f 90       	pop	r6
     2fc:	5f 90       	pop	r5
     2fe:	4f 90       	pop	r4
     300:	08 95       	ret

00000302 <drivers_init>:
     302:	24 9a       	sbi	0x04, 4	; 4
     304:	08 95       	ret

00000306 <drivers>:
     306:	88 23       	and	r24, r24
     308:	11 f0       	breq	.+4      	; 0x30e <drivers+0x8>
     30a:	2c 9a       	sbi	0x05, 4	; 5
     30c:	08 95       	ret
     30e:	2c 98       	cbi	0x05, 4	; 5
     310:	08 95       	ret

00000312 <speed_init>:
#define LOWPASS_CONSTANT_S 0.1

void speed_init()
{
	//pin
	DDRE &= ~(1<<PE5); //define pin as input
     312:	6d 98       	cbi	0x0d, 5	; 13
	PORTE &= ~(1<<PE5); //no pull-up 
     314:	75 98       	cbi	0x0e, 5	; 14
	//int
	EIMSK &= ~(1<<INT5) ; // interrupt disable to prevent interrupt raise during init
     316:	ed 98       	cbi	0x1d, 5	; 29
	EICRB |= (1<<ISC50)|(1<<ISC51); // interrupt on rising edge
     318:	ea e6       	ldi	r30, 0x6A	; 106
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	80 81       	ld	r24, Z
     31e:	8c 60       	ori	r24, 0x0C	; 12
     320:	80 83       	st	Z, r24
	EIFR |= (1<<INTF5) ; // clear flag
     322:	e5 9a       	sbi	0x1c, 5	; 28
	EIMSK |= (1<<INT5) ; // interrupt enable
     324:	ed 9a       	sbi	0x1d, 5	; 29
     326:	08 95       	ret

00000328 <handle_speed_sensor>:
}

void handle_speed_sensor(uint8_t *u8_speed,uint16_t *u16_counter, uint16_t u16_period) // period in ms
{
     328:	8f 92       	push	r8
     32a:	9f 92       	push	r9
     32c:	af 92       	push	r10
     32e:	bf 92       	push	r11
     330:	cf 92       	push	r12
     332:	df 92       	push	r13
     334:	ef 92       	push	r14
     336:	ff 92       	push	r15
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	1f 92       	push	r1
     342:	cd b7       	in	r28, 0x3d	; 61
     344:	de b7       	in	r29, 0x3e	; 62
     346:	6c 01       	movw	r12, r24
     348:	7b 01       	movw	r14, r22
     34a:	8a 01       	movw	r16, r20
	volatile uint8_t u8_new_speed = (uint8_t)(((float)*u16_counter)*D_WHEEL*PI/N_MAG/u16_period); // speed calculated in mm/ms
     34c:	fb 01       	movw	r30, r22
     34e:	60 81       	ld	r22, Z
     350:	71 81       	ldd	r23, Z+1	; 0x01
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__floatunsisf>
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	4a ef       	ldi	r20, 0xFA	; 250
     360:	53 e4       	ldi	r21, 0x43	; 67
     362:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     366:	23 ec       	ldi	r18, 0xC3	; 195
     368:	35 ef       	ldi	r19, 0xF5	; 245
     36a:	48 e4       	ldi	r20, 0x48	; 72
     36c:	50 e4       	ldi	r21, 0x40	; 64
     36e:	0e 94 1e 0c 	call	0x183c	; 0x183c <__mulsf3>
     372:	4b 01       	movw	r8, r22
     374:	5c 01       	movw	r10, r24
     376:	b8 01       	movw	r22, r16
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	0e 94 68 0b 	call	0x16d0	; 0x16d0 <__floatunsisf>
     380:	9b 01       	movw	r18, r22
     382:	ac 01       	movw	r20, r24
     384:	c5 01       	movw	r24, r10
     386:	b4 01       	movw	r22, r8
     388:	0e 94 cf 0a 	call	0x159e	; 0x159e <__divsf3>
     38c:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__fixunssfsi>
     390:	69 83       	std	Y+1, r22	; 0x01
	//*u8_speed = (*u8_speed)*(1-LOWPASS_CONSTANT_S) + LOWPASS_CONSTANT_S*u8_new_speed ;// low pass filter
	*u8_speed = u8_new_speed ;
     392:	89 81       	ldd	r24, Y+1	; 0x01
     394:	f6 01       	movw	r30, r12
     396:	80 83       	st	Z, r24
	*u16_counter = 0 ;
     398:	f7 01       	movw	r30, r14
     39a:	11 82       	std	Z+1, r1	; 0x01
     39c:	10 82       	st	Z, r1
}
     39e:	0f 90       	pop	r0
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	ff 90       	pop	r15
     3aa:	ef 90       	pop	r14
     3ac:	df 90       	pop	r13
     3ae:	cf 90       	pop	r12
     3b0:	bf 90       	pop	r11
     3b2:	af 90       	pop	r10
     3b4:	9f 90       	pop	r9
     3b6:	8f 90       	pop	r8
     3b8:	08 95       	ret

000003ba <uart0_putc>:
     3ba:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <tx0_Head>
     3be:	9f 5f       	subi	r25, 0xFF	; 255
     3c0:	9f 71       	andi	r25, 0x1F	; 31
     3c2:	20 91 f5 02 	lds	r18, 0x02F5	; 0x8002f5 <tx0_Tail>
     3c6:	92 17       	cp	r25, r18
     3c8:	e1 f3       	breq	.-8      	; 0x3c2 <uart0_putc+0x8>
     3ca:	e9 2f       	mov	r30, r25
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	e4 5c       	subi	r30, 0xC4	; 196
     3d0:	fc 4f       	sbci	r31, 0xFC	; 252
     3d2:	80 83       	st	Z, r24
     3d4:	2f b7       	in	r18, 0x3f	; 63
     3d6:	f8 94       	cli
     3d8:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <tx0_Head>
     3dc:	e1 ec       	ldi	r30, 0xC1	; 193
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	80 81       	ld	r24, Z
     3e2:	80 62       	ori	r24, 0x20	; 32
     3e4:	80 83       	st	Z, r24
     3e6:	2f bf       	out	0x3f, r18	; 63
     3e8:	08 95       	ret

000003ea <uart0_flush>:
     3ea:	90 91 f5 02 	lds	r25, 0x02F5	; 0x8002f5 <tx0_Tail>
     3ee:	80 91 17 03 	lds	r24, 0x0317	; 0x800317 <tx0_Head>
     3f2:	98 13       	cpse	r25, r24
     3f4:	fa cf       	rjmp	.-12     	; 0x3ea <uart0_flush>
     3f6:	08 95       	ret

000003f8 <uart1_putc>:
     3f8:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <tx1_Head>
     3fc:	9f 5f       	subi	r25, 0xFF	; 255
     3fe:	9f 71       	andi	r25, 0x1F	; 31
     400:	20 91 39 03 	lds	r18, 0x0339	; 0x800339 <tx1_Tail>
     404:	92 17       	cp	r25, r18
     406:	e1 f3       	breq	.-8      	; 0x400 <__LOCK_REGION_LENGTH__>
     408:	e9 2f       	mov	r30, r25
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	e9 50       	subi	r30, 0x09	; 9
     40e:	fd 4f       	sbci	r31, 0xFD	; 253
     410:	80 83       	st	Z, r24
     412:	2f b7       	in	r18, 0x3f	; 63
     414:	f8 94       	cli
     416:	90 93 3b 03 	sts	0x033B, r25	; 0x80033b <tx1_Head>
     41a:	e9 ec       	ldi	r30, 0xC9	; 201
     41c:	f0 e0       	ldi	r31, 0x00	; 0
     41e:	80 81       	ld	r24, Z
     420:	80 62       	ori	r24, 0x20	; 32
     422:	80 83       	st	Z, r24
     424:	2f bf       	out	0x3f, r18	; 63
     426:	08 95       	ret

00000428 <uart_putchar>:
     428:	cf 93       	push	r28
     42a:	c8 2f       	mov	r28, r24
     42c:	fb 01       	movw	r30, r22
     42e:	84 85       	ldd	r24, Z+12	; 0x0c
     430:	95 85       	ldd	r25, Z+13	; 0x0d
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	39 f0       	breq	.+14     	; 0x444 <uart_putchar+0x1c>
     436:	ca 30       	cpi	r28, 0x0A	; 10
     438:	11 f4       	brne	.+4      	; 0x43e <uart_putchar+0x16>
     43a:	8d e0       	ldi	r24, 0x0D	; 13
     43c:	be df       	rcall	.-132    	; 0x3ba <uart0_putc>
     43e:	8c 2f       	mov	r24, r28
     440:	bc df       	rcall	.-136    	; 0x3ba <uart0_putc>
     442:	06 c0       	rjmp	.+12     	; 0x450 <uart_putchar+0x28>
     444:	ca 30       	cpi	r28, 0x0A	; 10
     446:	11 f4       	brne	.+4      	; 0x44c <uart_putchar+0x24>
     448:	8d e0       	ldi	r24, 0x0D	; 13
     44a:	d6 df       	rcall	.-84     	; 0x3f8 <uart1_putc>
     44c:	8c 2f       	mov	r24, r28
     44e:	d4 df       	rcall	.-88     	; 0x3f8 <uart1_putc>
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	cf 91       	pop	r28
     456:	08 95       	ret

00000458 <uart0_getc>:
     458:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <rx0_Tail>
     45c:	90 91 38 03 	lds	r25, 0x0338	; 0x800338 <rx0_Head>
     460:	89 17       	cp	r24, r25
     462:	59 f0       	breq	.+22     	; 0x47a <uart0_getc+0x22>
     464:	8f 5f       	subi	r24, 0xFF	; 255
     466:	98 2f       	mov	r25, r24
     468:	9f 71       	andi	r25, 0x1F	; 31
     46a:	e9 2f       	mov	r30, r25
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	ec 52       	subi	r30, 0x2C	; 44
     470:	fd 4f       	sbci	r31, 0xFD	; 253
     472:	80 81       	ld	r24, Z
     474:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <rx0_Tail>
     478:	08 95       	ret
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	08 95       	ret

0000047e <uart0_getlnToFirstWhiteSpace>:
     47e:	ef 92       	push	r14
     480:	ff 92       	push	r15
     482:	0f 93       	push	r16
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	7c 01       	movw	r14, r24
     48c:	16 2f       	mov	r17, r22
     48e:	e4 df       	rcall	.-56     	; 0x458 <uart0_getc>
     490:	f7 01       	movw	r30, r14
     492:	80 83       	st	Z, r24
     494:	81 32       	cpi	r24, 0x21	; 33
     496:	d8 f3       	brcs	.-10     	; 0x48e <uart0_getlnToFirstWhiteSpace+0x10>
     498:	e7 01       	movw	r28, r14
     49a:	21 96       	adiw	r28, 0x01	; 1
     49c:	12 30       	cpi	r17, 0x02	; 2
     49e:	c1 f0       	breq	.+48     	; 0x4d0 <uart0_getlnToFirstWhiteSpace+0x52>
     4a0:	13 50       	subi	r17, 0x03	; 3
     4a2:	81 2f       	mov	r24, r17
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	02 96       	adiw	r24, 0x02	; 2
     4a8:	87 01       	movw	r16, r14
     4aa:	08 0f       	add	r16, r24
     4ac:	19 1f       	adc	r17, r25
     4ae:	d4 df       	rcall	.-88     	; 0x458 <uart0_getc>
     4b0:	88 83       	st	Y, r24
     4b2:	88 23       	and	r24, r24
     4b4:	e1 f3       	breq	.-8      	; 0x4ae <uart0_getlnToFirstWhiteSpace+0x30>
     4b6:	8d 30       	cpi	r24, 0x0D	; 13
     4b8:	21 f4       	brne	.+8      	; 0x4c2 <uart0_getlnToFirstWhiteSpace+0x44>
     4ba:	ce df       	rcall	.-100    	; 0x458 <uart0_getc>
     4bc:	88 23       	and	r24, r24
     4be:	e9 f3       	breq	.-6      	; 0x4ba <uart0_getlnToFirstWhiteSpace+0x3c>
     4c0:	07 c0       	rjmp	.+14     	; 0x4d0 <uart0_getlnToFirstWhiteSpace+0x52>
     4c2:	81 32       	cpi	r24, 0x21	; 33
     4c4:	28 f0       	brcs	.+10     	; 0x4d0 <uart0_getlnToFirstWhiteSpace+0x52>
     4c6:	21 96       	adiw	r28, 0x01	; 1
     4c8:	0c 17       	cp	r16, r28
     4ca:	1d 07       	cpc	r17, r29
     4cc:	81 f7       	brne	.-32     	; 0x4ae <uart0_getlnToFirstWhiteSpace+0x30>
     4ce:	e8 01       	movw	r28, r16
     4d0:	18 82       	st	Y, r1
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	08 95       	ret

000004e0 <uart0_getint>:
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
     4e4:	cd b7       	in	r28, 0x3d	; 61
     4e6:	de b7       	in	r29, 0x3e	; 62
     4e8:	27 97       	sbiw	r28, 0x07	; 7
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	67 e0       	ldi	r22, 0x07	; 7
     4f6:	ce 01       	movw	r24, r28
     4f8:	01 96       	adiw	r24, 0x01	; 1
     4fa:	c1 df       	rcall	.-126    	; 0x47e <uart0_getlnToFirstWhiteSpace>
     4fc:	ce 01       	movw	r24, r28
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	0e 94 8a 0c 	call	0x1914	; 0x1914 <atoi>
     504:	27 96       	adiw	r28, 0x07	; 7
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	08 95       	ret

00000516 <uart0_getData>:
     516:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <rx0_Tail>
     51a:	90 91 38 03 	lds	r25, 0x0338	; 0x800338 <rx0_Head>
     51e:	89 17       	cp	r24, r25
     520:	61 f0       	breq	.+24     	; 0x53a <uart0_getData+0x24>
     522:	8f 5f       	subi	r24, 0xFF	; 255
     524:	8f 71       	andi	r24, 0x1F	; 31
     526:	e8 2f       	mov	r30, r24
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	ec 52       	subi	r30, 0x2C	; 44
     52c:	fd 4f       	sbci	r31, 0xFD	; 253
     52e:	90 81       	ld	r25, Z
     530:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <rx0_Tail>
     534:	89 2f       	mov	r24, r25
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	08 95       	ret
     53a:	8f ef       	ldi	r24, 0xFF	; 255
     53c:	9f ef       	ldi	r25, 0xFF	; 255
     53e:	08 95       	ret

00000540 <uart1_getData>:
     540:	80 91 f4 02 	lds	r24, 0x02F4	; 0x8002f4 <rx1_Tail>
     544:	90 91 3a 03 	lds	r25, 0x033A	; 0x80033a <rx1_Head>
     548:	89 17       	cp	r24, r25
     54a:	61 f0       	breq	.+24     	; 0x564 <uart1_getData+0x24>
     54c:	8f 5f       	subi	r24, 0xFF	; 255
     54e:	8f 71       	andi	r24, 0x1F	; 31
     550:	e8 2f       	mov	r30, r24
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	e8 5e       	subi	r30, 0xE8	; 232
     556:	fc 4f       	sbci	r31, 0xFC	; 252
     558:	90 81       	ld	r25, Z
     55a:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <rx1_Tail>
     55e:	89 2f       	mov	r24, r25
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	08 95       	ret
     564:	8f ef       	ldi	r24, 0xFF	; 255
     566:	9f ef       	ldi	r25, 0xFF	; 255
     568:	08 95       	ret

0000056a <uart_getchar>:
     56a:	cf 93       	push	r28
     56c:	df 93       	push	r29
     56e:	fc 01       	movw	r30, r24
     570:	84 85       	ldd	r24, Z+12	; 0x0c
     572:	95 85       	ldd	r25, Z+13	; 0x0d
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	41 f0       	breq	.+16     	; 0x588 <uart_getchar+0x1e>
     578:	ce df       	rcall	.-100    	; 0x516 <uart0_getData>
     57a:	ec 01       	movw	r28, r24
     57c:	99 23       	and	r25, r25
     57e:	e4 f3       	brlt	.-8      	; 0x578 <uart_getchar+0xe>
     580:	1c df       	rcall	.-456    	; 0x3ba <uart0_putc>
     582:	ce 01       	movw	r24, r28
     584:	99 27       	eor	r25, r25
     586:	07 c0       	rjmp	.+14     	; 0x596 <uart_getchar+0x2c>
     588:	db df       	rcall	.-74     	; 0x540 <uart1_getData>
     58a:	ec 01       	movw	r28, r24
     58c:	99 23       	and	r25, r25
     58e:	e4 f3       	brlt	.-8      	; 0x588 <uart_getchar+0x1e>
     590:	33 df       	rcall	.-410    	; 0x3f8 <uart1_putc>
     592:	ce 01       	movw	r24, r28
     594:	99 27       	eor	r25, r25
     596:	99 27       	eor	r25, r25
     598:	df 91       	pop	r29
     59a:	cf 91       	pop	r28
     59c:	08 95       	ret

0000059e <__vector_22>:
     59e:	0f 93       	push	r16
     5a0:	0f b7       	in	r16, 0x3f	; 63
     5a2:	ef 93       	push	r30
     5a4:	ff 93       	push	r31
     5a6:	e0 91 f5 02 	lds	r30, 0x02F5	; 0x8002f5 <tx0_Tail>
     5aa:	f0 91 17 03 	lds	r31, 0x0317	; 0x800317 <tx0_Head>
     5ae:	e3 95       	inc	r30
     5b0:	ef 71       	andi	r30, 0x1F	; 31
     5b2:	ef 13       	cpse	r30, r31
     5b4:	05 c0       	rjmp	.+10     	; 0x5c0 <USART0_TX_CONTINUE>
     5b6:	f0 91 c1 00 	lds	r31, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     5ba:	ff 7d       	andi	r31, 0xDF	; 223
     5bc:	f0 93 c1 00 	sts	0x00C1, r31	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

000005c0 <USART0_TX_CONTINUE>:
     5c0:	e0 93 f5 02 	sts	0x02F5, r30	; 0x8002f5 <tx0_Tail>
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	e4 5c       	subi	r30, 0xC4	; 196
     5c8:	fc 4f       	sbci	r31, 0xFC	; 252
     5ca:	e0 81       	ld	r30, Z
     5cc:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

000005d0 <USART0_TX_EXIT>:
     5d0:	ff 91       	pop	r31
     5d2:	ef 91       	pop	r30
     5d4:	0f bf       	out	0x3f, r16	; 63
     5d6:	0f 91       	pop	r16
     5d8:	18 95       	reti

000005da <__vector_21>:
     5da:	0f 93       	push	r16
     5dc:	0f b7       	in	r16, 0x3f	; 63
     5de:	9f 93       	push	r25
     5e0:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     5e4:	ef 93       	push	r30
     5e6:	ff 93       	push	r31
     5e8:	e0 91 38 03 	lds	r30, 0x0338	; 0x800338 <rx0_Head>
     5ec:	f0 91 f6 02 	lds	r31, 0x02F6	; 0x8002f6 <rx0_Tail>
     5f0:	e3 95       	inc	r30
     5f2:	ef 71       	andi	r30, 0x1F	; 31
     5f4:	fe 17       	cp	r31, r30
     5f6:	31 f0       	breq	.+12     	; 0x604 <USART0_RX_EXIT>
     5f8:	e0 93 38 03 	sts	0x0338, r30	; 0x800338 <rx0_Head>
     5fc:	f0 e0       	ldi	r31, 0x00	; 0
     5fe:	ec 52       	subi	r30, 0x2C	; 44
     600:	fd 4f       	sbci	r31, 0xFD	; 253
     602:	90 83       	st	Z, r25

00000604 <USART0_RX_EXIT>:
     604:	ff 91       	pop	r31
     606:	ef 91       	pop	r30
     608:	9f 91       	pop	r25
     60a:	0f bf       	out	0x3f, r16	; 63
     60c:	0f 91       	pop	r16
     60e:	18 95       	reti

00000610 <__vector_33>:
     610:	0f 93       	push	r16
     612:	0f b7       	in	r16, 0x3f	; 63
     614:	ef 93       	push	r30
     616:	ff 93       	push	r31
     618:	e0 91 39 03 	lds	r30, 0x0339	; 0x800339 <tx1_Tail>
     61c:	f0 91 3b 03 	lds	r31, 0x033B	; 0x80033b <tx1_Head>
     620:	e3 95       	inc	r30
     622:	ef 71       	andi	r30, 0x1F	; 31
     624:	ef 13       	cpse	r30, r31
     626:	05 c0       	rjmp	.+10     	; 0x632 <USART1_TX_CONTINUE>
     628:	f0 91 c9 00 	lds	r31, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
     62c:	ff 7d       	andi	r31, 0xDF	; 223
     62e:	f0 93 c9 00 	sts	0x00C9, r31	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>

00000632 <USART1_TX_CONTINUE>:
     632:	e0 93 39 03 	sts	0x0339, r30	; 0x800339 <tx1_Tail>
     636:	f0 e0       	ldi	r31, 0x00	; 0
     638:	e9 50       	subi	r30, 0x09	; 9
     63a:	fd 4f       	sbci	r31, 0xFD	; 253
     63c:	e0 81       	ld	r30, Z
     63e:	e0 93 ce 00 	sts	0x00CE, r30	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>

00000642 <USART1_TX_EXIT>:
     642:	ff 91       	pop	r31
     644:	ef 91       	pop	r30
     646:	0f bf       	out	0x3f, r16	; 63
     648:	0f 91       	pop	r16
     64a:	18 95       	reti

0000064c <__vector_32>:
     64c:	0f 93       	push	r16
     64e:	0f b7       	in	r16, 0x3f	; 63
     650:	9f 93       	push	r25
     652:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     656:	ef 93       	push	r30
     658:	ff 93       	push	r31
     65a:	e0 91 3a 03 	lds	r30, 0x033A	; 0x80033a <rx1_Head>
     65e:	f0 91 f4 02 	lds	r31, 0x02F4	; 0x8002f4 <rx1_Tail>
     662:	e3 95       	inc	r30
     664:	ef 71       	andi	r30, 0x1F	; 31
     666:	fe 17       	cp	r31, r30
     668:	31 f0       	breq	.+12     	; 0x676 <USART1_RX_EXIT>
     66a:	e0 93 3a 03 	sts	0x033A, r30	; 0x80033a <rx1_Head>
     66e:	f0 e0       	ldi	r31, 0x00	; 0
     670:	e8 5e       	subi	r30, 0xE8	; 232
     672:	fc 4f       	sbci	r31, 0xFC	; 252
     674:	90 83       	st	Z, r25

00000676 <USART1_RX_EXIT>:
     676:	ff 91       	pop	r31
     678:	ef 91       	pop	r30
     67a:	9f 91       	pop	r25
     67c:	0f bf       	out	0x3f, r16	; 63
     67e:	0f 91       	pop	r16
     680:	18 95       	reti

00000682 <timer1_init_ts>:

//for speed
static uint16_t u16_speed_count = 0;

void timer1_init_ts(){
	TCCR1B |= (1<<CS10)|(1<<CS11); // timer 1 prescaler set CLK/64
     682:	e1 e8       	ldi	r30, 0x81	; 129
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	80 81       	ld	r24, Z
     688:	83 60       	ori	r24, 0x03	; 3
     68a:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12); //CTC
     68c:	80 81       	ld	r24, Z
     68e:	88 60       	ori	r24, 0x08	; 8
     690:	80 83       	st	Z, r24
	TCNT1 = 0; //reset timer value
     692:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     696:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TIMSK1 |= (1<<OCIE1A); //enable interrupt
     69a:	ef e6       	ldi	r30, 0x6F	; 111
     69c:	f0 e0       	ldi	r31, 0x00	; 0
     69e:	80 81       	ld	r24, Z
     6a0:	82 60       	ori	r24, 0x02	; 2
     6a2:	80 83       	st	Z, r24
	OCR1A = 125; //compare value //every 1ms
     6a4:	8d e7       	ldi	r24, 0x7D	; 125
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     6ac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     6b0:	08 95       	ret

000006b2 <timer0_init_ts>:
}

void timer0_init_ts(){ 
	TCCR0A |= (1<<CS02)|(1<<CS00); // timer 0 prescaler set CLK/1024
     6b2:	84 b5       	in	r24, 0x24	; 36
     6b4:	85 60       	ori	r24, 0x05	; 5
     6b6:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1<<WGM01); //CTC
     6b8:	84 b5       	in	r24, 0x24	; 36
     6ba:	88 60       	ori	r24, 0x08	; 8
     6bc:	84 bd       	out	0x24, r24	; 36
	TCNT0 = 0; //reset timer value
     6be:	16 bc       	out	0x26, r1	; 38
	TIMSK0 |= (1<<OCIE0A); //enable interrupt
     6c0:	ee e6       	ldi	r30, 0x6E	; 110
     6c2:	f0 e0       	ldi	r31, 0x00	; 0
     6c4:	80 81       	ld	r24, Z
     6c6:	82 60       	ori	r24, 0x02	; 2
     6c8:	80 83       	st	Z, r24
	OCR0A = 39; //compare value // 78 for 10ms, 39 for 5ms
     6ca:	87 e2       	ldi	r24, 0x27	; 39
     6cc:	87 bd       	out	0x27, r24	; 39
     6ce:	08 95       	ret

000006d0 <handle_can>:
	.motor_status = IDLE,
	.Direction = FORWARD,
};


void handle_can(ModuleValues_t *vals, CanMessage_t *rx){
     6d0:	0f 93       	push	r16
     6d2:	1f 93       	push	r17
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	8c 01       	movw	r16, r24
     6da:	eb 01       	movw	r28, r22
	if (can_read_message_if_new(rx)){
     6dc:	cb 01       	movw	r24, r22
     6de:	74 d5       	rcall	.+2792   	; 0x11c8 <can_read_message_if_new>
     6e0:	88 23       	and	r24, r24
     6e2:	09 f4       	brne	.+2      	; 0x6e6 <handle_can+0x16>
     6e4:	44 c0       	rjmp	.+136    	; 0x76e <handle_can+0x9e>
		switch (rx->id){
     6e6:	88 81       	ld	r24, Y
     6e8:	99 81       	ldd	r25, Y+1	; 0x01
     6ea:	80 31       	cpi	r24, 0x10	; 16
     6ec:	21 e0       	ldi	r18, 0x01	; 1
     6ee:	92 07       	cpc	r25, r18
     6f0:	a1 f1       	breq	.+104    	; 0x75a <handle_can+0x8a>
     6f2:	80 33       	cpi	r24, 0x30	; 48
     6f4:	92 40       	sbci	r25, 0x02	; 2
     6f6:	09 f0       	breq	.+2      	; 0x6fa <handle_can+0x2a>
     6f8:	3a c0       	rjmp	.+116    	; 0x76e <handle_can+0x9e>
			case FORWARD_CAN_ID:
			
				if (rx->data.u8[3] > 10)
     6fa:	8e 81       	ldd	r24, Y+6	; 0x06
     6fc:	8b 30       	cpi	r24, 0x0B	; 11
     6fe:	88 f0       	brcs	.+34     	; 0x722 <handle_can+0x52>
				{
					ComValues.motor_status = FW_ACCEL ;
     700:	81 e0       	ldi	r24, 0x01	; 1
     702:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <ComValues+0x12>
					vals->u8_throttle_cmd = rx->data.u8[3]/10.0 ;
     706:	6e 81       	ldd	r22, Y+6	; 0x06
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	e2 d7       	rcall	.+4036   	; 0x16d4 <__floatsisf>
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 e2       	ldi	r20, 0x20	; 32
     716:	51 e4       	ldi	r21, 0x41	; 65
     718:	42 d7       	rcall	.+3716   	; 0x159e <__divsf3>
     71a:	ae d7       	rcall	.+3932   	; 0x1678 <__fixunssfsi>
     71c:	f8 01       	movw	r30, r16
     71e:	66 87       	std	Z+14, r22	; 0x0e
     720:	04 c0       	rjmp	.+8      	; 0x72a <handle_can+0x5a>
				} else {
					ComValues.motor_status = IDLE ;
     722:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <ComValues+0x12>
					vals->u8_throttle_cmd = 0;
     726:	f8 01       	movw	r30, r16
     728:	16 86       	std	Z+14, r1	; 0x0e
				}
				
				if (rx->data.u8[2] > 25 && ComValues.motor_status == IDLE)
     72a:	8d 81       	ldd	r24, Y+5	; 0x05
     72c:	8a 31       	cpi	r24, 0x1A	; 26
     72e:	f8 f0       	brcs	.+62     	; 0x76e <handle_can+0x9e>
     730:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <ComValues+0x12>
     734:	81 11       	cpse	r24, r1
     736:	1b c0       	rjmp	.+54     	; 0x76e <handle_can+0x9e>
				{
					ComValues.motor_status = FW_BRAKE ;
     738:	82 e0       	ldi	r24, 0x02	; 2
     73a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <ComValues+0x12>
					vals->u8_throttle_cmd = rx->data.u8[2]/10.0 ;
     73e:	6d 81       	ldd	r22, Y+5	; 0x05
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	80 e0       	ldi	r24, 0x00	; 0
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	c6 d7       	rcall	.+3980   	; 0x16d4 <__floatsisf>
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	40 e2       	ldi	r20, 0x20	; 32
     74e:	51 e4       	ldi	r21, 0x41	; 65
     750:	26 d7       	rcall	.+3660   	; 0x159e <__divsf3>
     752:	92 d7       	rcall	.+3876   	; 0x1678 <__fixunssfsi>
     754:	f8 01       	movw	r30, r16
     756:	66 87       	std	Z+14, r22	; 0x0e
     758:	0a c0       	rjmp	.+20     	; 0x76e <handle_can+0x9e>
				
				
				break;
			
			case BRAKE_CAN_ID:
				if (vals->Direction == FORWARD)
     75a:	f8 01       	movw	r30, r16
     75c:	83 89       	ldd	r24, Z+19	; 0x13
     75e:	81 11       	cpse	r24, r1
     760:	03 c0       	rjmp	.+6      	; 0x768 <handle_can+0x98>
				{
					vals->motor_status = FW_BRAKE;
     762:	82 e0       	ldi	r24, 0x02	; 2
     764:	82 8b       	std	Z+18, r24	; 0x12
     766:	03 c0       	rjmp	.+6      	; 0x76e <handle_can+0x9e>
				} else {
					vals->motor_status = BW_BRAKE;
     768:	84 e0       	ldi	r24, 0x04	; 4
     76a:	f8 01       	movw	r30, r16
     76c:	82 8b       	std	Z+18, r24	; 0x12
				}
				break;
		}
	}
}
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	08 95       	ret

00000778 <handle_motor_status_can_msg>:

void handle_motor_status_can_msg(uint8_t *send, ModuleValues_t *vals){
     778:	ef 92       	push	r14
     77a:	ff 92       	push	r15
     77c:	0f 93       	push	r16
     77e:	1f 93       	push	r17
     780:	cf 93       	push	r28
     782:	df 93       	push	r29
	if(*send){
     784:	fc 01       	movw	r30, r24
     786:	20 81       	ld	r18, Z
     788:	22 23       	and	r18, r18
     78a:	19 f1       	breq	.+70     	; 0x7d2 <handle_motor_status_can_msg+0x5a>
     78c:	eb 01       	movw	r28, r22
     78e:	8c 01       	movw	r16, r24
		txFrame.data.u8[0] = vals->motor_status;
     790:	0f 2e       	mov	r0, r31
     792:	f7 e9       	ldi	r31, 0x97	; 151
     794:	ef 2e       	mov	r14, r31
     796:	f3 e0       	ldi	r31, 0x03	; 3
     798:	ff 2e       	mov	r15, r31
     79a:	f0 2d       	mov	r31, r0
     79c:	8a 89       	ldd	r24, Y+18	; 0x12
     79e:	f7 01       	movw	r30, r14
     7a0:	83 83       	std	Z+3, r24	; 0x03
		txFrame.data.u8[1] = vals->u8_throttle_cmd;
     7a2:	8e 85       	ldd	r24, Y+14	; 0x0e
     7a4:	84 83       	std	Z+4, r24	; 0x04
		txFrame.data.u16[1] = (uint16_t)(vals->f32_motor_current);
     7a6:	68 81       	ld	r22, Y
     7a8:	79 81       	ldd	r23, Y+1	; 0x01
     7aa:	8a 81       	ldd	r24, Y+2	; 0x02
     7ac:	9b 81       	ldd	r25, Y+3	; 0x03
     7ae:	64 d7       	rcall	.+3784   	; 0x1678 <__fixunssfsi>
     7b0:	f7 01       	movw	r30, r14
     7b2:	76 83       	std	Z+6, r23	; 0x06
     7b4:	65 83       	std	Z+5, r22	; 0x05
		txFrame.data.u16[2] = OCR3B ;
     7b6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
     7ba:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     7be:	90 87       	std	Z+8, r25	; 0x08
     7c0:	87 83       	std	Z+7, r24	; 0x07
		txFrame.data.u16[3] = vals->u8_car_speed;
     7c2:	8d 85       	ldd	r24, Y+13	; 0x0d
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	92 87       	std	Z+10, r25	; 0x0a
		
		can_send_message(&txFrame);
     7c8:	81 87       	std	Z+9, r24	; 0x09
     7ca:	c7 01       	movw	r24, r14
		*send = 0;
     7cc:	40 d5       	rcall	.+2688   	; 0x124e <can_send_message>
     7ce:	f8 01       	movw	r30, r16
	}
}
     7d0:	10 82       	st	Z, r1
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	1f 91       	pop	r17
     7d8:	0f 91       	pop	r16
     7da:	ff 90       	pop	r15
     7dc:	ef 90       	pop	r14
     7de:	08 95       	ret

000007e0 <main>:

int main(void)	
{
     7e0:	cf 93       	push	r28
     7e2:	df 93       	push	r29
     7e4:	00 d0       	rcall	.+0      	; 0x7e6 <main+0x6>
     7e6:	cd b7       	in	r28, 0x3d	; 61
     7e8:	de b7       	in	r29, 0x3e	; 62
	cli();
     7ea:	f8 94       	cli
	pid_init(&Current, 0.1, 0.05, 0, 0);
     7ec:	81 2c       	mov	r8, r1
     7ee:	91 2c       	mov	r9, r1
     7f0:	54 01       	movw	r10, r8
     7f2:	75 01       	movw	r14, r10
     7f4:	64 01       	movw	r12, r8
     7f6:	0d ec       	ldi	r16, 0xCD	; 205
     7f8:	1c ec       	ldi	r17, 0xCC	; 204
     7fa:	2c e4       	ldi	r18, 0x4C	; 76
     7fc:	3d e3       	ldi	r19, 0x3D	; 61
     7fe:	4d ec       	ldi	r20, 0xCD	; 205
     800:	5c ec       	ldi	r21, 0xCC	; 204
     802:	6c ec       	ldi	r22, 0xCC	; 204
     804:	7d e3       	ldi	r23, 0x3D	; 61
     806:	8f e7       	ldi	r24, 0x7F	; 127
     808:	93 e0       	ldi	r25, 0x03	; 3
	pwm_init();
     80a:	44 d2       	rcall	.+1160   	; 0xc94 <pid_init>
     80c:	9e d5       	rcall	.+2876   	; 0x134a <pwm_init>
	can_init(0,0);
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	70 e0       	ldi	r23, 0x00	; 0
	timer1_init_ts();
     812:	80 e0       	ldi	r24, 0x00	; 0
	timer0_init_ts();
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	83 d4       	rcall	.+2310   	; 0x111e <can_init>
	speed_init();
     818:	34 df       	rcall	.-408    	; 0x682 <timer1_init_ts>
     81a:	4b df       	rcall	.-362    	; 0x6b2 <timer0_init_ts>
	spi_init(DIV_4); // clk at clkio/4 = 2MHz init of SPI for external ADC device
     81c:	7a dd       	rcall	.-1292   	; 0x312 <speed_init>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	e4 d5       	rcall	.+3016   	; 0x13ea <spi_init>
	{
	#ifdef USART0_RS485_MODE
		RS485_CONTROL0_DDR |= (1<<RS485_CONTROL0_IONUM); // default pin state is low
	#endif
		
		UBRR0L_REGISTER = (uint8_t) ubrr_value;
     822:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
		
	#ifdef USART_SKIP_UBRRH_IF_ZERO
		if(__builtin_constant_p(ubrr_value))
			if(((ubrr_value>>8) != 0)) // requires -Os flag - do not use in non-inline functions
	#endif
			UBRR0H_REGISTER = (ubrr_value>>8);
     826:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
		#endif
	#elif defined(USART0_MPCM_MODE)
		UCSR0A_REGISTER |= (1<<MPCM0_BIT);
	#endif
		
		UCSR0B_REGISTER = USART0_CONFIG_B;
     82a:	88 e9       	ldi	r24, 0x98	; 152
     82c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	//uart_set_FrameFormat(USART_8BIT_DATA|USART_1STOP_BIT|USART_NO_PARITY|USART_ASYNC_MODE); // default settings
	uart_init(BAUD_CALC(500000)); // 8n1 transmission is set as default
	stdout = &uart0_io; // attach uart stream to stdout & stdin
     830:	e2 ea       	ldi	r30, 0xA2	; 162
     832:	f3 e0       	ldi	r31, 0x03	; 3
     834:	84 e0       	ldi	r24, 0x04	; 4
     836:	91 e0       	ldi	r25, 0x01	; 1
	stdin = &uart0_io; // uart0_in and uart0_out are only available if NO_USART_RX or NO_USART_TX is defined
     838:	93 83       	std	Z+3, r25	; 0x03
     83a:	82 83       	std	Z+2, r24	; 0x02
	
	rgbled_init();
     83c:	91 83       	std	Z+1, r25	; 0x01
     83e:	80 83       	st	Z, r24
	drivers_init();
     840:	c9 d5       	rcall	.+2962   	; 0x13d4 <rgbled_init>
     842:	5f dd       	rcall	.-1346   	; 0x302 <drivers_init>
	txFrame.id = MOTOR_CAN_ID;
     844:	e7 e9       	ldi	r30, 0x97	; 151
     846:	f3 e0       	ldi	r31, 0x03	; 3
     848:	80 e5       	ldi	r24, 0x50	; 80
     84a:	94 e0       	ldi	r25, 0x04	; 4
     84c:	91 83       	std	Z+1, r25	; 0x01
	txFrame.length = 8;
     84e:	80 83       	st	Z, r24
     850:	88 e0       	ldi	r24, 0x08	; 8
	
	sei();
     852:	82 83       	std	Z+2, r24	; 0x02
	
	rgbled_turn_on(LED_BLUE);
     854:	78 94       	sei
     856:	80 e8       	ldi	r24, 0x80	; 128
     858:	c3 d5       	rcall	.+2950   	; 0x13e0 <rgbled_turn_on>
int speed_test = 0; // for test
     85a:	e1 2c       	mov	r14, r1
     85c:	f1 2c       	mov	r15, r1
		if (speed_test == 100)
		{
			speed_test = 0 ;
		}
		speed_test ++ ;
		ComValues.u8_car_speed = speed_test ;
     85e:	02 e1       	ldi	r16, 0x12	; 18
     860:	11 e0       	ldi	r17, 0x01	; 1
		//end for test
		handle_motor_status_can_msg(&send_can, &ComValues);
		handle_can(&ComValues, &rxFrame);
	
		//sends motor current and current cmd through USB
		printf("%i",ComValues.u8_car_speed);
     862:	0f 2e       	mov	r0, r31
     864:	f6 e2       	ldi	r31, 0x26	; 38
     866:	cf 2e       	mov	r12, r31
     868:	f1 e0       	ldi	r31, 0x01	; 1
     86a:	df 2e       	mov	r13, r31
     86c:	f0 2d       	mov	r31, r0
				ComValues.motor_status = FW_BRAKE ;
			}
			if (u16_data_received>0 && u16_data_received <= 10)
			{
				ComValues.u8_throttle_cmd = u16_data_received ;
				ComValues.motor_status = FW_ACCEL;
     86e:	aa 24       	eor	r10, r10
     870:	a3 94       	inc	r10
			volatile uint16_t u16_data_received=uart_getint(); //in Amps. if >10, braking, else accelerating. eg : 12 -> brake 2 amps; 2 -> accel 2 amps
			uart_flush();
			if (u16_data_received >10 && u16_data_received <= 20)
			{
				ComValues.u8_throttle_cmd = u16_data_received-10 ;
				ComValues.motor_status = FW_BRAKE ;
     872:	68 94       	set
     874:	bb 24       	eor	r11, r11
     876:	b1 f8       	bld	r11, 1
     878:	06 c0       	rjmp	.+12     	; 0x886 <main+0xa6>
	
	rgbled_turn_on(LED_BLUE);
int speed_test = 0; // for test
    while (1){
		//for test 
		if (speed_test == 100)
     87a:	24 e6       	ldi	r18, 0x64	; 100
     87c:	e2 16       	cp	r14, r18
     87e:	f1 04       	cpc	r15, r1
		{
			speed_test = 0 ;
     880:	11 f4       	brne	.+4      	; 0x886 <main+0xa6>
		}
		speed_test ++ ;
     882:	e1 2c       	mov	r14, r1
     884:	f1 2c       	mov	r15, r1
		ComValues.u8_car_speed = speed_test ;
     886:	3f ef       	ldi	r19, 0xFF	; 255
     888:	e3 1a       	sub	r14, r19
		
		//end for test
		handle_motor_status_can_msg(&send_can, &ComValues);
     88a:	f3 0a       	sbc	r15, r19
     88c:	f8 01       	movw	r30, r16
     88e:	e5 86       	std	Z+13, r14	; 0x0d
     890:	b8 01       	movw	r22, r16
     892:	8b e3       	ldi	r24, 0x3B	; 59
		handle_can(&ComValues, &rxFrame);
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	70 df       	rcall	.-288    	; 0x778 <handle_motor_status_can_msg>
     898:	64 e7       	ldi	r22, 0x74	; 116
     89a:	73 e0       	ldi	r23, 0x03	; 3
     89c:	c8 01       	movw	r24, r16
	
		//sends motor current and current cmd through USB
		printf("%i",ComValues.u8_car_speed);
     89e:	18 df       	rcall	.-464    	; 0x6d0 <handle_can>
     8a0:	f8 01       	movw	r30, r16
     8a2:	85 85       	ldd	r24, Z+13	; 0x0d
     8a4:	1f 92       	push	r1
     8a6:	8f 93       	push	r24
     8a8:	df 92       	push	r13
     8aa:	cf 92       	push	r12
     8ac:	0e 94 af 0c 	call	0x195e	; 0x195e <printf>
		printf(",");
     8b0:	8c e2       	ldi	r24, 0x2C	; 44
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 c2 0c 	call	0x1984	; 0x1984 <putchar>
		printf("%i",u16_speed_count);
     8b8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <u16_speed_count+0x1>
     8bc:	8f 93       	push	r24
     8be:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <u16_speed_count>
     8c2:	8f 93       	push	r24
     8c4:	df 92       	push	r13
     8c6:	cf 92       	push	r12
     8c8:	0e 94 af 0c 	call	0x195e	; 0x195e <printf>
		printf("\n");
     8cc:	8a e0       	ldi	r24, 0x0A	; 10
     8ce:	90 e0       	ldi	r25, 0x00	; 0
		int16_t uart0_getData(void); // reads single byte from a buffer // returns negative value if buffer is empty (upper byte is non zero)
		uint8_t uart0_LoadData(uint8_t *data); // reads single byte from a buffer and loads it into *data byte
		// in case of empty buffers returned flag is set to BUFFER_EMPTY - NULL
		
		extern volatile uint8_t rx0_Head, rx0_Tail;
		inline uint8_t uart0_AvailableBytes(void) { return (rx0_Head - rx0_Tail) & RX0_BUFFER_MASK; }
     8d0:	0e 94 c2 0c 	call	0x1984	; 0x1984 <putchar>
		printf(",");
		printf("%u",(uint16_t)(ComValues.u8_duty_cycle*10.0));
		printf("\n");
		*/
		/////////////////////receiving throttle cmd through USB
		if(uart_AvailableBytes()!=0){
     8d4:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <rx0_Head>
     8d8:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <rx0_Tail>
     8dc:	89 1b       	sub	r24, r25
     8de:	8f 71       	andi	r24, 0x1F	; 31
     8e0:	0f b6       	in	r0, 0x3f	; 63
     8e2:	f8 94       	cli
			volatile uint16_t u16_data_received=uart_getint(); //in Amps. if >10, braking, else accelerating. eg : 12 -> brake 2 amps; 2 -> accel 2 amps
     8e4:	de bf       	out	0x3e, r29	; 62
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	cd bf       	out	0x3d, r28	; 61
     8ea:	39 f2       	breq	.-114    	; 0x87a <main+0x9a>
			uart_flush();
     8ec:	f9 dd       	rcall	.-1038   	; 0x4e0 <uart0_getint>
     8ee:	9a 83       	std	Y+2, r25	; 0x02
			if (u16_data_received >10 && u16_data_received <= 20)
     8f0:	89 83       	std	Y+1, r24	; 0x01
     8f2:	7b dd       	rcall	.-1290   	; 0x3ea <uart0_flush>
     8f4:	89 81       	ldd	r24, Y+1	; 0x01
     8f6:	9a 81       	ldd	r25, Y+2	; 0x02
     8f8:	0b 97       	sbiw	r24, 0x0b	; 11
     8fa:	50 f0       	brcs	.+20     	; 0x910 <main+0x130>
     8fc:	89 81       	ldd	r24, Y+1	; 0x01
     8fe:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				ComValues.u8_throttle_cmd = u16_data_received-10 ;
     900:	45 97       	sbiw	r24, 0x15	; 21
     902:	30 f4       	brcc	.+12     	; 0x910 <main+0x130>
     904:	89 81       	ldd	r24, Y+1	; 0x01
     906:	9a 81       	ldd	r25, Y+2	; 0x02
     908:	8a 50       	subi	r24, 0x0A	; 10
				ComValues.motor_status = FW_BRAKE ;
     90a:	f8 01       	movw	r30, r16
			}
			if (u16_data_received>0 && u16_data_received <= 10)
     90c:	86 87       	std	Z+14, r24	; 0x0e
     90e:	b2 8a       	std	Z+18, r11	; 0x12
     910:	89 81       	ldd	r24, Y+1	; 0x01
     912:	9a 81       	ldd	r25, Y+2	; 0x02
     914:	89 2b       	or	r24, r25
     916:	49 f0       	breq	.+18     	; 0x92a <main+0x14a>
     918:	89 81       	ldd	r24, Y+1	; 0x01
     91a:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				ComValues.u8_throttle_cmd = u16_data_received ;
     91c:	0b 97       	sbiw	r24, 0x0b	; 11
     91e:	28 f4       	brcc	.+10     	; 0x92a <main+0x14a>
     920:	89 81       	ldd	r24, Y+1	; 0x01
     922:	9a 81       	ldd	r25, Y+2	; 0x02
				ComValues.motor_status = FW_ACCEL;
     924:	f8 01       	movw	r30, r16
			}
			if (u16_data_received == 0)
     926:	86 87       	std	Z+14, r24	; 0x0e
     928:	a2 8a       	std	Z+18, r10	; 0x12
     92a:	89 81       	ldd	r24, Y+1	; 0x01
     92c:	9a 81       	ldd	r25, Y+2	; 0x02
     92e:	89 2b       	or	r24, r25
			{
				ComValues.u8_throttle_cmd = u16_data_received ;
     930:	09 f0       	breq	.+2      	; 0x934 <main+0x154>
     932:	a3 cf       	rjmp	.-186    	; 0x87a <main+0x9a>
     934:	89 81       	ldd	r24, Y+1	; 0x01
     936:	9a 81       	ldd	r25, Y+2	; 0x02
				ComValues.motor_status = IDLE;
     938:	f8 01       	movw	r30, r16
     93a:	86 87       	std	Z+14, r24	; 0x0e
     93c:	12 8a       	std	Z+18, r1	; 0x12
     93e:	9d cf       	rjmp	.-198    	; 0x87a <main+0x9a>

00000940 <__vector_16>:
		}	
	}
}


ISR(TIMER0_COMP_vect){ // every 5ms
     940:	1f 92       	push	r1
     942:	0f 92       	push	r0
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	0f 92       	push	r0
     948:	11 24       	eor	r1, r1
     94a:	0b b6       	in	r0, 0x3b	; 59
     94c:	0f 92       	push	r0
     94e:	cf 92       	push	r12
     950:	df 92       	push	r13
     952:	ef 92       	push	r14
     954:	ff 92       	push	r15
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	2f 93       	push	r18
     95c:	3f 93       	push	r19
     95e:	4f 93       	push	r20
     960:	5f 93       	push	r21
     962:	6f 93       	push	r22
     964:	7f 93       	push	r23
     966:	8f 93       	push	r24
     968:	9f 93       	push	r25
     96a:	af 93       	push	r26
     96c:	bf 93       	push	r27
     96e:	cf 93       	push	r28
     970:	df 93       	push	r29
     972:	ef 93       	push	r30
     974:	ff 93       	push	r31
	
	if (can_sender_counter == 1) // every 10ms
     976:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <can_sender_counter>
     97a:	81 30       	cpi	r24, 0x01	; 1
     97c:	29 f4       	brne	.+10     	; 0x988 <__vector_16+0x48>
	{
		//handle_speed_sensor(&ComValues.u8_car_speed, &u16_speed_count, 10.0);
		send_can = 1;
     97e:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <send_can>
		can_sender_counter = 0;
     982:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <can_sender_counter>
     986:	03 c0       	rjmp	.+6      	; 0x98e <__vector_16+0x4e>
	} else {
		can_sender_counter ++;
     988:	8f 5f       	subi	r24, 0xFF	; 255
     98a:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <can_sender_counter>
	}
	
	if (speed_handler_counter == 100) // every 1s
     98e:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <speed_handler_counter>
     992:	84 36       	cpi	r24, 0x64	; 100
     994:	51 f4       	brne	.+20     	; 0x9aa <__vector_16+0x6a>
	{
		handle_speed_sensor(&ComValues.u8_car_speed, &u16_speed_count, 1000);
     996:	48 ee       	ldi	r20, 0xE8	; 232
     998:	53 e0       	ldi	r21, 0x03	; 3
     99a:	63 e3       	ldi	r22, 0x33	; 51
     99c:	71 e0       	ldi	r23, 0x01	; 1
     99e:	8f e1       	ldi	r24, 0x1F	; 31
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	c2 dc       	rcall	.-1660   	; 0x328 <handle_speed_sensor>
		speed_handler_counter = 0;
     9a4:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <speed_handler_counter>
     9a8:	03 c0       	rjmp	.+6      	; 0x9b0 <__vector_16+0x70>
		} else {
		speed_handler_counter ++;
     9aa:	8f 5f       	subi	r24, 0xFF	; 255
     9ac:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <speed_handler_counter>
	}
	
	if (ComValues.f32_batt_volt > 15.0) //if motor controller card powered
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e7       	ldi	r20, 0x70	; 112
     9b6:	51 e4       	ldi	r21, 0x41	; 65
     9b8:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <ComValues+0x8>
     9bc:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <ComValues+0x9>
     9c0:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <ComValues+0xa>
     9c4:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <ComValues+0xb>
     9c8:	35 d7       	rcall	.+3690   	; 0x1834 <__gesf2>
     9ca:	18 16       	cp	r1, r24
     9cc:	0c f0       	brlt	.+2      	; 0x9d0 <__vector_16+0x90>
     9ce:	4d c0       	rjmp	.+154    	; 0xa6a <__vector_16+0x12a>
	{
		if (ComValues.motor_status == FW_BRAKE || ComValues.motor_status == BW_ACCEL)
     9d0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <ComValues+0x12>
     9d4:	82 50       	subi	r24, 0x02	; 2
     9d6:	82 30       	cpi	r24, 0x02	; 2
     9d8:	d8 f4       	brcc	.+54     	; 0xa10 <__vector_16+0xd0>
		{
			ComValues.u16_watchdog = WATCHDOG_RELOAD_VALUE ;
     9da:	c2 e1       	ldi	r28, 0x12	; 18
     9dc:	d1 e0       	ldi	r29, 0x01	; 1
     9de:	84 ef       	ldi	r24, 0xF4	; 244
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	99 8b       	std	Y+17, r25	; 0x11
			drivers(1); //drivers turn on
     9e4:	88 8b       	std	Y+16, r24	; 0x10
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	8e dc       	rcall	.-1764   	; 0x306 <drivers>
			controller(-ComValues.u8_throttle_cmd, ComValues.f32_motor_current,&ComValues.u8_duty_cycle);
     9ea:	c8 80       	ld	r12, Y
     9ec:	d9 80       	ldd	r13, Y+1	; 0x01
     9ee:	ea 80       	ldd	r14, Y+2	; 0x02
     9f0:	fb 80       	ldd	r15, Y+3	; 0x03
     9f2:	6e 85       	ldd	r22, Y+14	; 0x0e
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	71 95       	neg	r23
     9f8:	61 95       	neg	r22
     9fa:	71 09       	sbc	r23, r1
     9fc:	07 2e       	mov	r0, r23
     9fe:	00 0c       	add	r0, r0
     a00:	88 0b       	sbc	r24, r24
     a02:	99 0b       	sbc	r25, r25
     a04:	67 d6       	rcall	.+3278   	; 0x16d4 <__floatsisf>
     a06:	01 e2       	ldi	r16, 0x21	; 33
     a08:	11 e0       	ldi	r17, 0x01	; 1
     a0a:	a7 01       	movw	r20, r14
     a0c:	96 01       	movw	r18, r12
     a0e:	72 db       	rcall	.-2332   	; 0xf4 <controller>
		}
	
		if (/*ComValues.motor_status == BW_BRAKE || */ComValues.motor_status == FW_ACCEL)
     a10:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <ComValues+0x12>
     a14:	81 30       	cpi	r24, 0x01	; 1
     a16:	b1 f4       	brne	.+44     	; 0xa44 <__vector_16+0x104>
		{
			ComValues.u16_watchdog = WATCHDOG_RELOAD_VALUE ;
     a18:	c2 e1       	ldi	r28, 0x12	; 18
     a1a:	d1 e0       	ldi	r29, 0x01	; 1
     a1c:	84 ef       	ldi	r24, 0xF4	; 244
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	99 8b       	std	Y+17, r25	; 0x11
			drivers(1); //drivers turn on
     a22:	88 8b       	std	Y+16, r24	; 0x10
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	6f dc       	rcall	.-1826   	; 0x306 <drivers>
			controller(ComValues.u8_throttle_cmd, ComValues.f32_motor_current, &ComValues.u8_duty_cycle);
     a28:	c8 80       	ld	r12, Y
     a2a:	d9 80       	ldd	r13, Y+1	; 0x01
     a2c:	ea 80       	ldd	r14, Y+2	; 0x02
     a2e:	fb 80       	ldd	r15, Y+3	; 0x03
     a30:	6e 85       	ldd	r22, Y+14	; 0x0e
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	4b d6       	rcall	.+3222   	; 0x16d0 <__floatunsisf>
     a3a:	01 e2       	ldi	r16, 0x21	; 33
     a3c:	11 e0       	ldi	r17, 0x01	; 1
     a3e:	a7 01       	movw	r20, r14
     a40:	96 01       	movw	r18, r12
     a42:	58 db       	rcall	.-2384   	; 0xf4 <controller>
		}
		if (ComValues.motor_status == IDLE)
     a44:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <ComValues+0x12>
     a48:	81 11       	cpse	r24, r1
     a4a:	12 c0       	rjmp	.+36     	; 0xa70 <__vector_16+0x130>
				drivers(0);//drivers shutdown
				reset_I(); //reset integrator
			}else{
				ComValues.u16_watchdog -- ;
			}*/
			controller(0.0, ComValues.f32_motor_current,&ComValues.u8_duty_cycle);		
     a4c:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <ComValues>
     a50:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <ComValues+0x1>
     a54:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <ComValues+0x2>
     a58:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <ComValues+0x3>
     a5c:	01 e2       	ldi	r16, 0x21	; 33
     a5e:	11 e0       	ldi	r17, 0x01	; 1
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	cb 01       	movw	r24, r22
		}
	}else{
		drivers(0);//drivers shutdown
     a66:	46 db       	rcall	.-2420   	; 0xf4 <controller>
     a68:	03 c0       	rjmp	.+6      	; 0xa70 <__vector_16+0x130>
     a6a:	80 e0       	ldi	r24, 0x00	; 0
		reset_I(); //reset integrator
     a6c:	4c dc       	rcall	.-1896   	; 0x306 <drivers>
     a6e:	39 db       	rcall	.-2446   	; 0xe2 <reset_I>
	}
}
     a70:	ff 91       	pop	r31
     a72:	ef 91       	pop	r30
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	bf 91       	pop	r27
     a7a:	af 91       	pop	r26
     a7c:	9f 91       	pop	r25
     a7e:	8f 91       	pop	r24
     a80:	7f 91       	pop	r23
     a82:	6f 91       	pop	r22
     a84:	5f 91       	pop	r21
     a86:	4f 91       	pop	r20
     a88:	3f 91       	pop	r19
     a8a:	2f 91       	pop	r18
     a8c:	1f 91       	pop	r17
     a8e:	0f 91       	pop	r16
     a90:	ff 90       	pop	r15
     a92:	ef 90       	pop	r14
     a94:	df 90       	pop	r13
     a96:	cf 90       	pop	r12
     a98:	0f 90       	pop	r0
     a9a:	0b be       	out	0x3b, r0	; 59
     a9c:	0f 90       	pop	r0
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	0f 90       	pop	r0
     aa2:	1f 90       	pop	r1
     aa4:	18 95       	reti

00000aa6 <__vector_12>:
*	CH2 : Battery voltage
*	CH4 : Motor temperature
*/


ISR(TIMER1_COMPA_vect){// every 1ms
     aa6:	1f 92       	push	r1
     aa8:	0f 92       	push	r0
     aaa:	0f b6       	in	r0, 0x3f	; 63
     aac:	0f 92       	push	r0
     aae:	11 24       	eor	r1, r1
     ab0:	0b b6       	in	r0, 0x3b	; 59
     ab2:	0f 92       	push	r0
     ab4:	2f 93       	push	r18
     ab6:	3f 93       	push	r19
     ab8:	4f 93       	push	r20
     aba:	5f 93       	push	r21
     abc:	6f 93       	push	r22
     abe:	7f 93       	push	r23
     ac0:	8f 93       	push	r24
     ac2:	9f 93       	push	r25
     ac4:	af 93       	push	r26
     ac6:	bf 93       	push	r27
     ac8:	ef 93       	push	r30
     aca:	ff 93       	push	r31

	if (u8_SPI_count == 4)
     acc:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
     ad0:	84 30       	cpi	r24, 0x04	; 4
     ad2:	e1 f4       	brne	.+56     	; 0xb0c <__vector_12+0x66>
	{
		//motor temp
		Set_ADC_Channel_ext(4, u8_txBuffer);
     ad4:	68 e3       	ldi	r22, 0x38	; 56
     ad6:	71 e0       	ldi	r23, 0x01	; 1
     ad8:	fb d1       	rcall	.+1014   	; 0xed0 <Set_ADC_Channel_ext>
		spi_trancieve(u8_txBuffer, u8_rxBuffer, 3, 1);
     ada:	21 e0       	ldi	r18, 0x01	; 1
     adc:	43 e0       	ldi	r20, 0x03	; 3
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	65 e3       	ldi	r22, 0x35	; 53
     ae2:	71 e0       	ldi	r23, 0x01	; 1
     ae4:	88 e3       	ldi	r24, 0x38	; 56
     ae6:	91 e0       	ldi	r25, 0x01	; 1
     ae8:	91 d4       	rcall	.+2338   	; 0x140c <spi_trancieve>
		u8_rxBuffer[1]&= ~(0b111<<5);
     aea:	e5 e3       	ldi	r30, 0x35	; 53
     aec:	f1 e0       	ldi	r31, 0x01	; 1
     aee:	81 81       	ldd	r24, Z+1	; 0x01
     af0:	8f 71       	andi	r24, 0x1F	; 31
     af2:	81 83       	std	Z+1, r24	; 0x01
		u16_ADC4_reg = (u8_rxBuffer[1] << 8 ) | u8_rxBuffer[2];
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	98 2f       	mov	r25, r24
     af8:	88 27       	eor	r24, r24
     afa:	22 81       	ldd	r18, Z+2	; 0x02
     afc:	82 2b       	or	r24, r18
     afe:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <u16_ADC4_reg+0x1>
     b02:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <u16_ADC4_reg>
		u8_SPI_count = 0 ;
     b06:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <u8_SPI_count>
     b0a:	28 c0       	rjmp	.+80     	; 0xb5c <__vector_12+0xb6>
	}
	
	if (u8_SPI_count == 3)
     b0c:	83 30       	cpi	r24, 0x03	; 3
     b0e:	21 f4       	brne	.+8      	; 0xb18 <__vector_12+0x72>
	{
		u8_SPI_count ++ ;
     b10:	84 e0       	ldi	r24, 0x04	; 4
     b12:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <u8_SPI_count>
     b16:	44 c0       	rjmp	.+136    	; 0xba0 <__vector_12+0xfa>
	}
	
	if (u8_SPI_count == 2)
     b18:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
     b1c:	82 30       	cpi	r24, 0x02	; 2
	{
		//batt volt
		Set_ADC_Channel_ext(2, u8_txBuffer);
     b1e:	f1 f4       	brne	.+60     	; 0xb5c <__vector_12+0xb6>
     b20:	68 e3       	ldi	r22, 0x38	; 56
     b22:	71 e0       	ldi	r23, 0x01	; 1
		spi_trancieve(u8_txBuffer, u8_rxBuffer, 3, 1);
     b24:	d5 d1       	rcall	.+938    	; 0xed0 <Set_ADC_Channel_ext>
     b26:	21 e0       	ldi	r18, 0x01	; 1
     b28:	43 e0       	ldi	r20, 0x03	; 3
     b2a:	50 e0       	ldi	r21, 0x00	; 0
     b2c:	65 e3       	ldi	r22, 0x35	; 53
     b2e:	71 e0       	ldi	r23, 0x01	; 1
     b30:	88 e3       	ldi	r24, 0x38	; 56
     b32:	91 e0       	ldi	r25, 0x01	; 1
		u8_rxBuffer[1]&= ~(0b111<<5);
     b34:	6b d4       	rcall	.+2262   	; 0x140c <spi_trancieve>
     b36:	e5 e3       	ldi	r30, 0x35	; 53
     b38:	f1 e0       	ldi	r31, 0x01	; 1
     b3a:	81 81       	ldd	r24, Z+1	; 0x01
     b3c:	8f 71       	andi	r24, 0x1F	; 31
		u16_ADC2_reg = (u8_rxBuffer[1] << 8 ) | u8_rxBuffer[2];
     b3e:	81 83       	std	Z+1, r24	; 0x01
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	98 2f       	mov	r25, r24
     b44:	88 27       	eor	r24, r24
     b46:	22 81       	ldd	r18, Z+2	; 0x02
     b48:	82 2b       	or	r24, r18
     b4a:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <u16_ADC2_reg+0x1>
     b4e:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <u16_ADC2_reg>
		u8_SPI_count ++ ;
     b52:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
     b56:	8f 5f       	subi	r24, 0xFF	; 255
     b58:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <u8_SPI_count>
	}
	
	if (u8_SPI_count == 1)
     b5c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
	{
		//batt current
		Set_ADC_Channel_ext(1, u8_txBuffer);
     b60:	81 30       	cpi	r24, 0x01	; 1
     b62:	f1 f4       	brne	.+60     	; 0xba0 <__vector_12+0xfa>
     b64:	68 e3       	ldi	r22, 0x38	; 56
     b66:	71 e0       	ldi	r23, 0x01	; 1
		spi_trancieve(u8_txBuffer, u8_rxBuffer, 3, 1);
     b68:	b3 d1       	rcall	.+870    	; 0xed0 <Set_ADC_Channel_ext>
     b6a:	21 e0       	ldi	r18, 0x01	; 1
     b6c:	43 e0       	ldi	r20, 0x03	; 3
     b6e:	50 e0       	ldi	r21, 0x00	; 0
     b70:	65 e3       	ldi	r22, 0x35	; 53
     b72:	71 e0       	ldi	r23, 0x01	; 1
     b74:	88 e3       	ldi	r24, 0x38	; 56
     b76:	91 e0       	ldi	r25, 0x01	; 1
		u8_rxBuffer[1]&= ~(0b111<<5);
     b78:	49 d4       	rcall	.+2194   	; 0x140c <spi_trancieve>
     b7a:	e5 e3       	ldi	r30, 0x35	; 53
     b7c:	f1 e0       	ldi	r31, 0x01	; 1
     b7e:	81 81       	ldd	r24, Z+1	; 0x01
     b80:	8f 71       	andi	r24, 0x1F	; 31
		u16_ADC1_reg = (u8_rxBuffer[1] << 8 ) | u8_rxBuffer[2];
     b82:	81 83       	std	Z+1, r24	; 0x01
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	98 2f       	mov	r25, r24
     b88:	88 27       	eor	r24, r24
     b8a:	22 81       	ldd	r18, Z+2	; 0x02
     b8c:	82 2b       	or	r24, r18
     b8e:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <u16_ADC1_reg+0x1>
     b92:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <u16_ADC1_reg>
		u8_SPI_count ++ ;
     b96:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
     b9a:	8f 5f       	subi	r24, 0xFF	; 255
	}	
	
	if (u8_SPI_count == 0)
     b9c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <u8_SPI_count>
     ba0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
	{
		//motor current
		Set_ADC_Channel_ext(0, u8_txBuffer);
     ba4:	81 11       	cpse	r24, r1
     ba6:	1e c0       	rjmp	.+60     	; 0xbe4 <__vector_12+0x13e>
		spi_trancieve(u8_txBuffer, u8_rxBuffer, 3, 1);
     ba8:	68 e3       	ldi	r22, 0x38	; 56
     baa:	71 e0       	ldi	r23, 0x01	; 1
     bac:	91 d1       	rcall	.+802    	; 0xed0 <Set_ADC_Channel_ext>
     bae:	21 e0       	ldi	r18, 0x01	; 1
     bb0:	43 e0       	ldi	r20, 0x03	; 3
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	65 e3       	ldi	r22, 0x35	; 53
     bb6:	71 e0       	ldi	r23, 0x01	; 1
		u8_rxBuffer[1]&= ~(0b111<<5);
     bb8:	88 e3       	ldi	r24, 0x38	; 56
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	27 d4       	rcall	.+2126   	; 0x140c <spi_trancieve>
     bbe:	e5 e3       	ldi	r30, 0x35	; 53
     bc0:	f1 e0       	ldi	r31, 0x01	; 1
		u16_ADC0_reg = (u8_rxBuffer[1] << 8 ) | u8_rxBuffer[2];
     bc2:	81 81       	ldd	r24, Z+1	; 0x01
     bc4:	8f 71       	andi	r24, 0x1F	; 31
     bc6:	81 83       	std	Z+1, r24	; 0x01
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	98 2f       	mov	r25, r24
     bcc:	88 27       	eor	r24, r24
     bce:	22 81       	ldd	r18, Z+2	; 0x02
     bd0:	82 2b       	or	r24, r18
     bd2:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <u16_ADC0_reg+0x1>
		u8_SPI_count ++ ;
     bd6:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <u16_ADC0_reg>
     bda:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <u8_SPI_count>
	}
	
	////////////////////INTERPRETATION OF RECEIVED ADC VALUES//////////////
	handle_current_sensor(&ComValues.f32_motor_current, u16_ADC0_reg);
     bde:	8f 5f       	subi	r24, 0xFF	; 255
     be0:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <u8_SPI_count>
     be4:	60 91 44 01 	lds	r22, 0x0144	; 0x800144 <u16_ADC0_reg>
     be8:	70 91 45 01 	lds	r23, 0x0145	; 0x800145 <u16_ADC0_reg+0x1>
	
	handle_current_sensor(&ComValues.f32_batt_current, u16_ADC1_reg);
     bec:	82 e1       	ldi	r24, 0x12	; 18
     bee:	91 e0       	ldi	r25, 0x01	; 1
     bf0:	7d d0       	rcall	.+250    	; 0xcec <handle_current_sensor>
     bf2:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <u16_ADC1_reg>
     bf6:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <u16_ADC1_reg+0x1>
	
	ComValues.f32_batt_volt = (float)u16_ADC2_reg/66.1 -0.37; // *5/4096 (12bit ADC with Vref = 5V) *0.1 (divider bridge 50V -> 5V) *coeff - offset(trimming)
     bfa:	86 e1       	ldi	r24, 0x16	; 22
     bfc:	91 e0       	ldi	r25, 0x01	; 1
     bfe:	76 d0       	rcall	.+236    	; 0xcec <handle_current_sensor>
     c00:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <u16_ADC2_reg>
     c04:	70 91 41 01 	lds	r23, 0x0141	; 0x800141 <u16_ADC2_reg+0x1>
     c08:	80 e0       	ldi	r24, 0x00	; 0
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	61 d5       	rcall	.+2754   	; 0x16d0 <__floatunsisf>
     c0e:	23 e3       	ldi	r18, 0x33	; 51
     c10:	33 e3       	ldi	r19, 0x33	; 51
     c12:	44 e8       	ldi	r20, 0x84	; 132
     c14:	52 e4       	ldi	r21, 0x42	; 66
     c16:	c3 d4       	rcall	.+2438   	; 0x159e <__divsf3>
     c18:	24 ea       	ldi	r18, 0xA4	; 164
     c1a:	30 e7       	ldi	r19, 0x70	; 112
     c1c:	4d eb       	ldi	r20, 0xBD	; 189
     c1e:	5e e3       	ldi	r21, 0x3E	; 62
     c20:	55 d4       	rcall	.+2218   	; 0x14cc <__subsf3>
     c22:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <ComValues+0x8>
     c26:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <ComValues+0x9>
	
	handle_temp_sensor(&ComValues.u8_motor_temp, u16_ADC4_reg);
     c2a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <ComValues+0xa>
     c2e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <ComValues+0xb>
     c32:	60 91 3e 01 	lds	r22, 0x013E	; 0x80013e <u16_ADC4_reg>
     c36:	70 91 3f 01 	lds	r23, 0x013F	; 0x80013f <u16_ADC4_reg+0x1>
}
     c3a:	8e e1       	ldi	r24, 0x1E	; 30
     c3c:	91 e0       	ldi	r25, 0x01	; 1
     c3e:	c6 d0       	rcall	.+396    	; 0xdcc <handle_temp_sensor>
     c40:	ff 91       	pop	r31
     c42:	ef 91       	pop	r30
     c44:	bf 91       	pop	r27
     c46:	af 91       	pop	r26
     c48:	9f 91       	pop	r25
     c4a:	8f 91       	pop	r24
     c4c:	7f 91       	pop	r23
     c4e:	6f 91       	pop	r22
     c50:	5f 91       	pop	r21
     c52:	4f 91       	pop	r20
     c54:	3f 91       	pop	r19
     c56:	2f 91       	pop	r18
     c58:	0f 90       	pop	r0
     c5a:	0b be       	out	0x3b, r0	; 59
     c5c:	0f 90       	pop	r0
     c5e:	0f be       	out	0x3f, r0	; 63
     c60:	0f 90       	pop	r0
     c62:	1f 90       	pop	r1
     c64:	18 95       	reti

00000c66 <__vector_6>:


ISR(INT5_vect)
{
     c66:	1f 92       	push	r1
     c68:	0f 92       	push	r0
     c6a:	0f b6       	in	r0, 0x3f	; 63
     c6c:	0f 92       	push	r0
     c6e:	11 24       	eor	r1, r1
     c70:	8f 93       	push	r24
     c72:	9f 93       	push	r25
	//printf("1");
	u16_speed_count ++ ;
     c74:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <u16_speed_count>
     c78:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <u16_speed_count+0x1>
     c7c:	01 96       	adiw	r24, 0x01	; 1
     c7e:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <u16_speed_count+0x1>
     c82:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <u16_speed_count>
}
     c86:	9f 91       	pop	r25
     c88:	8f 91       	pop	r24
     c8a:	0f 90       	pop	r0
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	0f 90       	pop	r0
     c90:	1f 90       	pop	r1
     c92:	18 95       	reti

00000c94 <pid_init>:
     c94:	8f 92       	push	r8
     c96:	9f 92       	push	r9
     c98:	af 92       	push	r10
     c9a:	bf 92       	push	r11
     c9c:	cf 92       	push	r12
     c9e:	df 92       	push	r13
     ca0:	ef 92       	push	r14
     ca2:	ff 92       	push	r15
     ca4:	0f 93       	push	r16
     ca6:	1f 93       	push	r17
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	fc 01       	movw	r30, r24
     cb2:	04 87       	std	Z+12, r16	; 0x0c
     cb4:	15 87       	std	Z+13, r17	; 0x0d
     cb6:	26 87       	std	Z+14, r18	; 0x0e
     cb8:	37 87       	std	Z+15, r19	; 0x0f
     cba:	c4 8a       	std	Z+20, r12	; 0x14
     cbc:	d5 8a       	std	Z+21, r13	; 0x15
     cbe:	e6 8a       	std	Z+22, r14	; 0x16
     cc0:	f7 8a       	std	Z+23, r15	; 0x17
     cc2:	80 8a       	std	Z+16, r8	; 0x10
     cc4:	91 8a       	std	Z+17, r9	; 0x11
     cc6:	a2 8a       	std	Z+18, r10	; 0x12
     cc8:	b3 8a       	std	Z+19, r11	; 0x13
     cca:	40 87       	std	Z+8, r20	; 0x08
     ccc:	51 87       	std	Z+9, r21	; 0x09
     cce:	62 87       	std	Z+10, r22	; 0x0a
     cd0:	73 87       	std	Z+11, r23	; 0x0b
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	df 90       	pop	r13
     ce0:	cf 90       	pop	r12
     ce2:	bf 90       	pop	r11
     ce4:	af 90       	pop	r10
     ce6:	9f 90       	pop	r9
     ce8:	8f 90       	pop	r8
     cea:	08 95       	ret

00000cec <handle_current_sensor>:
     cec:	8f 92       	push	r8
     cee:	9f 92       	push	r9
     cf0:	af 92       	push	r10
     cf2:	bf 92       	push	r11
     cf4:	cf 92       	push	r12
     cf6:	df 92       	push	r13
     cf8:	ef 92       	push	r14
     cfa:	ff 92       	push	r15
     cfc:	0f 93       	push	r16
     cfe:	1f 93       	push	r17
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	00 d0       	rcall	.+0      	; 0xd06 <handle_current_sensor+0x1a>
     d06:	00 d0       	rcall	.+0      	; 0xd08 <handle_current_sensor+0x1c>
     d08:	cd b7       	in	r28, 0x3d	; 61
     d0a:	de b7       	in	r29, 0x3e	; 62
     d0c:	8c 01       	movw	r16, r24
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	de d4       	rcall	.+2492   	; 0x16d0 <__floatunsisf>
     d14:	20 e0       	ldi	r18, 0x00	; 0
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	40 ea       	ldi	r20, 0xA0	; 160
     d1a:	50 e4       	ldi	r21, 0x40	; 64
     d1c:	8f d5       	rcall	.+2846   	; 0x183c <__mulsf3>
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	40 e8       	ldi	r20, 0x80	; 128
     d24:	59 e3       	ldi	r21, 0x39	; 57
     d26:	8a d5       	rcall	.+2836   	; 0x183c <__mulsf3>
     d28:	27 ed       	ldi	r18, 0xD7	; 215
     d2a:	33 ea       	ldi	r19, 0xA3	; 163
     d2c:	40 e1       	ldi	r20, 0x10	; 16
     d2e:	50 e4       	ldi	r21, 0x40	; 64
     d30:	cd d3       	rcall	.+1946   	; 0x14cc <__subsf3>
     d32:	23 ec       	ldi	r18, 0xC3	; 195
     d34:	34 e6       	ldi	r19, 0x64	; 100
     d36:	4a e2       	ldi	r20, 0x2A	; 42
     d38:	5d e3       	ldi	r21, 0x3D	; 61
     d3a:	31 d4       	rcall	.+2146   	; 0x159e <__divsf3>
     d3c:	20 e0       	ldi	r18, 0x00	; 0
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	40 e4       	ldi	r20, 0x40	; 64
     d42:	50 e4       	ldi	r21, 0x40	; 64
     d44:	2c d4       	rcall	.+2136   	; 0x159e <__divsf3>
     d46:	69 83       	std	Y+1, r22	; 0x01
     d48:	7a 83       	std	Y+2, r23	; 0x02
     d4a:	8b 83       	std	Y+3, r24	; 0x03
     d4c:	9c 83       	std	Y+4, r25	; 0x04
     d4e:	69 81       	ldd	r22, Y+1	; 0x01
     d50:	7a 81       	ldd	r23, Y+2	; 0x02
     d52:	8b 81       	ldd	r24, Y+3	; 0x03
     d54:	9c 81       	ldd	r25, Y+4	; 0x04
     d56:	2e ea       	ldi	r18, 0xAE	; 174
     d58:	37 e4       	ldi	r19, 0x47	; 71
     d5a:	41 ee       	ldi	r20, 0xE1	; 225
     d5c:	5f e3       	ldi	r21, 0x3F	; 63
     d5e:	b6 d3       	rcall	.+1900   	; 0x14cc <__subsf3>
     d60:	69 83       	std	Y+1, r22	; 0x01
     d62:	7a 83       	std	Y+2, r23	; 0x02
     d64:	8b 83       	std	Y+3, r24	; 0x03
     d66:	9c 83       	std	Y+4, r25	; 0x04
     d68:	89 80       	ldd	r8, Y+1	; 0x01
     d6a:	9a 80       	ldd	r9, Y+2	; 0x02
     d6c:	ab 80       	ldd	r10, Y+3	; 0x03
     d6e:	bc 80       	ldd	r11, Y+4	; 0x04
     d70:	26 e6       	ldi	r18, 0x66	; 102
     d72:	36 e6       	ldi	r19, 0x66	; 102
     d74:	46 e6       	ldi	r20, 0x66	; 102
     d76:	5f e3       	ldi	r21, 0x3F	; 63
     d78:	f8 01       	movw	r30, r16
     d7a:	60 81       	ld	r22, Z
     d7c:	71 81       	ldd	r23, Z+1	; 0x01
     d7e:	82 81       	ldd	r24, Z+2	; 0x02
     d80:	93 81       	ldd	r25, Z+3	; 0x03
     d82:	5c d5       	rcall	.+2744   	; 0x183c <__mulsf3>
     d84:	6b 01       	movw	r12, r22
     d86:	7c 01       	movw	r14, r24
     d88:	2d ec       	ldi	r18, 0xCD	; 205
     d8a:	3c ec       	ldi	r19, 0xCC	; 204
     d8c:	4c ec       	ldi	r20, 0xCC	; 204
     d8e:	5d e3       	ldi	r21, 0x3D	; 61
     d90:	c5 01       	movw	r24, r10
     d92:	b4 01       	movw	r22, r8
     d94:	53 d5       	rcall	.+2726   	; 0x183c <__mulsf3>
     d96:	9b 01       	movw	r18, r22
     d98:	ac 01       	movw	r20, r24
     d9a:	c7 01       	movw	r24, r14
     d9c:	b6 01       	movw	r22, r12
     d9e:	97 d3       	rcall	.+1838   	; 0x14ce <__addsf3>
     da0:	f8 01       	movw	r30, r16
     da2:	60 83       	st	Z, r22
     da4:	71 83       	std	Z+1, r23	; 0x01
     da6:	82 83       	std	Z+2, r24	; 0x02
     da8:	93 83       	std	Z+3, r25	; 0x03
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	0f 90       	pop	r0
     db0:	0f 90       	pop	r0
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	df 90       	pop	r13
     dc0:	cf 90       	pop	r12
     dc2:	bf 90       	pop	r11
     dc4:	af 90       	pop	r10
     dc6:	9f 90       	pop	r9
     dc8:	8f 90       	pop	r8
     dca:	08 95       	ret

00000dcc <handle_temp_sensor>:
     dcc:	0f 93       	push	r16
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	00 d0       	rcall	.+0      	; 0xdd6 <handle_temp_sensor+0xa>
     dd6:	00 d0       	rcall	.+0      	; 0xdd8 <handle_temp_sensor+0xc>
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
     ddc:	8c 01       	movw	r16, r24
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	76 d4       	rcall	.+2284   	; 0x16d0 <__floatunsisf>
     de4:	20 e0       	ldi	r18, 0x00	; 0
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	40 ea       	ldi	r20, 0xA0	; 160
     dea:	50 e4       	ldi	r21, 0x40	; 64
     dec:	27 d5       	rcall	.+2638   	; 0x183c <__mulsf3>
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	40 e8       	ldi	r20, 0x80	; 128
     df4:	59 e3       	ldi	r21, 0x39	; 57
     df6:	22 d5       	rcall	.+2628   	; 0x183c <__mulsf3>
     df8:	69 83       	std	Y+1, r22	; 0x01
     dfa:	7a 83       	std	Y+2, r23	; 0x02
     dfc:	8b 83       	std	Y+3, r24	; 0x03
     dfe:	9c 83       	std	Y+4, r25	; 0x04
     e00:	69 81       	ldd	r22, Y+1	; 0x01
     e02:	7a 81       	ldd	r23, Y+2	; 0x02
     e04:	8b 81       	ldd	r24, Y+3	; 0x03
     e06:	9c 81       	ldd	r25, Y+4	; 0x04
     e08:	2d ec       	ldi	r18, 0xCD	; 205
     e0a:	3c ec       	ldi	r19, 0xCC	; 204
     e0c:	4c e6       	ldi	r20, 0x6C	; 108
     e0e:	50 e4       	ldi	r21, 0x40	; 64
     e10:	c2 d3       	rcall	.+1924   	; 0x1596 <__cmpsf2>
     e12:	18 16       	cp	r1, r24
     e14:	8c f0       	brlt	.+34     	; 0xe38 <handle_temp_sensor+0x6c>
     e16:	69 81       	ldd	r22, Y+1	; 0x01
     e18:	7a 81       	ldd	r23, Y+2	; 0x02
     e1a:	8b 81       	ldd	r24, Y+3	; 0x03
     e1c:	9c 81       	ldd	r25, Y+4	; 0x04
     e1e:	20 e0       	ldi	r18, 0x00	; 0
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	40 ea       	ldi	r20, 0xA0	; 160
     e24:	51 e4       	ldi	r21, 0x41	; 65
     e26:	0a d5       	rcall	.+2580   	; 0x183c <__mulsf3>
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	40 eb       	ldi	r20, 0xB0	; 176
     e2e:	51 e4       	ldi	r21, 0x41	; 65
     e30:	4d d3       	rcall	.+1690   	; 0x14cc <__subsf3>
     e32:	22 d4       	rcall	.+2116   	; 0x1678 <__fixunssfsi>
     e34:	f8 01       	movw	r30, r16
     e36:	60 83       	st	Z, r22
     e38:	69 81       	ldd	r22, Y+1	; 0x01
     e3a:	7a 81       	ldd	r23, Y+2	; 0x02
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	9c 81       	ldd	r25, Y+4	; 0x04
     e40:	26 e6       	ldi	r18, 0x66	; 102
     e42:	36 e6       	ldi	r19, 0x66	; 102
     e44:	46 e9       	ldi	r20, 0x96	; 150
     e46:	50 e4       	ldi	r21, 0x40	; 64
     e48:	a6 d3       	rcall	.+1868   	; 0x1596 <__cmpsf2>
     e4a:	18 16       	cp	r1, r24
     e4c:	e4 f0       	brlt	.+56     	; 0xe86 <handle_temp_sensor+0xba>
     e4e:	69 81       	ldd	r22, Y+1	; 0x01
     e50:	7a 81       	ldd	r23, Y+2	; 0x02
     e52:	8b 81       	ldd	r24, Y+3	; 0x03
     e54:	9c 81       	ldd	r25, Y+4	; 0x04
     e56:	2d ec       	ldi	r18, 0xCD	; 205
     e58:	3c ec       	ldi	r19, 0xCC	; 204
     e5a:	4c e6       	ldi	r20, 0x6C	; 108
     e5c:	50 e4       	ldi	r21, 0x40	; 64
     e5e:	ea d4       	rcall	.+2516   	; 0x1834 <__gesf2>
     e60:	18 16       	cp	r1, r24
     e62:	8c f4       	brge	.+34     	; 0xe86 <handle_temp_sensor+0xba>
     e64:	69 81       	ldd	r22, Y+1	; 0x01
     e66:	7a 81       	ldd	r23, Y+2	; 0x02
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	9c 81       	ldd	r25, Y+4	; 0x04
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	4e e5       	ldi	r20, 0x5E	; 94
     e72:	52 e4       	ldi	r21, 0x42	; 66
     e74:	e3 d4       	rcall	.+2502   	; 0x183c <__mulsf3>
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e8       	ldi	r19, 0x80	; 128
     e7a:	4b e1       	ldi	r20, 0x1B	; 27
     e7c:	53 e4       	ldi	r21, 0x43	; 67
     e7e:	26 d3       	rcall	.+1612   	; 0x14cc <__subsf3>
     e80:	fb d3       	rcall	.+2038   	; 0x1678 <__fixunssfsi>
     e82:	f8 01       	movw	r30, r16
     e84:	60 83       	st	Z, r22
     e86:	69 81       	ldd	r22, Y+1	; 0x01
     e88:	7a 81       	ldd	r23, Y+2	; 0x02
     e8a:	8b 81       	ldd	r24, Y+3	; 0x03
     e8c:	9c 81       	ldd	r25, Y+4	; 0x04
     e8e:	26 e6       	ldi	r18, 0x66	; 102
     e90:	36 e6       	ldi	r19, 0x66	; 102
     e92:	46 e9       	ldi	r20, 0x96	; 150
     e94:	50 e4       	ldi	r21, 0x40	; 64
     e96:	ce d4       	rcall	.+2460   	; 0x1834 <__gesf2>
     e98:	18 16       	cp	r1, r24
     e9a:	8c f4       	brge	.+34     	; 0xebe <handle_temp_sensor+0xf2>
     e9c:	69 81       	ldd	r22, Y+1	; 0x01
     e9e:	7a 81       	ldd	r23, Y+2	; 0x02
     ea0:	8b 81       	ldd	r24, Y+3	; 0x03
     ea2:	9c 81       	ldd	r25, Y+4	; 0x04
     ea4:	20 e0       	ldi	r18, 0x00	; 0
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	48 e4       	ldi	r20, 0x48	; 72
     eaa:	53 e4       	ldi	r21, 0x43	; 67
     eac:	c7 d4       	rcall	.+2446   	; 0x183c <__mulsf3>
     eae:	20 e0       	ldi	r18, 0x00	; 0
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	42 e5       	ldi	r20, 0x52	; 82
     eb4:	54 e4       	ldi	r21, 0x44	; 68
     eb6:	0a d3       	rcall	.+1556   	; 0x14cc <__subsf3>
     eb8:	df d3       	rcall	.+1982   	; 0x1678 <__fixunssfsi>
     eba:	f8 01       	movw	r30, r16
     ebc:	60 83       	st	Z, r22
     ebe:	0f 90       	pop	r0
     ec0:	0f 90       	pop	r0
     ec2:	0f 90       	pop	r0
     ec4:	0f 90       	pop	r0
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	08 95       	ret

00000ed0 <Set_ADC_Channel_ext>:
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	88 30       	cpi	r24, 0x08	; 8
     ed4:	91 05       	cpc	r25, r1
     ed6:	88 f5       	brcc	.+98     	; 0xf3a <Set_ADC_Channel_ext+0x6a>
     ed8:	fc 01       	movw	r30, r24
     eda:	e6 5b       	subi	r30, 0xB6	; 182
     edc:	ff 4f       	sbci	r31, 0xFF	; 255
     ede:	11 c5       	rjmp	.+2594   	; 0x1902 <__tablejump2__>
     ee0:	86 e0       	ldi	r24, 0x06	; 6
     ee2:	fb 01       	movw	r30, r22
     ee4:	80 83       	st	Z, r24
     ee6:	11 82       	std	Z+1, r1	; 0x01
     ee8:	08 95       	ret
     eea:	86 e0       	ldi	r24, 0x06	; 6
     eec:	fb 01       	movw	r30, r22
     eee:	80 83       	st	Z, r24
     ef0:	80 e4       	ldi	r24, 0x40	; 64
     ef2:	81 83       	std	Z+1, r24	; 0x01
     ef4:	08 95       	ret
     ef6:	86 e0       	ldi	r24, 0x06	; 6
     ef8:	fb 01       	movw	r30, r22
     efa:	80 83       	st	Z, r24
     efc:	80 e8       	ldi	r24, 0x80	; 128
     efe:	81 83       	std	Z+1, r24	; 0x01
     f00:	08 95       	ret
     f02:	86 e0       	ldi	r24, 0x06	; 6
     f04:	fb 01       	movw	r30, r22
     f06:	80 83       	st	Z, r24
     f08:	80 ec       	ldi	r24, 0xC0	; 192
     f0a:	81 83       	std	Z+1, r24	; 0x01
     f0c:	08 95       	ret
     f0e:	87 e0       	ldi	r24, 0x07	; 7
     f10:	fb 01       	movw	r30, r22
     f12:	80 83       	st	Z, r24
     f14:	11 82       	std	Z+1, r1	; 0x01
     f16:	08 95       	ret
     f18:	87 e0       	ldi	r24, 0x07	; 7
     f1a:	fb 01       	movw	r30, r22
     f1c:	80 83       	st	Z, r24
     f1e:	80 e4       	ldi	r24, 0x40	; 64
     f20:	81 83       	std	Z+1, r24	; 0x01
     f22:	08 95       	ret
     f24:	87 e0       	ldi	r24, 0x07	; 7
     f26:	fb 01       	movw	r30, r22
     f28:	80 83       	st	Z, r24
     f2a:	80 e8       	ldi	r24, 0x80	; 128
     f2c:	81 83       	std	Z+1, r24	; 0x01
     f2e:	08 95       	ret
     f30:	87 e0       	ldi	r24, 0x07	; 7
     f32:	fb 01       	movw	r30, r22
     f34:	80 83       	st	Z, r24
     f36:	80 ec       	ldi	r24, 0xC0	; 192
     f38:	81 83       	std	Z+1, r24	; 0x01
     f3a:	08 95       	ret

00000f3c <__vector_18>:
     f3c:	1f 92       	push	r1
     f3e:	0f 92       	push	r0
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	0f 92       	push	r0
     f44:	11 24       	eor	r1, r1
     f46:	0b b6       	in	r0, 0x3b	; 59
     f48:	0f 92       	push	r0
     f4a:	2f 93       	push	r18
     f4c:	3f 93       	push	r19
     f4e:	4f 93       	push	r20
     f50:	5f 93       	push	r21
     f52:	6f 93       	push	r22
     f54:	8f 93       	push	r24
     f56:	9f 93       	push	r25
     f58:	af 93       	push	r26
     f5a:	bf 93       	push	r27
     f5c:	ef 93       	push	r30
     f5e:	ff 93       	push	r31
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	1f 92       	push	r1
     f66:	cd b7       	in	r28, 0x3d	; 61
     f68:	de b7       	in	r29, 0x3e	; 62
     f6a:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
     f6e:	80 ff       	sbrs	r24, 0
     f70:	47 c0       	rjmp	.+142    	; 0x1000 <__vector_18+0xc4>
     f72:	90 91 de 00 	lds	r25, 0x00DE	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
     f76:	90 ff       	sbrs	r25, 0
     f78:	43 c0       	rjmp	.+134    	; 0x1000 <__vector_18+0xc4>
     f7a:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     f7e:	ee ee       	ldi	r30, 0xEE	; 238
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	89 83       	std	Y+1, r24	; 0x01
     f86:	80 81       	ld	r24, Z
     f88:	8f 7b       	andi	r24, 0xBF	; 191
     f8a:	80 83       	st	Z, r24
     f8c:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tx_off>
     f90:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <tx_on>
     f94:	98 17       	cp	r25, r24
     f96:	89 f1       	breq	.+98     	; 0xffa <__vector_18+0xbe>
     f98:	8f 70       	andi	r24, 0x0F	; 15
     f9a:	2b e0       	ldi	r18, 0x0B	; 11
     f9c:	82 9f       	mul	r24, r18
     f9e:	c0 01       	movw	r24, r0
     fa0:	11 24       	eor	r1, r1
     fa2:	fc 01       	movw	r30, r24
     fa4:	e4 50       	subi	r30, 0x04	; 4
     fa6:	fe 4f       	sbci	r31, 0xFE	; 254
     fa8:	20 81       	ld	r18, Z
     faa:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
     fae:	20 81       	ld	r18, Z
     fb0:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
     fb4:	21 81       	ldd	r18, Z+1	; 0x01
     fb6:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
     fba:	23 81       	ldd	r18, Z+3	; 0x03
     fbc:	aa ef       	ldi	r26, 0xFA	; 250
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	2c 93       	st	X, r18
     fc2:	24 81       	ldd	r18, Z+4	; 0x04
     fc4:	2c 93       	st	X, r18
     fc6:	25 81       	ldd	r18, Z+5	; 0x05
     fc8:	2c 93       	st	X, r18
     fca:	26 81       	ldd	r18, Z+6	; 0x06
     fcc:	2c 93       	st	X, r18
     fce:	27 81       	ldd	r18, Z+7	; 0x07
     fd0:	2c 93       	st	X, r18
     fd2:	20 85       	ldd	r18, Z+8	; 0x08
     fd4:	2c 93       	st	X, r18
     fd6:	21 85       	ldd	r18, Z+9	; 0x09
     fd8:	2c 93       	st	X, r18
     fda:	22 85       	ldd	r18, Z+10	; 0x0a
     fdc:	2c 93       	st	X, r18
     fde:	fc 01       	movw	r30, r24
     fe0:	e2 50       	subi	r30, 0x02	; 2
     fe2:	fe 4f       	sbci	r31, 0xFE	; 254
     fe4:	80 81       	ld	r24, Z
     fe6:	8f 70       	andi	r24, 0x0F	; 15
     fe8:	80 64       	ori	r24, 0x40	; 64
     fea:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     fee:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <tx_off>
     ff2:	8f 5f       	subi	r24, 0xFF	; 255
     ff4:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <tx_off>
     ff8:	7d c0       	rjmp	.+250    	; 0x10f4 <__vector_18+0x1b8>
     ffa:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <tx_busy>
     ffe:	7a c0       	rjmp	.+244    	; 0x10f4 <__vector_18+0x1b8>
    1000:	81 ff       	sbrs	r24, 1
    1002:	78 c0       	rjmp	.+240    	; 0x10f4 <__vector_18+0x1b8>
    1004:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
    1008:	81 ff       	sbrs	r24, 1
    100a:	74 c0       	rjmp	.+232    	; 0x10f4 <__vector_18+0x1b8>
    100c:	80 e1       	ldi	r24, 0x10	; 16
    100e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1012:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <rx_on>
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <rx_off>
    101e:	29 1b       	sub	r18, r25
    1020:	31 09       	sbc	r19, r1
    1022:	2f 77       	andi	r18, 0x7F	; 127
    1024:	33 27       	eor	r19, r19
    1026:	20 31       	cpi	r18, 0x10	; 16
    1028:	31 05       	cpc	r19, r1
    102a:	0c f0       	brlt	.+2      	; 0x102e <__vector_18+0xf2>
    102c:	58 c0       	rjmp	.+176    	; 0x10de <__vector_18+0x1a2>
    102e:	e8 2f       	mov	r30, r24
    1030:	ef 70       	andi	r30, 0x0F	; 15
    1032:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    1036:	2e 2f       	mov	r18, r30
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	4b e0       	ldi	r20, 0x0B	; 11
    103c:	e4 9f       	mul	r30, r20
    103e:	f0 01       	movw	r30, r0
    1040:	11 24       	eor	r1, r1
    1042:	e4 5b       	subi	r30, 0xB4	; 180
    1044:	fe 4f       	sbci	r31, 0xFE	; 254
    1046:	9f 70       	andi	r25, 0x0F	; 15
    1048:	42 81       	ldd	r20, Z+2	; 0x02
    104a:	40 7f       	andi	r20, 0xF0	; 240
    104c:	94 2b       	or	r25, r20
    104e:	92 83       	std	Z+2, r25	; 0x02
    1050:	40 91 f2 00 	lds	r20, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1054:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1058:	40 7e       	andi	r20, 0xE0	; 224
    105a:	97 70       	andi	r25, 0x07	; 7
    105c:	94 2b       	or	r25, r20
    105e:	90 83       	st	Z, r25
    1060:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    1064:	91 83       	std	Z+1, r25	; 0x01
    1066:	aa ef       	ldi	r26, 0xFA	; 250
    1068:	b0 e0       	ldi	r27, 0x00	; 0
    106a:	9c 91       	ld	r25, X
    106c:	93 83       	std	Z+3, r25	; 0x03
    106e:	9c 91       	ld	r25, X
    1070:	94 83       	std	Z+4, r25	; 0x04
    1072:	9c 91       	ld	r25, X
    1074:	95 83       	std	Z+5, r25	; 0x05
    1076:	9c 91       	ld	r25, X
    1078:	96 83       	std	Z+6, r25	; 0x06
    107a:	9c 91       	ld	r25, X
    107c:	97 83       	std	Z+7, r25	; 0x07
    107e:	9c 91       	ld	r25, X
    1080:	90 87       	std	Z+8, r25	; 0x08
    1082:	9c 91       	ld	r25, X
    1084:	91 87       	std	Z+9, r25	; 0x09
    1086:	9c 91       	ld	r25, X
    1088:	92 87       	std	Z+10, r25	; 0x0a
    108a:	8f 5f       	subi	r24, 0xFF	; 255
    108c:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <rx_on>
    1090:	40 81       	ld	r20, Z
    1092:	42 95       	swap	r20
    1094:	46 95       	lsr	r20
    1096:	47 70       	andi	r20, 0x07	; 7
    1098:	51 81       	ldd	r21, Z+1	; 0x01
    109a:	65 2f       	mov	r22, r21
    109c:	66 0f       	add	r22, r22
    109e:	66 0f       	add	r22, r22
    10a0:	66 0f       	add	r22, r22
    10a2:	86 2f       	mov	r24, r22
    10a4:	84 2b       	or	r24, r20
    10a6:	95 2f       	mov	r25, r21
    10a8:	92 95       	swap	r25
    10aa:	96 95       	lsr	r25
    10ac:	97 70       	andi	r25, 0x07	; 7
    10ae:	89 2b       	or	r24, r25
    10b0:	b1 f4       	brne	.+44     	; 0x10de <__vector_18+0x1a2>
    10b2:	8b e0       	ldi	r24, 0x0B	; 11
    10b4:	82 9f       	mul	r24, r18
    10b6:	f0 01       	movw	r30, r0
    10b8:	83 9f       	mul	r24, r19
    10ba:	f0 0d       	add	r31, r0
    10bc:	11 24       	eor	r1, r1
    10be:	e4 5b       	subi	r30, 0xB4	; 180
    10c0:	fe 4f       	sbci	r31, 0xFE	; 254
    10c2:	83 81       	ldd	r24, Z+3	; 0x03
    10c4:	83 30       	cpi	r24, 0x03	; 3
    10c6:	59 f4       	brne	.+22     	; 0x10de <__vector_18+0x1a2>
				: "r0"
		);
	}
	else
	{
		__asm__ __volatile__ (
    10c8:	98 e0       	ldi	r25, 0x08	; 8
    10ca:	88 e1       	ldi	r24, 0x18	; 24
    10cc:	0f b6       	in	r0, 0x3f	; 63
    10ce:	f8 94       	cli
    10d0:	a8 95       	wdr
    10d2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    10dc:	ff cf       	rjmp	.-2      	; 0x10dc <__vector_18+0x1a0>
    10de:	ee ee       	ldi	r30, 0xEE	; 238
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	80 81       	ld	r24, Z
    10e4:	89 83       	std	Y+1, r24	; 0x01
    10e6:	89 81       	ldd	r24, Y+1	; 0x01
    10e8:	80 81       	ld	r24, Z
    10ea:	8f 7d       	andi	r24, 0xDF	; 223
    10ec:	80 83       	st	Z, r24
    10ee:	80 e8       	ldi	r24, 0x80	; 128
    10f0:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    10f4:	0f 90       	pop	r0
    10f6:	df 91       	pop	r29
    10f8:	cf 91       	pop	r28
    10fa:	ff 91       	pop	r31
    10fc:	ef 91       	pop	r30
    10fe:	bf 91       	pop	r27
    1100:	af 91       	pop	r26
    1102:	9f 91       	pop	r25
    1104:	8f 91       	pop	r24
    1106:	6f 91       	pop	r22
    1108:	5f 91       	pop	r21
    110a:	4f 91       	pop	r20
    110c:	3f 91       	pop	r19
    110e:	2f 91       	pop	r18
    1110:	0f 90       	pop	r0
    1112:	0b be       	out	0x3b, r0	; 59
    1114:	0f 90       	pop	r0
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	0f 90       	pop	r0
    111a:	1f 90       	pop	r1
    111c:	18 95       	reti

0000111e <can_init>:
    111e:	cf 93       	push	r28
    1120:	df 93       	push	r29
    1122:	e8 ed       	ldi	r30, 0xD8	; 216
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	21 e0       	ldi	r18, 0x01	; 1
    1128:	20 83       	st	Z, r18
    112a:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    112e:	2c e0       	ldi	r18, 0x0C	; 12
    1130:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    1134:	27 e3       	ldi	r18, 0x37	; 55
    1136:	20 93 e4 00 	sts	0x00E4, r18	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    113a:	10 92 e7 00 	sts	0x00E7, r1	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
    113e:	10 92 e6 00 	sts	0x00E6, r1	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
    1142:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1146:	10 92 e8 00 	sts	0x00E8, r1	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    114a:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    114e:	10 92 e5 00 	sts	0x00E5, r1	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    1152:	cd ee       	ldi	r28, 0xED	; 237
    1154:	d0 e0       	ldi	r29, 0x00	; 0
    1156:	18 82       	st	Y, r1
    1158:	ae ee       	ldi	r26, 0xEE	; 238
    115a:	b0 e0       	ldi	r27, 0x00	; 0
    115c:	1c 92       	st	X, r1
    115e:	20 e1       	ldi	r18, 0x10	; 16
    1160:	28 83       	st	Y, r18
    1162:	1c 92       	st	X, r1
    1164:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
    1168:	28 2f       	mov	r18, r24
    116a:	22 95       	swap	r18
    116c:	22 0f       	add	r18, r18
    116e:	20 7e       	andi	r18, 0xE0	; 224
    1170:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
    1174:	96 95       	lsr	r25
    1176:	87 95       	ror	r24
    1178:	96 95       	lsr	r25
    117a:	87 95       	ror	r24
    117c:	96 95       	lsr	r25
    117e:	87 95       	ror	r24
    1180:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
    1184:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1188:	86 2f       	mov	r24, r22
    118a:	82 95       	swap	r24
    118c:	88 0f       	add	r24, r24
    118e:	80 7e       	andi	r24, 0xE0	; 224
    1190:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1194:	76 95       	lsr	r23
    1196:	67 95       	ror	r22
    1198:	76 95       	lsr	r23
    119a:	67 95       	ror	r22
    119c:	76 95       	lsr	r23
    119e:	67 95       	ror	r22
    11a0:	60 93 f3 00 	sts	0x00F3, r22	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    11a4:	80 e8       	ldi	r24, 0x80	; 128
    11a6:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    11aa:	83 e0       	ldi	r24, 0x03	; 3
    11ac:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
    11b0:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <__TEXT_REGION_LENGTH__+0x7e00de>
    11b4:	80 eb       	ldi	r24, 0xB0	; 176
    11b6:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
    11ba:	82 e0       	ldi	r24, 0x02	; 2
    11bc:	80 83       	st	Z, r24
    11be:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <reset>
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	08 95       	ret

000011c8 <can_read_message_if_new>:
    11c8:	cf 93       	push	r28
    11ca:	df 93       	push	r29
    11cc:	ec 01       	movw	r28, r24
    11ce:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <rx_off>
    11d2:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <rx_on>
    11d6:	24 17       	cp	r18, r20
    11d8:	89 f1       	breq	.+98     	; 0x123c <can_read_message_if_new+0x74>
    11da:	a4 2f       	mov	r26, r20
    11dc:	af 70       	andi	r26, 0x0F	; 15
    11de:	8b e0       	ldi	r24, 0x0B	; 11
    11e0:	a8 9f       	mul	r26, r24
    11e2:	b0 01       	movw	r22, r0
    11e4:	11 24       	eor	r1, r1
    11e6:	fb 01       	movw	r30, r22
    11e8:	e4 5b       	subi	r30, 0xB4	; 180
    11ea:	fe 4f       	sbci	r31, 0xFE	; 254
    11ec:	20 81       	ld	r18, Z
    11ee:	22 95       	swap	r18
    11f0:	26 95       	lsr	r18
    11f2:	27 70       	andi	r18, 0x07	; 7
    11f4:	31 81       	ldd	r19, Z+1	; 0x01
    11f6:	53 2f       	mov	r21, r19
    11f8:	55 0f       	add	r21, r21
    11fa:	55 0f       	add	r21, r21
    11fc:	55 0f       	add	r21, r21
    11fe:	25 2b       	or	r18, r21
    1200:	32 95       	swap	r19
    1202:	36 95       	lsr	r19
    1204:	37 70       	andi	r19, 0x07	; 7
    1206:	28 83       	st	Y, r18
    1208:	39 83       	std	Y+1, r19	; 0x01
    120a:	fb 01       	movw	r30, r22
    120c:	e2 5b       	subi	r30, 0xB2	; 178
    120e:	fe 4f       	sbci	r31, 0xFE	; 254
    1210:	20 81       	ld	r18, Z
    1212:	2f 70       	andi	r18, 0x0F	; 15
    1214:	2a 83       	std	Y+2, r18	; 0x02
    1216:	22 23       	and	r18, r18
    1218:	99 f0       	breq	.+38     	; 0x1240 <can_read_message_if_new+0x78>
    121a:	db 01       	movw	r26, r22
    121c:	a1 5b       	subi	r26, 0xB1	; 177
    121e:	be 4f       	sbci	r27, 0xFE	; 254
    1220:	fe 01       	movw	r30, r28
    1222:	33 96       	adiw	r30, 0x03	; 3
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	2d 5f       	subi	r18, 0xFD	; 253
    1228:	3f 4f       	sbci	r19, 0xFF	; 255
    122a:	ce 01       	movw	r24, r28
    122c:	82 0f       	add	r24, r18
    122e:	93 1f       	adc	r25, r19
    1230:	2d 91       	ld	r18, X+
    1232:	21 93       	st	Z+, r18
    1234:	e8 17       	cp	r30, r24
    1236:	f9 07       	cpc	r31, r25
    1238:	d9 f7       	brne	.-10     	; 0x1230 <can_read_message_if_new+0x68>
    123a:	02 c0       	rjmp	.+4      	; 0x1240 <can_read_message_if_new+0x78>
    123c:	80 e0       	ldi	r24, 0x00	; 0
    123e:	04 c0       	rjmp	.+8      	; 0x1248 <can_read_message_if_new+0x80>
    1240:	4f 5f       	subi	r20, 0xFF	; 255
    1242:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <rx_off>
    1246:	81 e0       	ldi	r24, 0x01	; 1
    1248:	df 91       	pop	r29
    124a:	cf 91       	pop	r28
    124c:	08 95       	ret

0000124e <can_send_message>:
    124e:	cf 93       	push	r28
    1250:	df 93       	push	r29
    1252:	fc 01       	movw	r30, r24
    1254:	ab ed       	ldi	r26, 0xDB	; 219
    1256:	b0 e0       	ldi	r27, 0x00	; 0
    1258:	8c 91       	ld	r24, X
    125a:	8f 77       	andi	r24, 0x7F	; 127
    125c:	8c 93       	st	X, r24
    125e:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <tx_busy>
    1262:	81 11       	cpse	r24, r1
    1264:	27 c0       	rjmp	.+78     	; 0x12b4 <can_send_message+0x66>
    1266:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    126a:	80 81       	ld	r24, Z
    126c:	82 95       	swap	r24
    126e:	88 0f       	add	r24, r24
    1270:	80 7e       	andi	r24, 0xE0	; 224
    1272:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1276:	80 81       	ld	r24, Z
    1278:	91 81       	ldd	r25, Z+1	; 0x01
    127a:	96 95       	lsr	r25
    127c:	87 95       	ror	r24
    127e:	96 95       	lsr	r25
    1280:	87 95       	ror	r24
    1282:	96 95       	lsr	r25
    1284:	87 95       	ror	r24
    1286:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    128a:	df 01       	movw	r26, r30
    128c:	13 96       	adiw	r26, 0x03	; 3
    128e:	9f 01       	movw	r18, r30
    1290:	25 5f       	subi	r18, 0xF5	; 245
    1292:	3f 4f       	sbci	r19, 0xFF	; 255
    1294:	ca ef       	ldi	r28, 0xFA	; 250
    1296:	d0 e0       	ldi	r29, 0x00	; 0
    1298:	9d 91       	ld	r25, X+
    129a:	98 83       	st	Y, r25
    129c:	a2 17       	cp	r26, r18
    129e:	b3 07       	cpc	r27, r19
    12a0:	d9 f7       	brne	.-10     	; 0x1298 <can_send_message+0x4a>
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <tx_busy>
    12a8:	82 81       	ldd	r24, Z+2	; 0x02
    12aa:	80 64       	ori	r24, 0x40	; 64
    12ac:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	43 c0       	rjmp	.+134    	; 0x133a <can_send_message+0xec>
    12b4:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <tx_on>
    12b8:	82 2f       	mov	r24, r18
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	30 91 4b 01 	lds	r19, 0x014B	; 0x80014b <tx_off>
    12c0:	83 1b       	sub	r24, r19
    12c2:	91 09       	sbc	r25, r1
    12c4:	8f 77       	andi	r24, 0x7F	; 127
    12c6:	99 27       	eor	r25, r25
    12c8:	40 97       	sbiw	r24, 0x10	; 16
    12ca:	b1 f1       	breq	.+108    	; 0x1338 <can_send_message+0xea>
    12cc:	a2 2f       	mov	r26, r18
    12ce:	af 70       	andi	r26, 0x0F	; 15
    12d0:	8b e0       	ldi	r24, 0x0B	; 11
    12d2:	a8 9f       	mul	r26, r24
    12d4:	d0 01       	movw	r26, r0
    12d6:	11 24       	eor	r1, r1
    12d8:	ed 01       	movw	r28, r26
    12da:	c4 50       	subi	r28, 0x04	; 4
    12dc:	de 4f       	sbci	r29, 0xFE	; 254
    12de:	80 81       	ld	r24, Z
    12e0:	98 2f       	mov	r25, r24
    12e2:	92 95       	swap	r25
    12e4:	99 0f       	add	r25, r25
    12e6:	90 7e       	andi	r25, 0xE0	; 224
    12e8:	88 81       	ld	r24, Y
    12ea:	8f 71       	andi	r24, 0x1F	; 31
    12ec:	89 2b       	or	r24, r25
    12ee:	88 83       	st	Y, r24
    12f0:	80 81       	ld	r24, Z
    12f2:	98 2f       	mov	r25, r24
    12f4:	96 95       	lsr	r25
    12f6:	96 95       	lsr	r25
    12f8:	96 95       	lsr	r25
    12fa:	89 81       	ldd	r24, Y+1	; 0x01
    12fc:	80 7e       	andi	r24, 0xE0	; 224
    12fe:	89 2b       	or	r24, r25
    1300:	89 83       	std	Y+1, r24	; 0x01
    1302:	91 81       	ldd	r25, Z+1	; 0x01
    1304:	92 95       	swap	r25
    1306:	99 0f       	add	r25, r25
    1308:	90 7e       	andi	r25, 0xE0	; 224
    130a:	8f 71       	andi	r24, 0x1F	; 31
    130c:	89 2b       	or	r24, r25
    130e:	89 83       	std	Y+1, r24	; 0x01
    1310:	82 81       	ldd	r24, Z+2	; 0x02
    1312:	98 2f       	mov	r25, r24
    1314:	9f 70       	andi	r25, 0x0F	; 15
    1316:	8a 81       	ldd	r24, Y+2	; 0x02
    1318:	80 7f       	andi	r24, 0xF0	; 240
    131a:	89 2b       	or	r24, r25
    131c:	8a 83       	std	Y+2, r24	; 0x02
    131e:	a1 50       	subi	r26, 0x01	; 1
    1320:	be 4f       	sbci	r27, 0xFE	; 254
    1322:	33 96       	adiw	r30, 0x03	; 3
    1324:	88 e0       	ldi	r24, 0x08	; 8
    1326:	01 90       	ld	r0, Z+
    1328:	0d 92       	st	X+, r0
    132a:	8a 95       	dec	r24
    132c:	e1 f7       	brne	.-8      	; 0x1326 <can_send_message+0xd8>
    132e:	2f 5f       	subi	r18, 0xFF	; 255
    1330:	20 93 4a 01 	sts	0x014A, r18	; 0x80014a <tx_on>
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	01 c0       	rjmp	.+2      	; 0x133a <can_send_message+0xec>
    1338:	80 e0       	ldi	r24, 0x00	; 0
    133a:	eb ed       	ldi	r30, 0xDB	; 219
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	90 81       	ld	r25, Z
    1340:	90 68       	ori	r25, 0x80	; 128
    1342:	90 83       	st	Z, r25
    1344:	df 91       	pop	r29
    1346:	cf 91       	pop	r28
    1348:	08 95       	ret

0000134a <pwm_init>:
    134a:	8e b1       	in	r24, 0x0e	; 14
    134c:	87 7e       	andi	r24, 0xE7	; 231
    134e:	8e b9       	out	0x0e, r24	; 14
    1350:	8d b1       	in	r24, 0x0d	; 13
    1352:	88 61       	ori	r24, 0x18	; 24
    1354:	8d b9       	out	0x0d, r24	; 13
    1356:	a1 e9       	ldi	r26, 0x91	; 145
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	8c 91       	ld	r24, X
    135c:	88 61       	ori	r24, 0x18	; 24
    135e:	8c 93       	st	X, r24
    1360:	e0 e9       	ldi	r30, 0x90	; 144
    1362:	f0 e0       	ldi	r31, 0x00	; 0
    1364:	80 81       	ld	r24, Z
    1366:	82 60       	ori	r24, 0x02	; 2
    1368:	80 83       	st	Z, r24
    136a:	80 81       	ld	r24, Z
    136c:	8e 7f       	andi	r24, 0xFE	; 254
    136e:	80 83       	st	Z, r24
    1370:	80 81       	ld	r24, Z
    1372:	80 68       	ori	r24, 0x80	; 128
    1374:	80 83       	st	Z, r24
    1376:	80 81       	ld	r24, Z
    1378:	8f 7b       	andi	r24, 0xBF	; 191
    137a:	80 83       	st	Z, r24
    137c:	80 81       	ld	r24, Z
    137e:	80 62       	ori	r24, 0x20	; 32
    1380:	80 83       	st	Z, r24
    1382:	80 81       	ld	r24, Z
    1384:	80 61       	ori	r24, 0x10	; 16
    1386:	80 83       	st	Z, r24
    1388:	8c 91       	ld	r24, X
    138a:	81 60       	ori	r24, 0x01	; 1
    138c:	8c 93       	st	X, r24
    138e:	8c 91       	ld	r24, X
    1390:	89 7f       	andi	r24, 0xF9	; 249
    1392:	8c 93       	st	X, r24
    1394:	e6 e9       	ldi	r30, 0x96	; 150
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	89 e9       	ldi	r24, 0x99	; 153
    139a:	91 e0       	ldi	r25, 0x01	; 1
    139c:	91 83       	std	Z+1, r25	; 0x01
    139e:	80 83       	st	Z, r24
    13a0:	60 81       	ld	r22, Z
    13a2:	71 81       	ldd	r23, Z+1	; 0x01
    13a4:	80 e0       	ldi	r24, 0x00	; 0
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	93 d1       	rcall	.+806    	; 0x16d0 <__floatunsisf>
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e0       	ldi	r20, 0x00	; 0
    13b0:	5f e3       	ldi	r21, 0x3F	; 63
    13b2:	44 d2       	rcall	.+1160   	; 0x183c <__mulsf3>
    13b4:	5c d1       	rcall	.+696    	; 0x166e <__fixsfsi>
    13b6:	e8 e9       	ldi	r30, 0x98	; 152
    13b8:	f0 e0       	ldi	r31, 0x00	; 0
    13ba:	71 83       	std	Z+1, r23	; 0x01
    13bc:	60 83       	st	Z, r22
    13be:	80 81       	ld	r24, Z
    13c0:	91 81       	ldd	r25, Z+1	; 0x01
    13c2:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    13c6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    13ca:	08 95       	ret

000013cc <rgbled_turn_off>:
    13cc:	95 b1       	in	r25, 0x05	; 5
    13ce:	89 2b       	or	r24, r25
    13d0:	85 b9       	out	0x05, r24	; 5
    13d2:	08 95       	ret

000013d4 <rgbled_init>:
    13d4:	84 b1       	in	r24, 0x04	; 4
    13d6:	80 6e       	ori	r24, 0xE0	; 224
    13d8:	84 b9       	out	0x04, r24	; 4
    13da:	80 ee       	ldi	r24, 0xE0	; 224
    13dc:	f7 cf       	rjmp	.-18     	; 0x13cc <rgbled_turn_off>
    13de:	08 95       	ret

000013e0 <rgbled_turn_on>:
    13e0:	95 b1       	in	r25, 0x05	; 5
    13e2:	80 95       	com	r24
    13e4:	98 23       	and	r25, r24
    13e6:	95 b9       	out	0x05, r25	; 5
    13e8:	08 95       	ret

000013ea <spi_init>:
    13ea:	94 b1       	in	r25, 0x04	; 4
    13ec:	97 60       	ori	r25, 0x07	; 7
    13ee:	94 b9       	out	0x04, r25	; 4
    13f0:	82 fb       	bst	r24, 2
    13f2:	99 27       	eor	r25, r25
    13f4:	90 f9       	bld	r25, 0
    13f6:	28 2f       	mov	r18, r24
    13f8:	22 70       	andi	r18, 0x02	; 2
    13fa:	81 70       	andi	r24, 0x01	; 1
    13fc:	80 65       	ori	r24, 0x50	; 80
    13fe:	82 2b       	or	r24, r18
    1400:	8c bd       	out	0x2c, r24	; 44
    1402:	8c b5       	in	r24, 0x2c	; 44
    1404:	83 7f       	andi	r24, 0xF3	; 243
    1406:	8c bd       	out	0x2c, r24	; 44
    1408:	9d bd       	out	0x2d, r25	; 45
    140a:	08 95       	ret

0000140c <spi_trancieve>:
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	ec 01       	movw	r28, r24
    1412:	28 98       	cbi	0x05, 0	; 5
    1414:	41 15       	cp	r20, r1
    1416:	51 05       	cpc	r21, r1
    1418:	c1 f0       	breq	.+48     	; 0x144a <spi_trancieve+0x3e>
    141a:	fb 01       	movw	r30, r22
    141c:	dc 01       	movw	r26, r24
    141e:	46 0f       	add	r20, r22
    1420:	57 1f       	adc	r21, r23
    1422:	8f ef       	ldi	r24, 0xFF	; 255
    1424:	20 97       	sbiw	r28, 0x00	; 0
    1426:	11 f0       	breq	.+4      	; 0x142c <spi_trancieve+0x20>
    1428:	9c 91       	ld	r25, X
    142a:	01 c0       	rjmp	.+2      	; 0x142e <spi_trancieve+0x22>
    142c:	98 2f       	mov	r25, r24
    142e:	9e bd       	out	0x2e, r25	; 46
    1430:	0d b4       	in	r0, 0x2d	; 45
    1432:	07 fe       	sbrs	r0, 7
    1434:	fd cf       	rjmp	.-6      	; 0x1430 <spi_trancieve+0x24>
    1436:	61 15       	cp	r22, r1
    1438:	71 05       	cpc	r23, r1
    143a:	11 f0       	breq	.+4      	; 0x1440 <spi_trancieve+0x34>
    143c:	9e b5       	in	r25, 0x2e	; 46
    143e:	90 83       	st	Z, r25
    1440:	31 96       	adiw	r30, 0x01	; 1
    1442:	11 96       	adiw	r26, 0x01	; 1
    1444:	e4 17       	cp	r30, r20
    1446:	f5 07       	cpc	r31, r21
    1448:	69 f7       	brne	.-38     	; 0x1424 <spi_trancieve+0x18>
    144a:	21 11       	cpse	r18, r1
    144c:	28 9a       	sbi	0x05, 0	; 5
    144e:	df 91       	pop	r29
    1450:	cf 91       	pop	r28
    1452:	08 95       	ret

00001454 <__vector_17>:
    1454:	1f 92       	push	r1
    1456:	0f 92       	push	r0
    1458:	0f b6       	in	r0, 0x3f	; 63
    145a:	0f 92       	push	r0
    145c:	11 24       	eor	r1, r1
    145e:	0b b6       	in	r0, 0x3b	; 59
    1460:	0f 92       	push	r0
    1462:	2f 93       	push	r18
    1464:	3f 93       	push	r19
    1466:	4f 93       	push	r20
    1468:	5f 93       	push	r21
    146a:	6f 93       	push	r22
    146c:	7f 93       	push	r23
    146e:	8f 93       	push	r24
    1470:	af 93       	push	r26
    1472:	bf 93       	push	r27
    1474:	ef 93       	push	r30
    1476:	ff 93       	push	r31
    1478:	ac ec       	ldi	r26, 0xCC	; 204
    147a:	b2 e0       	ldi	r27, 0x02	; 2
    147c:	ec ea       	ldi	r30, 0xAC	; 172
    147e:	f2 e0       	ldi	r31, 0x02	; 2
    1480:	2c ec       	ldi	r18, 0xCC	; 204
    1482:	32 e0       	ldi	r19, 0x02	; 2
    1484:	8d 91       	ld	r24, X+
    1486:	88 23       	and	r24, r24
    1488:	59 f0       	breq	.+22     	; 0x14a0 <__vector_17+0x4c>
    148a:	40 81       	ld	r20, Z
    148c:	51 81       	ldd	r21, Z+1	; 0x01
    148e:	62 81       	ldd	r22, Z+2	; 0x02
    1490:	73 81       	ldd	r23, Z+3	; 0x03
    1492:	50 5e       	subi	r21, 0xE0	; 224
    1494:	6f 4f       	sbci	r22, 0xFF	; 255
    1496:	7f 4f       	sbci	r23, 0xFF	; 255
    1498:	40 83       	st	Z, r20
    149a:	51 83       	std	Z+1, r21	; 0x01
    149c:	62 83       	std	Z+2, r22	; 0x02
    149e:	73 83       	std	Z+3, r23	; 0x03
    14a0:	34 96       	adiw	r30, 0x04	; 4
    14a2:	e2 17       	cp	r30, r18
    14a4:	f3 07       	cpc	r31, r19
    14a6:	71 f7       	brne	.-36     	; 0x1484 <__vector_17+0x30>
    14a8:	ff 91       	pop	r31
    14aa:	ef 91       	pop	r30
    14ac:	bf 91       	pop	r27
    14ae:	af 91       	pop	r26
    14b0:	8f 91       	pop	r24
    14b2:	7f 91       	pop	r23
    14b4:	6f 91       	pop	r22
    14b6:	5f 91       	pop	r21
    14b8:	4f 91       	pop	r20
    14ba:	3f 91       	pop	r19
    14bc:	2f 91       	pop	r18
    14be:	0f 90       	pop	r0
    14c0:	0b be       	out	0x3b, r0	; 59
    14c2:	0f 90       	pop	r0
    14c4:	0f be       	out	0x3f, r0	; 63
    14c6:	0f 90       	pop	r0
    14c8:	1f 90       	pop	r1
    14ca:	18 95       	reti

000014cc <__subsf3>:
    14cc:	50 58       	subi	r21, 0x80	; 128

000014ce <__addsf3>:
    14ce:	bb 27       	eor	r27, r27
    14d0:	aa 27       	eor	r26, r26
    14d2:	0e d0       	rcall	.+28     	; 0x14f0 <__addsf3x>
    14d4:	75 c1       	rjmp	.+746    	; 0x17c0 <__fp_round>
    14d6:	66 d1       	rcall	.+716    	; 0x17a4 <__fp_pscA>
    14d8:	30 f0       	brcs	.+12     	; 0x14e6 <__addsf3+0x18>
    14da:	6b d1       	rcall	.+726    	; 0x17b2 <__fp_pscB>
    14dc:	20 f0       	brcs	.+8      	; 0x14e6 <__addsf3+0x18>
    14de:	31 f4       	brne	.+12     	; 0x14ec <__addsf3+0x1e>
    14e0:	9f 3f       	cpi	r25, 0xFF	; 255
    14e2:	11 f4       	brne	.+4      	; 0x14e8 <__addsf3+0x1a>
    14e4:	1e f4       	brtc	.+6      	; 0x14ec <__addsf3+0x1e>
    14e6:	5b c1       	rjmp	.+694    	; 0x179e <__fp_nan>
    14e8:	0e f4       	brtc	.+2      	; 0x14ec <__addsf3+0x1e>
    14ea:	e0 95       	com	r30
    14ec:	e7 fb       	bst	r30, 7
    14ee:	51 c1       	rjmp	.+674    	; 0x1792 <__fp_inf>

000014f0 <__addsf3x>:
    14f0:	e9 2f       	mov	r30, r25
    14f2:	77 d1       	rcall	.+750    	; 0x17e2 <__fp_split3>
    14f4:	80 f3       	brcs	.-32     	; 0x14d6 <__addsf3+0x8>
    14f6:	ba 17       	cp	r27, r26
    14f8:	62 07       	cpc	r22, r18
    14fa:	73 07       	cpc	r23, r19
    14fc:	84 07       	cpc	r24, r20
    14fe:	95 07       	cpc	r25, r21
    1500:	18 f0       	brcs	.+6      	; 0x1508 <__addsf3x+0x18>
    1502:	71 f4       	brne	.+28     	; 0x1520 <__addsf3x+0x30>
    1504:	9e f5       	brtc	.+102    	; 0x156c <__addsf3x+0x7c>
    1506:	8f c1       	rjmp	.+798    	; 0x1826 <__fp_zero>
    1508:	0e f4       	brtc	.+2      	; 0x150c <__addsf3x+0x1c>
    150a:	e0 95       	com	r30
    150c:	0b 2e       	mov	r0, r27
    150e:	ba 2f       	mov	r27, r26
    1510:	a0 2d       	mov	r26, r0
    1512:	0b 01       	movw	r0, r22
    1514:	b9 01       	movw	r22, r18
    1516:	90 01       	movw	r18, r0
    1518:	0c 01       	movw	r0, r24
    151a:	ca 01       	movw	r24, r20
    151c:	a0 01       	movw	r20, r0
    151e:	11 24       	eor	r1, r1
    1520:	ff 27       	eor	r31, r31
    1522:	59 1b       	sub	r21, r25
    1524:	99 f0       	breq	.+38     	; 0x154c <__addsf3x+0x5c>
    1526:	59 3f       	cpi	r21, 0xF9	; 249
    1528:	50 f4       	brcc	.+20     	; 0x153e <__addsf3x+0x4e>
    152a:	50 3e       	cpi	r21, 0xE0	; 224
    152c:	68 f1       	brcs	.+90     	; 0x1588 <__addsf3x+0x98>
    152e:	1a 16       	cp	r1, r26
    1530:	f0 40       	sbci	r31, 0x00	; 0
    1532:	a2 2f       	mov	r26, r18
    1534:	23 2f       	mov	r18, r19
    1536:	34 2f       	mov	r19, r20
    1538:	44 27       	eor	r20, r20
    153a:	58 5f       	subi	r21, 0xF8	; 248
    153c:	f3 cf       	rjmp	.-26     	; 0x1524 <__addsf3x+0x34>
    153e:	46 95       	lsr	r20
    1540:	37 95       	ror	r19
    1542:	27 95       	ror	r18
    1544:	a7 95       	ror	r26
    1546:	f0 40       	sbci	r31, 0x00	; 0
    1548:	53 95       	inc	r21
    154a:	c9 f7       	brne	.-14     	; 0x153e <__addsf3x+0x4e>
    154c:	7e f4       	brtc	.+30     	; 0x156c <__addsf3x+0x7c>
    154e:	1f 16       	cp	r1, r31
    1550:	ba 0b       	sbc	r27, r26
    1552:	62 0b       	sbc	r22, r18
    1554:	73 0b       	sbc	r23, r19
    1556:	84 0b       	sbc	r24, r20
    1558:	ba f0       	brmi	.+46     	; 0x1588 <__addsf3x+0x98>
    155a:	91 50       	subi	r25, 0x01	; 1
    155c:	a1 f0       	breq	.+40     	; 0x1586 <__addsf3x+0x96>
    155e:	ff 0f       	add	r31, r31
    1560:	bb 1f       	adc	r27, r27
    1562:	66 1f       	adc	r22, r22
    1564:	77 1f       	adc	r23, r23
    1566:	88 1f       	adc	r24, r24
    1568:	c2 f7       	brpl	.-16     	; 0x155a <__addsf3x+0x6a>
    156a:	0e c0       	rjmp	.+28     	; 0x1588 <__addsf3x+0x98>
    156c:	ba 0f       	add	r27, r26
    156e:	62 1f       	adc	r22, r18
    1570:	73 1f       	adc	r23, r19
    1572:	84 1f       	adc	r24, r20
    1574:	48 f4       	brcc	.+18     	; 0x1588 <__addsf3x+0x98>
    1576:	87 95       	ror	r24
    1578:	77 95       	ror	r23
    157a:	67 95       	ror	r22
    157c:	b7 95       	ror	r27
    157e:	f7 95       	ror	r31
    1580:	9e 3f       	cpi	r25, 0xFE	; 254
    1582:	08 f0       	brcs	.+2      	; 0x1586 <__addsf3x+0x96>
    1584:	b3 cf       	rjmp	.-154    	; 0x14ec <__addsf3+0x1e>
    1586:	93 95       	inc	r25
    1588:	88 0f       	add	r24, r24
    158a:	08 f0       	brcs	.+2      	; 0x158e <__addsf3x+0x9e>
    158c:	99 27       	eor	r25, r25
    158e:	ee 0f       	add	r30, r30
    1590:	97 95       	ror	r25
    1592:	87 95       	ror	r24
    1594:	08 95       	ret

00001596 <__cmpsf2>:
    1596:	d9 d0       	rcall	.+434    	; 0x174a <__fp_cmp>
    1598:	08 f4       	brcc	.+2      	; 0x159c <__cmpsf2+0x6>
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	08 95       	ret

0000159e <__divsf3>:
    159e:	0c d0       	rcall	.+24     	; 0x15b8 <__divsf3x>
    15a0:	0f c1       	rjmp	.+542    	; 0x17c0 <__fp_round>
    15a2:	07 d1       	rcall	.+526    	; 0x17b2 <__fp_pscB>
    15a4:	40 f0       	brcs	.+16     	; 0x15b6 <__divsf3+0x18>
    15a6:	fe d0       	rcall	.+508    	; 0x17a4 <__fp_pscA>
    15a8:	30 f0       	brcs	.+12     	; 0x15b6 <__divsf3+0x18>
    15aa:	21 f4       	brne	.+8      	; 0x15b4 <__divsf3+0x16>
    15ac:	5f 3f       	cpi	r21, 0xFF	; 255
    15ae:	19 f0       	breq	.+6      	; 0x15b6 <__divsf3+0x18>
    15b0:	f0 c0       	rjmp	.+480    	; 0x1792 <__fp_inf>
    15b2:	51 11       	cpse	r21, r1
    15b4:	39 c1       	rjmp	.+626    	; 0x1828 <__fp_szero>
    15b6:	f3 c0       	rjmp	.+486    	; 0x179e <__fp_nan>

000015b8 <__divsf3x>:
    15b8:	14 d1       	rcall	.+552    	; 0x17e2 <__fp_split3>
    15ba:	98 f3       	brcs	.-26     	; 0x15a2 <__divsf3+0x4>

000015bc <__divsf3_pse>:
    15bc:	99 23       	and	r25, r25
    15be:	c9 f3       	breq	.-14     	; 0x15b2 <__divsf3+0x14>
    15c0:	55 23       	and	r21, r21
    15c2:	b1 f3       	breq	.-20     	; 0x15b0 <__divsf3+0x12>
    15c4:	95 1b       	sub	r25, r21
    15c6:	55 0b       	sbc	r21, r21
    15c8:	bb 27       	eor	r27, r27
    15ca:	aa 27       	eor	r26, r26
    15cc:	62 17       	cp	r22, r18
    15ce:	73 07       	cpc	r23, r19
    15d0:	84 07       	cpc	r24, r20
    15d2:	38 f0       	brcs	.+14     	; 0x15e2 <__divsf3_pse+0x26>
    15d4:	9f 5f       	subi	r25, 0xFF	; 255
    15d6:	5f 4f       	sbci	r21, 0xFF	; 255
    15d8:	22 0f       	add	r18, r18
    15da:	33 1f       	adc	r19, r19
    15dc:	44 1f       	adc	r20, r20
    15de:	aa 1f       	adc	r26, r26
    15e0:	a9 f3       	breq	.-22     	; 0x15cc <__divsf3_pse+0x10>
    15e2:	33 d0       	rcall	.+102    	; 0x164a <__divsf3_pse+0x8e>
    15e4:	0e 2e       	mov	r0, r30
    15e6:	3a f0       	brmi	.+14     	; 0x15f6 <__divsf3_pse+0x3a>
    15e8:	e0 e8       	ldi	r30, 0x80	; 128
    15ea:	30 d0       	rcall	.+96     	; 0x164c <__divsf3_pse+0x90>
    15ec:	91 50       	subi	r25, 0x01	; 1
    15ee:	50 40       	sbci	r21, 0x00	; 0
    15f0:	e6 95       	lsr	r30
    15f2:	00 1c       	adc	r0, r0
    15f4:	ca f7       	brpl	.-14     	; 0x15e8 <__divsf3_pse+0x2c>
    15f6:	29 d0       	rcall	.+82     	; 0x164a <__divsf3_pse+0x8e>
    15f8:	fe 2f       	mov	r31, r30
    15fa:	27 d0       	rcall	.+78     	; 0x164a <__divsf3_pse+0x8e>
    15fc:	66 0f       	add	r22, r22
    15fe:	77 1f       	adc	r23, r23
    1600:	88 1f       	adc	r24, r24
    1602:	bb 1f       	adc	r27, r27
    1604:	26 17       	cp	r18, r22
    1606:	37 07       	cpc	r19, r23
    1608:	48 07       	cpc	r20, r24
    160a:	ab 07       	cpc	r26, r27
    160c:	b0 e8       	ldi	r27, 0x80	; 128
    160e:	09 f0       	breq	.+2      	; 0x1612 <__divsf3_pse+0x56>
    1610:	bb 0b       	sbc	r27, r27
    1612:	80 2d       	mov	r24, r0
    1614:	bf 01       	movw	r22, r30
    1616:	ff 27       	eor	r31, r31
    1618:	93 58       	subi	r25, 0x83	; 131
    161a:	5f 4f       	sbci	r21, 0xFF	; 255
    161c:	2a f0       	brmi	.+10     	; 0x1628 <__divsf3_pse+0x6c>
    161e:	9e 3f       	cpi	r25, 0xFE	; 254
    1620:	51 05       	cpc	r21, r1
    1622:	68 f0       	brcs	.+26     	; 0x163e <__divsf3_pse+0x82>
    1624:	b6 c0       	rjmp	.+364    	; 0x1792 <__fp_inf>
    1626:	00 c1       	rjmp	.+512    	; 0x1828 <__fp_szero>
    1628:	5f 3f       	cpi	r21, 0xFF	; 255
    162a:	ec f3       	brlt	.-6      	; 0x1626 <__divsf3_pse+0x6a>
    162c:	98 3e       	cpi	r25, 0xE8	; 232
    162e:	dc f3       	brlt	.-10     	; 0x1626 <__divsf3_pse+0x6a>
    1630:	86 95       	lsr	r24
    1632:	77 95       	ror	r23
    1634:	67 95       	ror	r22
    1636:	b7 95       	ror	r27
    1638:	f7 95       	ror	r31
    163a:	9f 5f       	subi	r25, 0xFF	; 255
    163c:	c9 f7       	brne	.-14     	; 0x1630 <__divsf3_pse+0x74>
    163e:	88 0f       	add	r24, r24
    1640:	91 1d       	adc	r25, r1
    1642:	96 95       	lsr	r25
    1644:	87 95       	ror	r24
    1646:	97 f9       	bld	r25, 7
    1648:	08 95       	ret
    164a:	e1 e0       	ldi	r30, 0x01	; 1
    164c:	66 0f       	add	r22, r22
    164e:	77 1f       	adc	r23, r23
    1650:	88 1f       	adc	r24, r24
    1652:	bb 1f       	adc	r27, r27
    1654:	62 17       	cp	r22, r18
    1656:	73 07       	cpc	r23, r19
    1658:	84 07       	cpc	r24, r20
    165a:	ba 07       	cpc	r27, r26
    165c:	20 f0       	brcs	.+8      	; 0x1666 <__divsf3_pse+0xaa>
    165e:	62 1b       	sub	r22, r18
    1660:	73 0b       	sbc	r23, r19
    1662:	84 0b       	sbc	r24, r20
    1664:	ba 0b       	sbc	r27, r26
    1666:	ee 1f       	adc	r30, r30
    1668:	88 f7       	brcc	.-30     	; 0x164c <__divsf3_pse+0x90>
    166a:	e0 95       	com	r30
    166c:	08 95       	ret

0000166e <__fixsfsi>:
    166e:	04 d0       	rcall	.+8      	; 0x1678 <__fixunssfsi>
    1670:	68 94       	set
    1672:	b1 11       	cpse	r27, r1
    1674:	d9 c0       	rjmp	.+434    	; 0x1828 <__fp_szero>
    1676:	08 95       	ret

00001678 <__fixunssfsi>:
    1678:	bc d0       	rcall	.+376    	; 0x17f2 <__fp_splitA>
    167a:	88 f0       	brcs	.+34     	; 0x169e <__fixunssfsi+0x26>
    167c:	9f 57       	subi	r25, 0x7F	; 127
    167e:	90 f0       	brcs	.+36     	; 0x16a4 <__fixunssfsi+0x2c>
    1680:	b9 2f       	mov	r27, r25
    1682:	99 27       	eor	r25, r25
    1684:	b7 51       	subi	r27, 0x17	; 23
    1686:	a0 f0       	brcs	.+40     	; 0x16b0 <__fixunssfsi+0x38>
    1688:	d1 f0       	breq	.+52     	; 0x16be <__fixunssfsi+0x46>
    168a:	66 0f       	add	r22, r22
    168c:	77 1f       	adc	r23, r23
    168e:	88 1f       	adc	r24, r24
    1690:	99 1f       	adc	r25, r25
    1692:	1a f0       	brmi	.+6      	; 0x169a <__fixunssfsi+0x22>
    1694:	ba 95       	dec	r27
    1696:	c9 f7       	brne	.-14     	; 0x168a <__fixunssfsi+0x12>
    1698:	12 c0       	rjmp	.+36     	; 0x16be <__fixunssfsi+0x46>
    169a:	b1 30       	cpi	r27, 0x01	; 1
    169c:	81 f0       	breq	.+32     	; 0x16be <__fixunssfsi+0x46>
    169e:	c3 d0       	rcall	.+390    	; 0x1826 <__fp_zero>
    16a0:	b1 e0       	ldi	r27, 0x01	; 1
    16a2:	08 95       	ret
    16a4:	c0 c0       	rjmp	.+384    	; 0x1826 <__fp_zero>
    16a6:	67 2f       	mov	r22, r23
    16a8:	78 2f       	mov	r23, r24
    16aa:	88 27       	eor	r24, r24
    16ac:	b8 5f       	subi	r27, 0xF8	; 248
    16ae:	39 f0       	breq	.+14     	; 0x16be <__fixunssfsi+0x46>
    16b0:	b9 3f       	cpi	r27, 0xF9	; 249
    16b2:	cc f3       	brlt	.-14     	; 0x16a6 <__fixunssfsi+0x2e>
    16b4:	86 95       	lsr	r24
    16b6:	77 95       	ror	r23
    16b8:	67 95       	ror	r22
    16ba:	b3 95       	inc	r27
    16bc:	d9 f7       	brne	.-10     	; 0x16b4 <__fixunssfsi+0x3c>
    16be:	3e f4       	brtc	.+14     	; 0x16ce <__fixunssfsi+0x56>
    16c0:	90 95       	com	r25
    16c2:	80 95       	com	r24
    16c4:	70 95       	com	r23
    16c6:	61 95       	neg	r22
    16c8:	7f 4f       	sbci	r23, 0xFF	; 255
    16ca:	8f 4f       	sbci	r24, 0xFF	; 255
    16cc:	9f 4f       	sbci	r25, 0xFF	; 255
    16ce:	08 95       	ret

000016d0 <__floatunsisf>:
    16d0:	e8 94       	clt
    16d2:	09 c0       	rjmp	.+18     	; 0x16e6 <__floatsisf+0x12>

000016d4 <__floatsisf>:
    16d4:	97 fb       	bst	r25, 7
    16d6:	3e f4       	brtc	.+14     	; 0x16e6 <__floatsisf+0x12>
    16d8:	90 95       	com	r25
    16da:	80 95       	com	r24
    16dc:	70 95       	com	r23
    16de:	61 95       	neg	r22
    16e0:	7f 4f       	sbci	r23, 0xFF	; 255
    16e2:	8f 4f       	sbci	r24, 0xFF	; 255
    16e4:	9f 4f       	sbci	r25, 0xFF	; 255
    16e6:	99 23       	and	r25, r25
    16e8:	a9 f0       	breq	.+42     	; 0x1714 <__floatsisf+0x40>
    16ea:	f9 2f       	mov	r31, r25
    16ec:	96 e9       	ldi	r25, 0x96	; 150
    16ee:	bb 27       	eor	r27, r27
    16f0:	93 95       	inc	r25
    16f2:	f6 95       	lsr	r31
    16f4:	87 95       	ror	r24
    16f6:	77 95       	ror	r23
    16f8:	67 95       	ror	r22
    16fa:	b7 95       	ror	r27
    16fc:	f1 11       	cpse	r31, r1
    16fe:	f8 cf       	rjmp	.-16     	; 0x16f0 <__floatsisf+0x1c>
    1700:	fa f4       	brpl	.+62     	; 0x1740 <__floatsisf+0x6c>
    1702:	bb 0f       	add	r27, r27
    1704:	11 f4       	brne	.+4      	; 0x170a <__floatsisf+0x36>
    1706:	60 ff       	sbrs	r22, 0
    1708:	1b c0       	rjmp	.+54     	; 0x1740 <__floatsisf+0x6c>
    170a:	6f 5f       	subi	r22, 0xFF	; 255
    170c:	7f 4f       	sbci	r23, 0xFF	; 255
    170e:	8f 4f       	sbci	r24, 0xFF	; 255
    1710:	9f 4f       	sbci	r25, 0xFF	; 255
    1712:	16 c0       	rjmp	.+44     	; 0x1740 <__floatsisf+0x6c>
    1714:	88 23       	and	r24, r24
    1716:	11 f0       	breq	.+4      	; 0x171c <__floatsisf+0x48>
    1718:	96 e9       	ldi	r25, 0x96	; 150
    171a:	11 c0       	rjmp	.+34     	; 0x173e <__floatsisf+0x6a>
    171c:	77 23       	and	r23, r23
    171e:	21 f0       	breq	.+8      	; 0x1728 <__floatsisf+0x54>
    1720:	9e e8       	ldi	r25, 0x8E	; 142
    1722:	87 2f       	mov	r24, r23
    1724:	76 2f       	mov	r23, r22
    1726:	05 c0       	rjmp	.+10     	; 0x1732 <__floatsisf+0x5e>
    1728:	66 23       	and	r22, r22
    172a:	71 f0       	breq	.+28     	; 0x1748 <__floatsisf+0x74>
    172c:	96 e8       	ldi	r25, 0x86	; 134
    172e:	86 2f       	mov	r24, r22
    1730:	70 e0       	ldi	r23, 0x00	; 0
    1732:	60 e0       	ldi	r22, 0x00	; 0
    1734:	2a f0       	brmi	.+10     	; 0x1740 <__floatsisf+0x6c>
    1736:	9a 95       	dec	r25
    1738:	66 0f       	add	r22, r22
    173a:	77 1f       	adc	r23, r23
    173c:	88 1f       	adc	r24, r24
    173e:	da f7       	brpl	.-10     	; 0x1736 <__floatsisf+0x62>
    1740:	88 0f       	add	r24, r24
    1742:	96 95       	lsr	r25
    1744:	87 95       	ror	r24
    1746:	97 f9       	bld	r25, 7
    1748:	08 95       	ret

0000174a <__fp_cmp>:
    174a:	99 0f       	add	r25, r25
    174c:	00 08       	sbc	r0, r0
    174e:	55 0f       	add	r21, r21
    1750:	aa 0b       	sbc	r26, r26
    1752:	e0 e8       	ldi	r30, 0x80	; 128
    1754:	fe ef       	ldi	r31, 0xFE	; 254
    1756:	16 16       	cp	r1, r22
    1758:	17 06       	cpc	r1, r23
    175a:	e8 07       	cpc	r30, r24
    175c:	f9 07       	cpc	r31, r25
    175e:	c0 f0       	brcs	.+48     	; 0x1790 <__fp_cmp+0x46>
    1760:	12 16       	cp	r1, r18
    1762:	13 06       	cpc	r1, r19
    1764:	e4 07       	cpc	r30, r20
    1766:	f5 07       	cpc	r31, r21
    1768:	98 f0       	brcs	.+38     	; 0x1790 <__fp_cmp+0x46>
    176a:	62 1b       	sub	r22, r18
    176c:	73 0b       	sbc	r23, r19
    176e:	84 0b       	sbc	r24, r20
    1770:	95 0b       	sbc	r25, r21
    1772:	39 f4       	brne	.+14     	; 0x1782 <__fp_cmp+0x38>
    1774:	0a 26       	eor	r0, r26
    1776:	61 f0       	breq	.+24     	; 0x1790 <__fp_cmp+0x46>
    1778:	23 2b       	or	r18, r19
    177a:	24 2b       	or	r18, r20
    177c:	25 2b       	or	r18, r21
    177e:	21 f4       	brne	.+8      	; 0x1788 <__fp_cmp+0x3e>
    1780:	08 95       	ret
    1782:	0a 26       	eor	r0, r26
    1784:	09 f4       	brne	.+2      	; 0x1788 <__fp_cmp+0x3e>
    1786:	a1 40       	sbci	r26, 0x01	; 1
    1788:	a6 95       	lsr	r26
    178a:	8f ef       	ldi	r24, 0xFF	; 255
    178c:	81 1d       	adc	r24, r1
    178e:	81 1d       	adc	r24, r1
    1790:	08 95       	ret

00001792 <__fp_inf>:
    1792:	97 f9       	bld	r25, 7
    1794:	9f 67       	ori	r25, 0x7F	; 127
    1796:	80 e8       	ldi	r24, 0x80	; 128
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	08 95       	ret

0000179e <__fp_nan>:
    179e:	9f ef       	ldi	r25, 0xFF	; 255
    17a0:	80 ec       	ldi	r24, 0xC0	; 192
    17a2:	08 95       	ret

000017a4 <__fp_pscA>:
    17a4:	00 24       	eor	r0, r0
    17a6:	0a 94       	dec	r0
    17a8:	16 16       	cp	r1, r22
    17aa:	17 06       	cpc	r1, r23
    17ac:	18 06       	cpc	r1, r24
    17ae:	09 06       	cpc	r0, r25
    17b0:	08 95       	ret

000017b2 <__fp_pscB>:
    17b2:	00 24       	eor	r0, r0
    17b4:	0a 94       	dec	r0
    17b6:	12 16       	cp	r1, r18
    17b8:	13 06       	cpc	r1, r19
    17ba:	14 06       	cpc	r1, r20
    17bc:	05 06       	cpc	r0, r21
    17be:	08 95       	ret

000017c0 <__fp_round>:
    17c0:	09 2e       	mov	r0, r25
    17c2:	03 94       	inc	r0
    17c4:	00 0c       	add	r0, r0
    17c6:	11 f4       	brne	.+4      	; 0x17cc <__fp_round+0xc>
    17c8:	88 23       	and	r24, r24
    17ca:	52 f0       	brmi	.+20     	; 0x17e0 <__fp_round+0x20>
    17cc:	bb 0f       	add	r27, r27
    17ce:	40 f4       	brcc	.+16     	; 0x17e0 <__fp_round+0x20>
    17d0:	bf 2b       	or	r27, r31
    17d2:	11 f4       	brne	.+4      	; 0x17d8 <__fp_round+0x18>
    17d4:	60 ff       	sbrs	r22, 0
    17d6:	04 c0       	rjmp	.+8      	; 0x17e0 <__fp_round+0x20>
    17d8:	6f 5f       	subi	r22, 0xFF	; 255
    17da:	7f 4f       	sbci	r23, 0xFF	; 255
    17dc:	8f 4f       	sbci	r24, 0xFF	; 255
    17de:	9f 4f       	sbci	r25, 0xFF	; 255
    17e0:	08 95       	ret

000017e2 <__fp_split3>:
    17e2:	57 fd       	sbrc	r21, 7
    17e4:	90 58       	subi	r25, 0x80	; 128
    17e6:	44 0f       	add	r20, r20
    17e8:	55 1f       	adc	r21, r21
    17ea:	59 f0       	breq	.+22     	; 0x1802 <__fp_splitA+0x10>
    17ec:	5f 3f       	cpi	r21, 0xFF	; 255
    17ee:	71 f0       	breq	.+28     	; 0x180c <__fp_splitA+0x1a>
    17f0:	47 95       	ror	r20

000017f2 <__fp_splitA>:
    17f2:	88 0f       	add	r24, r24
    17f4:	97 fb       	bst	r25, 7
    17f6:	99 1f       	adc	r25, r25
    17f8:	61 f0       	breq	.+24     	; 0x1812 <__fp_splitA+0x20>
    17fa:	9f 3f       	cpi	r25, 0xFF	; 255
    17fc:	79 f0       	breq	.+30     	; 0x181c <__fp_splitA+0x2a>
    17fe:	87 95       	ror	r24
    1800:	08 95       	ret
    1802:	12 16       	cp	r1, r18
    1804:	13 06       	cpc	r1, r19
    1806:	14 06       	cpc	r1, r20
    1808:	55 1f       	adc	r21, r21
    180a:	f2 cf       	rjmp	.-28     	; 0x17f0 <__fp_split3+0xe>
    180c:	46 95       	lsr	r20
    180e:	f1 df       	rcall	.-30     	; 0x17f2 <__fp_splitA>
    1810:	08 c0       	rjmp	.+16     	; 0x1822 <__fp_splitA+0x30>
    1812:	16 16       	cp	r1, r22
    1814:	17 06       	cpc	r1, r23
    1816:	18 06       	cpc	r1, r24
    1818:	99 1f       	adc	r25, r25
    181a:	f1 cf       	rjmp	.-30     	; 0x17fe <__fp_splitA+0xc>
    181c:	86 95       	lsr	r24
    181e:	71 05       	cpc	r23, r1
    1820:	61 05       	cpc	r22, r1
    1822:	08 94       	sec
    1824:	08 95       	ret

00001826 <__fp_zero>:
    1826:	e8 94       	clt

00001828 <__fp_szero>:
    1828:	bb 27       	eor	r27, r27
    182a:	66 27       	eor	r22, r22
    182c:	77 27       	eor	r23, r23
    182e:	cb 01       	movw	r24, r22
    1830:	97 f9       	bld	r25, 7
    1832:	08 95       	ret

00001834 <__gesf2>:
    1834:	8a df       	rcall	.-236    	; 0x174a <__fp_cmp>
    1836:	08 f4       	brcc	.+2      	; 0x183a <__gesf2+0x6>
    1838:	8f ef       	ldi	r24, 0xFF	; 255
    183a:	08 95       	ret

0000183c <__mulsf3>:
    183c:	0b d0       	rcall	.+22     	; 0x1854 <__mulsf3x>
    183e:	c0 cf       	rjmp	.-128    	; 0x17c0 <__fp_round>
    1840:	b1 df       	rcall	.-158    	; 0x17a4 <__fp_pscA>
    1842:	28 f0       	brcs	.+10     	; 0x184e <__mulsf3+0x12>
    1844:	b6 df       	rcall	.-148    	; 0x17b2 <__fp_pscB>
    1846:	18 f0       	brcs	.+6      	; 0x184e <__mulsf3+0x12>
    1848:	95 23       	and	r25, r21
    184a:	09 f0       	breq	.+2      	; 0x184e <__mulsf3+0x12>
    184c:	a2 cf       	rjmp	.-188    	; 0x1792 <__fp_inf>
    184e:	a7 cf       	rjmp	.-178    	; 0x179e <__fp_nan>
    1850:	11 24       	eor	r1, r1
    1852:	ea cf       	rjmp	.-44     	; 0x1828 <__fp_szero>

00001854 <__mulsf3x>:
    1854:	c6 df       	rcall	.-116    	; 0x17e2 <__fp_split3>
    1856:	a0 f3       	brcs	.-24     	; 0x1840 <__mulsf3+0x4>

00001858 <__mulsf3_pse>:
    1858:	95 9f       	mul	r25, r21
    185a:	d1 f3       	breq	.-12     	; 0x1850 <__mulsf3+0x14>
    185c:	95 0f       	add	r25, r21
    185e:	50 e0       	ldi	r21, 0x00	; 0
    1860:	55 1f       	adc	r21, r21
    1862:	62 9f       	mul	r22, r18
    1864:	f0 01       	movw	r30, r0
    1866:	72 9f       	mul	r23, r18
    1868:	bb 27       	eor	r27, r27
    186a:	f0 0d       	add	r31, r0
    186c:	b1 1d       	adc	r27, r1
    186e:	63 9f       	mul	r22, r19
    1870:	aa 27       	eor	r26, r26
    1872:	f0 0d       	add	r31, r0
    1874:	b1 1d       	adc	r27, r1
    1876:	aa 1f       	adc	r26, r26
    1878:	64 9f       	mul	r22, r20
    187a:	66 27       	eor	r22, r22
    187c:	b0 0d       	add	r27, r0
    187e:	a1 1d       	adc	r26, r1
    1880:	66 1f       	adc	r22, r22
    1882:	82 9f       	mul	r24, r18
    1884:	22 27       	eor	r18, r18
    1886:	b0 0d       	add	r27, r0
    1888:	a1 1d       	adc	r26, r1
    188a:	62 1f       	adc	r22, r18
    188c:	73 9f       	mul	r23, r19
    188e:	b0 0d       	add	r27, r0
    1890:	a1 1d       	adc	r26, r1
    1892:	62 1f       	adc	r22, r18
    1894:	83 9f       	mul	r24, r19
    1896:	a0 0d       	add	r26, r0
    1898:	61 1d       	adc	r22, r1
    189a:	22 1f       	adc	r18, r18
    189c:	74 9f       	mul	r23, r20
    189e:	33 27       	eor	r19, r19
    18a0:	a0 0d       	add	r26, r0
    18a2:	61 1d       	adc	r22, r1
    18a4:	23 1f       	adc	r18, r19
    18a6:	84 9f       	mul	r24, r20
    18a8:	60 0d       	add	r22, r0
    18aa:	21 1d       	adc	r18, r1
    18ac:	82 2f       	mov	r24, r18
    18ae:	76 2f       	mov	r23, r22
    18b0:	6a 2f       	mov	r22, r26
    18b2:	11 24       	eor	r1, r1
    18b4:	9f 57       	subi	r25, 0x7F	; 127
    18b6:	50 40       	sbci	r21, 0x00	; 0
    18b8:	8a f0       	brmi	.+34     	; 0x18dc <__mulsf3_pse+0x84>
    18ba:	e1 f0       	breq	.+56     	; 0x18f4 <__mulsf3_pse+0x9c>
    18bc:	88 23       	and	r24, r24
    18be:	4a f0       	brmi	.+18     	; 0x18d2 <__mulsf3_pse+0x7a>
    18c0:	ee 0f       	add	r30, r30
    18c2:	ff 1f       	adc	r31, r31
    18c4:	bb 1f       	adc	r27, r27
    18c6:	66 1f       	adc	r22, r22
    18c8:	77 1f       	adc	r23, r23
    18ca:	88 1f       	adc	r24, r24
    18cc:	91 50       	subi	r25, 0x01	; 1
    18ce:	50 40       	sbci	r21, 0x00	; 0
    18d0:	a9 f7       	brne	.-22     	; 0x18bc <__mulsf3_pse+0x64>
    18d2:	9e 3f       	cpi	r25, 0xFE	; 254
    18d4:	51 05       	cpc	r21, r1
    18d6:	70 f0       	brcs	.+28     	; 0x18f4 <__mulsf3_pse+0x9c>
    18d8:	5c cf       	rjmp	.-328    	; 0x1792 <__fp_inf>
    18da:	a6 cf       	rjmp	.-180    	; 0x1828 <__fp_szero>
    18dc:	5f 3f       	cpi	r21, 0xFF	; 255
    18de:	ec f3       	brlt	.-6      	; 0x18da <__mulsf3_pse+0x82>
    18e0:	98 3e       	cpi	r25, 0xE8	; 232
    18e2:	dc f3       	brlt	.-10     	; 0x18da <__mulsf3_pse+0x82>
    18e4:	86 95       	lsr	r24
    18e6:	77 95       	ror	r23
    18e8:	67 95       	ror	r22
    18ea:	b7 95       	ror	r27
    18ec:	f7 95       	ror	r31
    18ee:	e7 95       	ror	r30
    18f0:	9f 5f       	subi	r25, 0xFF	; 255
    18f2:	c1 f7       	brne	.-16     	; 0x18e4 <__mulsf3_pse+0x8c>
    18f4:	fe 2b       	or	r31, r30
    18f6:	88 0f       	add	r24, r24
    18f8:	91 1d       	adc	r25, r1
    18fa:	96 95       	lsr	r25
    18fc:	87 95       	ror	r24
    18fe:	97 f9       	bld	r25, 7
    1900:	08 95       	ret

00001902 <__tablejump2__>:
    1902:	ee 0f       	add	r30, r30
    1904:	ff 1f       	adc	r31, r31
    1906:	00 24       	eor	r0, r0
    1908:	00 1c       	adc	r0, r0
    190a:	0b be       	out	0x3b, r0	; 59
    190c:	07 90       	elpm	r0, Z+
    190e:	f6 91       	elpm	r31, Z
    1910:	e0 2d       	mov	r30, r0
    1912:	09 94       	ijmp

00001914 <atoi>:
    1914:	fc 01       	movw	r30, r24
    1916:	88 27       	eor	r24, r24
    1918:	99 27       	eor	r25, r25
    191a:	e8 94       	clt
    191c:	21 91       	ld	r18, Z+
    191e:	20 32       	cpi	r18, 0x20	; 32
    1920:	e9 f3       	breq	.-6      	; 0x191c <atoi+0x8>
    1922:	29 30       	cpi	r18, 0x09	; 9
    1924:	10 f0       	brcs	.+4      	; 0x192a <atoi+0x16>
    1926:	2e 30       	cpi	r18, 0x0E	; 14
    1928:	c8 f3       	brcs	.-14     	; 0x191c <atoi+0x8>
    192a:	2b 32       	cpi	r18, 0x2B	; 43
    192c:	39 f0       	breq	.+14     	; 0x193c <atoi+0x28>
    192e:	2d 32       	cpi	r18, 0x2D	; 45
    1930:	31 f4       	brne	.+12     	; 0x193e <atoi+0x2a>
    1932:	68 94       	set
    1934:	03 c0       	rjmp	.+6      	; 0x193c <atoi+0x28>
    1936:	0b d0       	rcall	.+22     	; 0x194e <__mulhi_const_10>
    1938:	82 0f       	add	r24, r18
    193a:	91 1d       	adc	r25, r1
    193c:	21 91       	ld	r18, Z+
    193e:	20 53       	subi	r18, 0x30	; 48
    1940:	2a 30       	cpi	r18, 0x0A	; 10
    1942:	c8 f3       	brcs	.-14     	; 0x1936 <atoi+0x22>
    1944:	1e f4       	brtc	.+6      	; 0x194c <atoi+0x38>
    1946:	90 95       	com	r25
    1948:	81 95       	neg	r24
    194a:	9f 4f       	sbci	r25, 0xFF	; 255
    194c:	08 95       	ret

0000194e <__mulhi_const_10>:
    194e:	7a e0       	ldi	r23, 0x0A	; 10
    1950:	97 9f       	mul	r25, r23
    1952:	90 2d       	mov	r25, r0
    1954:	87 9f       	mul	r24, r23
    1956:	80 2d       	mov	r24, r0
    1958:	91 0d       	add	r25, r1
    195a:	11 24       	eor	r1, r1
    195c:	08 95       	ret

0000195e <printf>:
    195e:	cf 93       	push	r28
    1960:	df 93       	push	r29
    1962:	cd b7       	in	r28, 0x3d	; 61
    1964:	de b7       	in	r29, 0x3e	; 62
    1966:	ae 01       	movw	r20, r28
    1968:	4b 5f       	subi	r20, 0xFB	; 251
    196a:	5f 4f       	sbci	r21, 0xFF	; 255
    196c:	fa 01       	movw	r30, r20
    196e:	61 91       	ld	r22, Z+
    1970:	71 91       	ld	r23, Z+
    1972:	af 01       	movw	r20, r30
    1974:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <__iob+0x2>
    1978:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <__iob+0x3>
    197c:	08 d0       	rcall	.+16     	; 0x198e <vfprintf>
    197e:	df 91       	pop	r29
    1980:	cf 91       	pop	r28
    1982:	08 95       	ret

00001984 <putchar>:
    1984:	60 91 a4 03 	lds	r22, 0x03A4	; 0x8003a4 <__iob+0x2>
    1988:	70 91 a5 03 	lds	r23, 0x03A5	; 0x8003a5 <__iob+0x3>
    198c:	13 c2       	rjmp	.+1062   	; 0x1db4 <fputc>

0000198e <vfprintf>:
    198e:	2f 92       	push	r2
    1990:	3f 92       	push	r3
    1992:	4f 92       	push	r4
    1994:	5f 92       	push	r5
    1996:	6f 92       	push	r6
    1998:	7f 92       	push	r7
    199a:	8f 92       	push	r8
    199c:	9f 92       	push	r9
    199e:	af 92       	push	r10
    19a0:	bf 92       	push	r11
    19a2:	cf 92       	push	r12
    19a4:	df 92       	push	r13
    19a6:	ef 92       	push	r14
    19a8:	ff 92       	push	r15
    19aa:	0f 93       	push	r16
    19ac:	1f 93       	push	r17
    19ae:	cf 93       	push	r28
    19b0:	df 93       	push	r29
    19b2:	cd b7       	in	r28, 0x3d	; 61
    19b4:	de b7       	in	r29, 0x3e	; 62
    19b6:	2b 97       	sbiw	r28, 0x0b	; 11
    19b8:	0f b6       	in	r0, 0x3f	; 63
    19ba:	f8 94       	cli
    19bc:	de bf       	out	0x3e, r29	; 62
    19be:	0f be       	out	0x3f, r0	; 63
    19c0:	cd bf       	out	0x3d, r28	; 61
    19c2:	6c 01       	movw	r12, r24
    19c4:	7b 01       	movw	r14, r22
    19c6:	8a 01       	movw	r16, r20
    19c8:	fc 01       	movw	r30, r24
    19ca:	17 82       	std	Z+7, r1	; 0x07
    19cc:	16 82       	std	Z+6, r1	; 0x06
    19ce:	83 81       	ldd	r24, Z+3	; 0x03
    19d0:	81 ff       	sbrs	r24, 1
    19d2:	bf c1       	rjmp	.+894    	; 0x1d52 <vfprintf+0x3c4>
    19d4:	ce 01       	movw	r24, r28
    19d6:	01 96       	adiw	r24, 0x01	; 1
    19d8:	3c 01       	movw	r6, r24
    19da:	f6 01       	movw	r30, r12
    19dc:	93 81       	ldd	r25, Z+3	; 0x03
    19de:	f7 01       	movw	r30, r14
    19e0:	93 fd       	sbrc	r25, 3
    19e2:	85 91       	lpm	r24, Z+
    19e4:	93 ff       	sbrs	r25, 3
    19e6:	81 91       	ld	r24, Z+
    19e8:	7f 01       	movw	r14, r30
    19ea:	88 23       	and	r24, r24
    19ec:	09 f4       	brne	.+2      	; 0x19f0 <vfprintf+0x62>
    19ee:	ad c1       	rjmp	.+858    	; 0x1d4a <vfprintf+0x3bc>
    19f0:	85 32       	cpi	r24, 0x25	; 37
    19f2:	39 f4       	brne	.+14     	; 0x1a02 <vfprintf+0x74>
    19f4:	93 fd       	sbrc	r25, 3
    19f6:	85 91       	lpm	r24, Z+
    19f8:	93 ff       	sbrs	r25, 3
    19fa:	81 91       	ld	r24, Z+
    19fc:	7f 01       	movw	r14, r30
    19fe:	85 32       	cpi	r24, 0x25	; 37
    1a00:	21 f4       	brne	.+8      	; 0x1a0a <vfprintf+0x7c>
    1a02:	b6 01       	movw	r22, r12
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	d6 d1       	rcall	.+940    	; 0x1db4 <fputc>
    1a08:	e8 cf       	rjmp	.-48     	; 0x19da <vfprintf+0x4c>
    1a0a:	91 2c       	mov	r9, r1
    1a0c:	21 2c       	mov	r2, r1
    1a0e:	31 2c       	mov	r3, r1
    1a10:	ff e1       	ldi	r31, 0x1F	; 31
    1a12:	f3 15       	cp	r31, r3
    1a14:	d8 f0       	brcs	.+54     	; 0x1a4c <vfprintf+0xbe>
    1a16:	8b 32       	cpi	r24, 0x2B	; 43
    1a18:	79 f0       	breq	.+30     	; 0x1a38 <vfprintf+0xaa>
    1a1a:	38 f4       	brcc	.+14     	; 0x1a2a <vfprintf+0x9c>
    1a1c:	80 32       	cpi	r24, 0x20	; 32
    1a1e:	79 f0       	breq	.+30     	; 0x1a3e <vfprintf+0xb0>
    1a20:	83 32       	cpi	r24, 0x23	; 35
    1a22:	a1 f4       	brne	.+40     	; 0x1a4c <vfprintf+0xbe>
    1a24:	23 2d       	mov	r18, r3
    1a26:	20 61       	ori	r18, 0x10	; 16
    1a28:	1d c0       	rjmp	.+58     	; 0x1a64 <vfprintf+0xd6>
    1a2a:	8d 32       	cpi	r24, 0x2D	; 45
    1a2c:	61 f0       	breq	.+24     	; 0x1a46 <vfprintf+0xb8>
    1a2e:	80 33       	cpi	r24, 0x30	; 48
    1a30:	69 f4       	brne	.+26     	; 0x1a4c <vfprintf+0xbe>
    1a32:	23 2d       	mov	r18, r3
    1a34:	21 60       	ori	r18, 0x01	; 1
    1a36:	16 c0       	rjmp	.+44     	; 0x1a64 <vfprintf+0xd6>
    1a38:	83 2d       	mov	r24, r3
    1a3a:	82 60       	ori	r24, 0x02	; 2
    1a3c:	38 2e       	mov	r3, r24
    1a3e:	e3 2d       	mov	r30, r3
    1a40:	e4 60       	ori	r30, 0x04	; 4
    1a42:	3e 2e       	mov	r3, r30
    1a44:	2a c0       	rjmp	.+84     	; 0x1a9a <vfprintf+0x10c>
    1a46:	f3 2d       	mov	r31, r3
    1a48:	f8 60       	ori	r31, 0x08	; 8
    1a4a:	1d c0       	rjmp	.+58     	; 0x1a86 <vfprintf+0xf8>
    1a4c:	37 fc       	sbrc	r3, 7
    1a4e:	2d c0       	rjmp	.+90     	; 0x1aaa <vfprintf+0x11c>
    1a50:	20 ed       	ldi	r18, 0xD0	; 208
    1a52:	28 0f       	add	r18, r24
    1a54:	2a 30       	cpi	r18, 0x0A	; 10
    1a56:	40 f0       	brcs	.+16     	; 0x1a68 <vfprintf+0xda>
    1a58:	8e 32       	cpi	r24, 0x2E	; 46
    1a5a:	b9 f4       	brne	.+46     	; 0x1a8a <vfprintf+0xfc>
    1a5c:	36 fc       	sbrc	r3, 6
    1a5e:	75 c1       	rjmp	.+746    	; 0x1d4a <vfprintf+0x3bc>
    1a60:	23 2d       	mov	r18, r3
    1a62:	20 64       	ori	r18, 0x40	; 64
    1a64:	32 2e       	mov	r3, r18
    1a66:	19 c0       	rjmp	.+50     	; 0x1a9a <vfprintf+0x10c>
    1a68:	36 fe       	sbrs	r3, 6
    1a6a:	06 c0       	rjmp	.+12     	; 0x1a78 <vfprintf+0xea>
    1a6c:	8a e0       	ldi	r24, 0x0A	; 10
    1a6e:	98 9e       	mul	r9, r24
    1a70:	20 0d       	add	r18, r0
    1a72:	11 24       	eor	r1, r1
    1a74:	92 2e       	mov	r9, r18
    1a76:	11 c0       	rjmp	.+34     	; 0x1a9a <vfprintf+0x10c>
    1a78:	ea e0       	ldi	r30, 0x0A	; 10
    1a7a:	2e 9e       	mul	r2, r30
    1a7c:	20 0d       	add	r18, r0
    1a7e:	11 24       	eor	r1, r1
    1a80:	22 2e       	mov	r2, r18
    1a82:	f3 2d       	mov	r31, r3
    1a84:	f0 62       	ori	r31, 0x20	; 32
    1a86:	3f 2e       	mov	r3, r31
    1a88:	08 c0       	rjmp	.+16     	; 0x1a9a <vfprintf+0x10c>
    1a8a:	8c 36       	cpi	r24, 0x6C	; 108
    1a8c:	21 f4       	brne	.+8      	; 0x1a96 <vfprintf+0x108>
    1a8e:	83 2d       	mov	r24, r3
    1a90:	80 68       	ori	r24, 0x80	; 128
    1a92:	38 2e       	mov	r3, r24
    1a94:	02 c0       	rjmp	.+4      	; 0x1a9a <vfprintf+0x10c>
    1a96:	88 36       	cpi	r24, 0x68	; 104
    1a98:	41 f4       	brne	.+16     	; 0x1aaa <vfprintf+0x11c>
    1a9a:	f7 01       	movw	r30, r14
    1a9c:	93 fd       	sbrc	r25, 3
    1a9e:	85 91       	lpm	r24, Z+
    1aa0:	93 ff       	sbrs	r25, 3
    1aa2:	81 91       	ld	r24, Z+
    1aa4:	7f 01       	movw	r14, r30
    1aa6:	81 11       	cpse	r24, r1
    1aa8:	b3 cf       	rjmp	.-154    	; 0x1a10 <vfprintf+0x82>
    1aaa:	98 2f       	mov	r25, r24
    1aac:	9f 7d       	andi	r25, 0xDF	; 223
    1aae:	95 54       	subi	r25, 0x45	; 69
    1ab0:	93 30       	cpi	r25, 0x03	; 3
    1ab2:	28 f4       	brcc	.+10     	; 0x1abe <vfprintf+0x130>
    1ab4:	0c 5f       	subi	r16, 0xFC	; 252
    1ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab8:	9f e3       	ldi	r25, 0x3F	; 63
    1aba:	99 83       	std	Y+1, r25	; 0x01
    1abc:	0d c0       	rjmp	.+26     	; 0x1ad8 <vfprintf+0x14a>
    1abe:	83 36       	cpi	r24, 0x63	; 99
    1ac0:	31 f0       	breq	.+12     	; 0x1ace <vfprintf+0x140>
    1ac2:	83 37       	cpi	r24, 0x73	; 115
    1ac4:	71 f0       	breq	.+28     	; 0x1ae2 <vfprintf+0x154>
    1ac6:	83 35       	cpi	r24, 0x53	; 83
    1ac8:	09 f0       	breq	.+2      	; 0x1acc <vfprintf+0x13e>
    1aca:	55 c0       	rjmp	.+170    	; 0x1b76 <vfprintf+0x1e8>
    1acc:	20 c0       	rjmp	.+64     	; 0x1b0e <vfprintf+0x180>
    1ace:	f8 01       	movw	r30, r16
    1ad0:	80 81       	ld	r24, Z
    1ad2:	89 83       	std	Y+1, r24	; 0x01
    1ad4:	0e 5f       	subi	r16, 0xFE	; 254
    1ad6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ad8:	88 24       	eor	r8, r8
    1ada:	83 94       	inc	r8
    1adc:	91 2c       	mov	r9, r1
    1ade:	53 01       	movw	r10, r6
    1ae0:	12 c0       	rjmp	.+36     	; 0x1b06 <vfprintf+0x178>
    1ae2:	28 01       	movw	r4, r16
    1ae4:	f2 e0       	ldi	r31, 0x02	; 2
    1ae6:	4f 0e       	add	r4, r31
    1ae8:	51 1c       	adc	r5, r1
    1aea:	f8 01       	movw	r30, r16
    1aec:	a0 80       	ld	r10, Z
    1aee:	b1 80       	ldd	r11, Z+1	; 0x01
    1af0:	36 fe       	sbrs	r3, 6
    1af2:	03 c0       	rjmp	.+6      	; 0x1afa <vfprintf+0x16c>
    1af4:	69 2d       	mov	r22, r9
    1af6:	70 e0       	ldi	r23, 0x00	; 0
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <vfprintf+0x170>
    1afa:	6f ef       	ldi	r22, 0xFF	; 255
    1afc:	7f ef       	ldi	r23, 0xFF	; 255
    1afe:	c5 01       	movw	r24, r10
    1b00:	4e d1       	rcall	.+668    	; 0x1d9e <strnlen>
    1b02:	4c 01       	movw	r8, r24
    1b04:	82 01       	movw	r16, r4
    1b06:	f3 2d       	mov	r31, r3
    1b08:	ff 77       	andi	r31, 0x7F	; 127
    1b0a:	3f 2e       	mov	r3, r31
    1b0c:	15 c0       	rjmp	.+42     	; 0x1b38 <vfprintf+0x1aa>
    1b0e:	28 01       	movw	r4, r16
    1b10:	22 e0       	ldi	r18, 0x02	; 2
    1b12:	42 0e       	add	r4, r18
    1b14:	51 1c       	adc	r5, r1
    1b16:	f8 01       	movw	r30, r16
    1b18:	a0 80       	ld	r10, Z
    1b1a:	b1 80       	ldd	r11, Z+1	; 0x01
    1b1c:	36 fe       	sbrs	r3, 6
    1b1e:	03 c0       	rjmp	.+6      	; 0x1b26 <vfprintf+0x198>
    1b20:	69 2d       	mov	r22, r9
    1b22:	70 e0       	ldi	r23, 0x00	; 0
    1b24:	02 c0       	rjmp	.+4      	; 0x1b2a <vfprintf+0x19c>
    1b26:	6f ef       	ldi	r22, 0xFF	; 255
    1b28:	7f ef       	ldi	r23, 0xFF	; 255
    1b2a:	c5 01       	movw	r24, r10
    1b2c:	2d d1       	rcall	.+602    	; 0x1d88 <strnlen_P>
    1b2e:	4c 01       	movw	r8, r24
    1b30:	f3 2d       	mov	r31, r3
    1b32:	f0 68       	ori	r31, 0x80	; 128
    1b34:	3f 2e       	mov	r3, r31
    1b36:	82 01       	movw	r16, r4
    1b38:	33 fc       	sbrc	r3, 3
    1b3a:	19 c0       	rjmp	.+50     	; 0x1b6e <vfprintf+0x1e0>
    1b3c:	82 2d       	mov	r24, r2
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	88 16       	cp	r8, r24
    1b42:	99 06       	cpc	r9, r25
    1b44:	a0 f4       	brcc	.+40     	; 0x1b6e <vfprintf+0x1e0>
    1b46:	b6 01       	movw	r22, r12
    1b48:	80 e2       	ldi	r24, 0x20	; 32
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	33 d1       	rcall	.+614    	; 0x1db4 <fputc>
    1b4e:	2a 94       	dec	r2
    1b50:	f5 cf       	rjmp	.-22     	; 0x1b3c <vfprintf+0x1ae>
    1b52:	f5 01       	movw	r30, r10
    1b54:	37 fc       	sbrc	r3, 7
    1b56:	85 91       	lpm	r24, Z+
    1b58:	37 fe       	sbrs	r3, 7
    1b5a:	81 91       	ld	r24, Z+
    1b5c:	5f 01       	movw	r10, r30
    1b5e:	b6 01       	movw	r22, r12
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	28 d1       	rcall	.+592    	; 0x1db4 <fputc>
    1b64:	21 10       	cpse	r2, r1
    1b66:	2a 94       	dec	r2
    1b68:	21 e0       	ldi	r18, 0x01	; 1
    1b6a:	82 1a       	sub	r8, r18
    1b6c:	91 08       	sbc	r9, r1
    1b6e:	81 14       	cp	r8, r1
    1b70:	91 04       	cpc	r9, r1
    1b72:	79 f7       	brne	.-34     	; 0x1b52 <vfprintf+0x1c4>
    1b74:	e1 c0       	rjmp	.+450    	; 0x1d38 <vfprintf+0x3aa>
    1b76:	84 36       	cpi	r24, 0x64	; 100
    1b78:	11 f0       	breq	.+4      	; 0x1b7e <vfprintf+0x1f0>
    1b7a:	89 36       	cpi	r24, 0x69	; 105
    1b7c:	39 f5       	brne	.+78     	; 0x1bcc <vfprintf+0x23e>
    1b7e:	f8 01       	movw	r30, r16
    1b80:	37 fe       	sbrs	r3, 7
    1b82:	07 c0       	rjmp	.+14     	; 0x1b92 <vfprintf+0x204>
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	0c 5f       	subi	r16, 0xFC	; 252
    1b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b90:	08 c0       	rjmp	.+16     	; 0x1ba2 <vfprintf+0x214>
    1b92:	60 81       	ld	r22, Z
    1b94:	71 81       	ldd	r23, Z+1	; 0x01
    1b96:	07 2e       	mov	r0, r23
    1b98:	00 0c       	add	r0, r0
    1b9a:	88 0b       	sbc	r24, r24
    1b9c:	99 0b       	sbc	r25, r25
    1b9e:	0e 5f       	subi	r16, 0xFE	; 254
    1ba0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba2:	f3 2d       	mov	r31, r3
    1ba4:	ff 76       	andi	r31, 0x6F	; 111
    1ba6:	3f 2e       	mov	r3, r31
    1ba8:	97 ff       	sbrs	r25, 7
    1baa:	09 c0       	rjmp	.+18     	; 0x1bbe <vfprintf+0x230>
    1bac:	90 95       	com	r25
    1bae:	80 95       	com	r24
    1bb0:	70 95       	com	r23
    1bb2:	61 95       	neg	r22
    1bb4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bb6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bba:	f0 68       	ori	r31, 0x80	; 128
    1bbc:	3f 2e       	mov	r3, r31
    1bbe:	2a e0       	ldi	r18, 0x0A	; 10
    1bc0:	30 e0       	ldi	r19, 0x00	; 0
    1bc2:	a3 01       	movw	r20, r6
    1bc4:	33 d1       	rcall	.+614    	; 0x1e2c <__ultoa_invert>
    1bc6:	88 2e       	mov	r8, r24
    1bc8:	86 18       	sub	r8, r6
    1bca:	44 c0       	rjmp	.+136    	; 0x1c54 <vfprintf+0x2c6>
    1bcc:	85 37       	cpi	r24, 0x75	; 117
    1bce:	31 f4       	brne	.+12     	; 0x1bdc <vfprintf+0x24e>
    1bd0:	23 2d       	mov	r18, r3
    1bd2:	2f 7e       	andi	r18, 0xEF	; 239
    1bd4:	b2 2e       	mov	r11, r18
    1bd6:	2a e0       	ldi	r18, 0x0A	; 10
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	25 c0       	rjmp	.+74     	; 0x1c26 <vfprintf+0x298>
    1bdc:	93 2d       	mov	r25, r3
    1bde:	99 7f       	andi	r25, 0xF9	; 249
    1be0:	b9 2e       	mov	r11, r25
    1be2:	8f 36       	cpi	r24, 0x6F	; 111
    1be4:	c1 f0       	breq	.+48     	; 0x1c16 <vfprintf+0x288>
    1be6:	18 f4       	brcc	.+6      	; 0x1bee <vfprintf+0x260>
    1be8:	88 35       	cpi	r24, 0x58	; 88
    1bea:	79 f0       	breq	.+30     	; 0x1c0a <vfprintf+0x27c>
    1bec:	ae c0       	rjmp	.+348    	; 0x1d4a <vfprintf+0x3bc>
    1bee:	80 37       	cpi	r24, 0x70	; 112
    1bf0:	19 f0       	breq	.+6      	; 0x1bf8 <vfprintf+0x26a>
    1bf2:	88 37       	cpi	r24, 0x78	; 120
    1bf4:	21 f0       	breq	.+8      	; 0x1bfe <vfprintf+0x270>
    1bf6:	a9 c0       	rjmp	.+338    	; 0x1d4a <vfprintf+0x3bc>
    1bf8:	e9 2f       	mov	r30, r25
    1bfa:	e0 61       	ori	r30, 0x10	; 16
    1bfc:	be 2e       	mov	r11, r30
    1bfe:	b4 fe       	sbrs	r11, 4
    1c00:	0d c0       	rjmp	.+26     	; 0x1c1c <vfprintf+0x28e>
    1c02:	fb 2d       	mov	r31, r11
    1c04:	f4 60       	ori	r31, 0x04	; 4
    1c06:	bf 2e       	mov	r11, r31
    1c08:	09 c0       	rjmp	.+18     	; 0x1c1c <vfprintf+0x28e>
    1c0a:	34 fe       	sbrs	r3, 4
    1c0c:	0a c0       	rjmp	.+20     	; 0x1c22 <vfprintf+0x294>
    1c0e:	29 2f       	mov	r18, r25
    1c10:	26 60       	ori	r18, 0x06	; 6
    1c12:	b2 2e       	mov	r11, r18
    1c14:	06 c0       	rjmp	.+12     	; 0x1c22 <vfprintf+0x294>
    1c16:	28 e0       	ldi	r18, 0x08	; 8
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	05 c0       	rjmp	.+10     	; 0x1c26 <vfprintf+0x298>
    1c1c:	20 e1       	ldi	r18, 0x10	; 16
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	02 c0       	rjmp	.+4      	; 0x1c26 <vfprintf+0x298>
    1c22:	20 e1       	ldi	r18, 0x10	; 16
    1c24:	32 e0       	ldi	r19, 0x02	; 2
    1c26:	f8 01       	movw	r30, r16
    1c28:	b7 fe       	sbrs	r11, 7
    1c2a:	07 c0       	rjmp	.+14     	; 0x1c3a <vfprintf+0x2ac>
    1c2c:	60 81       	ld	r22, Z
    1c2e:	71 81       	ldd	r23, Z+1	; 0x01
    1c30:	82 81       	ldd	r24, Z+2	; 0x02
    1c32:	93 81       	ldd	r25, Z+3	; 0x03
    1c34:	0c 5f       	subi	r16, 0xFC	; 252
    1c36:	1f 4f       	sbci	r17, 0xFF	; 255
    1c38:	06 c0       	rjmp	.+12     	; 0x1c46 <vfprintf+0x2b8>
    1c3a:	60 81       	ld	r22, Z
    1c3c:	71 81       	ldd	r23, Z+1	; 0x01
    1c3e:	80 e0       	ldi	r24, 0x00	; 0
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	0e 5f       	subi	r16, 0xFE	; 254
    1c44:	1f 4f       	sbci	r17, 0xFF	; 255
    1c46:	a3 01       	movw	r20, r6
    1c48:	f1 d0       	rcall	.+482    	; 0x1e2c <__ultoa_invert>
    1c4a:	88 2e       	mov	r8, r24
    1c4c:	86 18       	sub	r8, r6
    1c4e:	fb 2d       	mov	r31, r11
    1c50:	ff 77       	andi	r31, 0x7F	; 127
    1c52:	3f 2e       	mov	r3, r31
    1c54:	36 fe       	sbrs	r3, 6
    1c56:	0d c0       	rjmp	.+26     	; 0x1c72 <vfprintf+0x2e4>
    1c58:	23 2d       	mov	r18, r3
    1c5a:	2e 7f       	andi	r18, 0xFE	; 254
    1c5c:	a2 2e       	mov	r10, r18
    1c5e:	89 14       	cp	r8, r9
    1c60:	58 f4       	brcc	.+22     	; 0x1c78 <vfprintf+0x2ea>
    1c62:	34 fe       	sbrs	r3, 4
    1c64:	0b c0       	rjmp	.+22     	; 0x1c7c <vfprintf+0x2ee>
    1c66:	32 fc       	sbrc	r3, 2
    1c68:	09 c0       	rjmp	.+18     	; 0x1c7c <vfprintf+0x2ee>
    1c6a:	83 2d       	mov	r24, r3
    1c6c:	8e 7e       	andi	r24, 0xEE	; 238
    1c6e:	a8 2e       	mov	r10, r24
    1c70:	05 c0       	rjmp	.+10     	; 0x1c7c <vfprintf+0x2ee>
    1c72:	b8 2c       	mov	r11, r8
    1c74:	a3 2c       	mov	r10, r3
    1c76:	03 c0       	rjmp	.+6      	; 0x1c7e <vfprintf+0x2f0>
    1c78:	b8 2c       	mov	r11, r8
    1c7a:	01 c0       	rjmp	.+2      	; 0x1c7e <vfprintf+0x2f0>
    1c7c:	b9 2c       	mov	r11, r9
    1c7e:	a4 fe       	sbrs	r10, 4
    1c80:	0f c0       	rjmp	.+30     	; 0x1ca0 <vfprintf+0x312>
    1c82:	fe 01       	movw	r30, r28
    1c84:	e8 0d       	add	r30, r8
    1c86:	f1 1d       	adc	r31, r1
    1c88:	80 81       	ld	r24, Z
    1c8a:	80 33       	cpi	r24, 0x30	; 48
    1c8c:	21 f4       	brne	.+8      	; 0x1c96 <vfprintf+0x308>
    1c8e:	9a 2d       	mov	r25, r10
    1c90:	99 7e       	andi	r25, 0xE9	; 233
    1c92:	a9 2e       	mov	r10, r25
    1c94:	09 c0       	rjmp	.+18     	; 0x1ca8 <vfprintf+0x31a>
    1c96:	a2 fe       	sbrs	r10, 2
    1c98:	06 c0       	rjmp	.+12     	; 0x1ca6 <vfprintf+0x318>
    1c9a:	b3 94       	inc	r11
    1c9c:	b3 94       	inc	r11
    1c9e:	04 c0       	rjmp	.+8      	; 0x1ca8 <vfprintf+0x31a>
    1ca0:	8a 2d       	mov	r24, r10
    1ca2:	86 78       	andi	r24, 0x86	; 134
    1ca4:	09 f0       	breq	.+2      	; 0x1ca8 <vfprintf+0x31a>
    1ca6:	b3 94       	inc	r11
    1ca8:	a3 fc       	sbrc	r10, 3
    1caa:	10 c0       	rjmp	.+32     	; 0x1ccc <vfprintf+0x33e>
    1cac:	a0 fe       	sbrs	r10, 0
    1cae:	06 c0       	rjmp	.+12     	; 0x1cbc <vfprintf+0x32e>
    1cb0:	b2 14       	cp	r11, r2
    1cb2:	80 f4       	brcc	.+32     	; 0x1cd4 <vfprintf+0x346>
    1cb4:	28 0c       	add	r2, r8
    1cb6:	92 2c       	mov	r9, r2
    1cb8:	9b 18       	sub	r9, r11
    1cba:	0d c0       	rjmp	.+26     	; 0x1cd6 <vfprintf+0x348>
    1cbc:	b2 14       	cp	r11, r2
    1cbe:	58 f4       	brcc	.+22     	; 0x1cd6 <vfprintf+0x348>
    1cc0:	b6 01       	movw	r22, r12
    1cc2:	80 e2       	ldi	r24, 0x20	; 32
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	76 d0       	rcall	.+236    	; 0x1db4 <fputc>
    1cc8:	b3 94       	inc	r11
    1cca:	f8 cf       	rjmp	.-16     	; 0x1cbc <vfprintf+0x32e>
    1ccc:	b2 14       	cp	r11, r2
    1cce:	18 f4       	brcc	.+6      	; 0x1cd6 <vfprintf+0x348>
    1cd0:	2b 18       	sub	r2, r11
    1cd2:	02 c0       	rjmp	.+4      	; 0x1cd8 <vfprintf+0x34a>
    1cd4:	98 2c       	mov	r9, r8
    1cd6:	21 2c       	mov	r2, r1
    1cd8:	a4 fe       	sbrs	r10, 4
    1cda:	0f c0       	rjmp	.+30     	; 0x1cfa <vfprintf+0x36c>
    1cdc:	b6 01       	movw	r22, r12
    1cde:	80 e3       	ldi	r24, 0x30	; 48
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	68 d0       	rcall	.+208    	; 0x1db4 <fputc>
    1ce4:	a2 fe       	sbrs	r10, 2
    1ce6:	16 c0       	rjmp	.+44     	; 0x1d14 <vfprintf+0x386>
    1ce8:	a1 fc       	sbrc	r10, 1
    1cea:	03 c0       	rjmp	.+6      	; 0x1cf2 <vfprintf+0x364>
    1cec:	88 e7       	ldi	r24, 0x78	; 120
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	02 c0       	rjmp	.+4      	; 0x1cf6 <vfprintf+0x368>
    1cf2:	88 e5       	ldi	r24, 0x58	; 88
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	b6 01       	movw	r22, r12
    1cf8:	0c c0       	rjmp	.+24     	; 0x1d12 <vfprintf+0x384>
    1cfa:	8a 2d       	mov	r24, r10
    1cfc:	86 78       	andi	r24, 0x86	; 134
    1cfe:	51 f0       	breq	.+20     	; 0x1d14 <vfprintf+0x386>
    1d00:	a1 fe       	sbrs	r10, 1
    1d02:	02 c0       	rjmp	.+4      	; 0x1d08 <vfprintf+0x37a>
    1d04:	8b e2       	ldi	r24, 0x2B	; 43
    1d06:	01 c0       	rjmp	.+2      	; 0x1d0a <vfprintf+0x37c>
    1d08:	80 e2       	ldi	r24, 0x20	; 32
    1d0a:	a7 fc       	sbrc	r10, 7
    1d0c:	8d e2       	ldi	r24, 0x2D	; 45
    1d0e:	b6 01       	movw	r22, r12
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	50 d0       	rcall	.+160    	; 0x1db4 <fputc>
    1d14:	89 14       	cp	r8, r9
    1d16:	30 f4       	brcc	.+12     	; 0x1d24 <vfprintf+0x396>
    1d18:	b6 01       	movw	r22, r12
    1d1a:	80 e3       	ldi	r24, 0x30	; 48
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	4a d0       	rcall	.+148    	; 0x1db4 <fputc>
    1d20:	9a 94       	dec	r9
    1d22:	f8 cf       	rjmp	.-16     	; 0x1d14 <vfprintf+0x386>
    1d24:	8a 94       	dec	r8
    1d26:	f3 01       	movw	r30, r6
    1d28:	e8 0d       	add	r30, r8
    1d2a:	f1 1d       	adc	r31, r1
    1d2c:	80 81       	ld	r24, Z
    1d2e:	b6 01       	movw	r22, r12
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	40 d0       	rcall	.+128    	; 0x1db4 <fputc>
    1d34:	81 10       	cpse	r8, r1
    1d36:	f6 cf       	rjmp	.-20     	; 0x1d24 <vfprintf+0x396>
    1d38:	22 20       	and	r2, r2
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <vfprintf+0x3b0>
    1d3c:	4e ce       	rjmp	.-868    	; 0x19da <vfprintf+0x4c>
    1d3e:	b6 01       	movw	r22, r12
    1d40:	80 e2       	ldi	r24, 0x20	; 32
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	37 d0       	rcall	.+110    	; 0x1db4 <fputc>
    1d46:	2a 94       	dec	r2
    1d48:	f7 cf       	rjmp	.-18     	; 0x1d38 <vfprintf+0x3aa>
    1d4a:	f6 01       	movw	r30, r12
    1d4c:	86 81       	ldd	r24, Z+6	; 0x06
    1d4e:	97 81       	ldd	r25, Z+7	; 0x07
    1d50:	02 c0       	rjmp	.+4      	; 0x1d56 <vfprintf+0x3c8>
    1d52:	8f ef       	ldi	r24, 0xFF	; 255
    1d54:	9f ef       	ldi	r25, 0xFF	; 255
    1d56:	2b 96       	adiw	r28, 0x0b	; 11
    1d58:	0f b6       	in	r0, 0x3f	; 63
    1d5a:	f8 94       	cli
    1d5c:	de bf       	out	0x3e, r29	; 62
    1d5e:	0f be       	out	0x3f, r0	; 63
    1d60:	cd bf       	out	0x3d, r28	; 61
    1d62:	df 91       	pop	r29
    1d64:	cf 91       	pop	r28
    1d66:	1f 91       	pop	r17
    1d68:	0f 91       	pop	r16
    1d6a:	ff 90       	pop	r15
    1d6c:	ef 90       	pop	r14
    1d6e:	df 90       	pop	r13
    1d70:	cf 90       	pop	r12
    1d72:	bf 90       	pop	r11
    1d74:	af 90       	pop	r10
    1d76:	9f 90       	pop	r9
    1d78:	8f 90       	pop	r8
    1d7a:	7f 90       	pop	r7
    1d7c:	6f 90       	pop	r6
    1d7e:	5f 90       	pop	r5
    1d80:	4f 90       	pop	r4
    1d82:	3f 90       	pop	r3
    1d84:	2f 90       	pop	r2
    1d86:	08 95       	ret

00001d88 <strnlen_P>:
    1d88:	fc 01       	movw	r30, r24
    1d8a:	05 90       	lpm	r0, Z+
    1d8c:	61 50       	subi	r22, 0x01	; 1
    1d8e:	70 40       	sbci	r23, 0x00	; 0
    1d90:	01 10       	cpse	r0, r1
    1d92:	d8 f7       	brcc	.-10     	; 0x1d8a <strnlen_P+0x2>
    1d94:	80 95       	com	r24
    1d96:	90 95       	com	r25
    1d98:	8e 0f       	add	r24, r30
    1d9a:	9f 1f       	adc	r25, r31
    1d9c:	08 95       	ret

00001d9e <strnlen>:
    1d9e:	fc 01       	movw	r30, r24
    1da0:	61 50       	subi	r22, 0x01	; 1
    1da2:	70 40       	sbci	r23, 0x00	; 0
    1da4:	01 90       	ld	r0, Z+
    1da6:	01 10       	cpse	r0, r1
    1da8:	d8 f7       	brcc	.-10     	; 0x1da0 <strnlen+0x2>
    1daa:	80 95       	com	r24
    1dac:	90 95       	com	r25
    1dae:	8e 0f       	add	r24, r30
    1db0:	9f 1f       	adc	r25, r31
    1db2:	08 95       	ret

00001db4 <fputc>:
    1db4:	0f 93       	push	r16
    1db6:	1f 93       	push	r17
    1db8:	cf 93       	push	r28
    1dba:	df 93       	push	r29
    1dbc:	fb 01       	movw	r30, r22
    1dbe:	23 81       	ldd	r18, Z+3	; 0x03
    1dc0:	21 fd       	sbrc	r18, 1
    1dc2:	03 c0       	rjmp	.+6      	; 0x1dca <fputc+0x16>
    1dc4:	8f ef       	ldi	r24, 0xFF	; 255
    1dc6:	9f ef       	ldi	r25, 0xFF	; 255
    1dc8:	2c c0       	rjmp	.+88     	; 0x1e22 <fputc+0x6e>
    1dca:	22 ff       	sbrs	r18, 2
    1dcc:	16 c0       	rjmp	.+44     	; 0x1dfa <fputc+0x46>
    1dce:	46 81       	ldd	r20, Z+6	; 0x06
    1dd0:	57 81       	ldd	r21, Z+7	; 0x07
    1dd2:	24 81       	ldd	r18, Z+4	; 0x04
    1dd4:	35 81       	ldd	r19, Z+5	; 0x05
    1dd6:	42 17       	cp	r20, r18
    1dd8:	53 07       	cpc	r21, r19
    1dda:	44 f4       	brge	.+16     	; 0x1dec <fputc+0x38>
    1ddc:	a0 81       	ld	r26, Z
    1dde:	b1 81       	ldd	r27, Z+1	; 0x01
    1de0:	9d 01       	movw	r18, r26
    1de2:	2f 5f       	subi	r18, 0xFF	; 255
    1de4:	3f 4f       	sbci	r19, 0xFF	; 255
    1de6:	31 83       	std	Z+1, r19	; 0x01
    1de8:	20 83       	st	Z, r18
    1dea:	8c 93       	st	X, r24
    1dec:	26 81       	ldd	r18, Z+6	; 0x06
    1dee:	37 81       	ldd	r19, Z+7	; 0x07
    1df0:	2f 5f       	subi	r18, 0xFF	; 255
    1df2:	3f 4f       	sbci	r19, 0xFF	; 255
    1df4:	37 83       	std	Z+7, r19	; 0x07
    1df6:	26 83       	std	Z+6, r18	; 0x06
    1df8:	14 c0       	rjmp	.+40     	; 0x1e22 <fputc+0x6e>
    1dfa:	8b 01       	movw	r16, r22
    1dfc:	ec 01       	movw	r28, r24
    1dfe:	fb 01       	movw	r30, r22
    1e00:	00 84       	ldd	r0, Z+8	; 0x08
    1e02:	f1 85       	ldd	r31, Z+9	; 0x09
    1e04:	e0 2d       	mov	r30, r0
    1e06:	09 95       	icall
    1e08:	89 2b       	or	r24, r25
    1e0a:	e1 f6       	brne	.-72     	; 0x1dc4 <fputc+0x10>
    1e0c:	d8 01       	movw	r26, r16
    1e0e:	16 96       	adiw	r26, 0x06	; 6
    1e10:	8d 91       	ld	r24, X+
    1e12:	9c 91       	ld	r25, X
    1e14:	17 97       	sbiw	r26, 0x07	; 7
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	17 96       	adiw	r26, 0x07	; 7
    1e1a:	9c 93       	st	X, r25
    1e1c:	8e 93       	st	-X, r24
    1e1e:	16 97       	sbiw	r26, 0x06	; 6
    1e20:	ce 01       	movw	r24, r28
    1e22:	df 91       	pop	r29
    1e24:	cf 91       	pop	r28
    1e26:	1f 91       	pop	r17
    1e28:	0f 91       	pop	r16
    1e2a:	08 95       	ret

00001e2c <__ultoa_invert>:
    1e2c:	fa 01       	movw	r30, r20
    1e2e:	aa 27       	eor	r26, r26
    1e30:	28 30       	cpi	r18, 0x08	; 8
    1e32:	51 f1       	breq	.+84     	; 0x1e88 <__ultoa_invert+0x5c>
    1e34:	20 31       	cpi	r18, 0x10	; 16
    1e36:	81 f1       	breq	.+96     	; 0x1e98 <__ultoa_invert+0x6c>
    1e38:	e8 94       	clt
    1e3a:	6f 93       	push	r22
    1e3c:	6e 7f       	andi	r22, 0xFE	; 254
    1e3e:	6e 5f       	subi	r22, 0xFE	; 254
    1e40:	7f 4f       	sbci	r23, 0xFF	; 255
    1e42:	8f 4f       	sbci	r24, 0xFF	; 255
    1e44:	9f 4f       	sbci	r25, 0xFF	; 255
    1e46:	af 4f       	sbci	r26, 0xFF	; 255
    1e48:	b1 e0       	ldi	r27, 0x01	; 1
    1e4a:	3e d0       	rcall	.+124    	; 0x1ec8 <__ultoa_invert+0x9c>
    1e4c:	b4 e0       	ldi	r27, 0x04	; 4
    1e4e:	3c d0       	rcall	.+120    	; 0x1ec8 <__ultoa_invert+0x9c>
    1e50:	67 0f       	add	r22, r23
    1e52:	78 1f       	adc	r23, r24
    1e54:	89 1f       	adc	r24, r25
    1e56:	9a 1f       	adc	r25, r26
    1e58:	a1 1d       	adc	r26, r1
    1e5a:	68 0f       	add	r22, r24
    1e5c:	79 1f       	adc	r23, r25
    1e5e:	8a 1f       	adc	r24, r26
    1e60:	91 1d       	adc	r25, r1
    1e62:	a1 1d       	adc	r26, r1
    1e64:	6a 0f       	add	r22, r26
    1e66:	71 1d       	adc	r23, r1
    1e68:	81 1d       	adc	r24, r1
    1e6a:	91 1d       	adc	r25, r1
    1e6c:	a1 1d       	adc	r26, r1
    1e6e:	20 d0       	rcall	.+64     	; 0x1eb0 <__ultoa_invert+0x84>
    1e70:	09 f4       	brne	.+2      	; 0x1e74 <__ultoa_invert+0x48>
    1e72:	68 94       	set
    1e74:	3f 91       	pop	r19
    1e76:	2a e0       	ldi	r18, 0x0A	; 10
    1e78:	26 9f       	mul	r18, r22
    1e7a:	11 24       	eor	r1, r1
    1e7c:	30 19       	sub	r19, r0
    1e7e:	30 5d       	subi	r19, 0xD0	; 208
    1e80:	31 93       	st	Z+, r19
    1e82:	de f6       	brtc	.-74     	; 0x1e3a <__ultoa_invert+0xe>
    1e84:	cf 01       	movw	r24, r30
    1e86:	08 95       	ret
    1e88:	46 2f       	mov	r20, r22
    1e8a:	47 70       	andi	r20, 0x07	; 7
    1e8c:	40 5d       	subi	r20, 0xD0	; 208
    1e8e:	41 93       	st	Z+, r20
    1e90:	b3 e0       	ldi	r27, 0x03	; 3
    1e92:	0f d0       	rcall	.+30     	; 0x1eb2 <__ultoa_invert+0x86>
    1e94:	c9 f7       	brne	.-14     	; 0x1e88 <__ultoa_invert+0x5c>
    1e96:	f6 cf       	rjmp	.-20     	; 0x1e84 <__ultoa_invert+0x58>
    1e98:	46 2f       	mov	r20, r22
    1e9a:	4f 70       	andi	r20, 0x0F	; 15
    1e9c:	40 5d       	subi	r20, 0xD0	; 208
    1e9e:	4a 33       	cpi	r20, 0x3A	; 58
    1ea0:	18 f0       	brcs	.+6      	; 0x1ea8 <__ultoa_invert+0x7c>
    1ea2:	49 5d       	subi	r20, 0xD9	; 217
    1ea4:	31 fd       	sbrc	r19, 1
    1ea6:	40 52       	subi	r20, 0x20	; 32
    1ea8:	41 93       	st	Z+, r20
    1eaa:	02 d0       	rcall	.+4      	; 0x1eb0 <__ultoa_invert+0x84>
    1eac:	a9 f7       	brne	.-22     	; 0x1e98 <__ultoa_invert+0x6c>
    1eae:	ea cf       	rjmp	.-44     	; 0x1e84 <__ultoa_invert+0x58>
    1eb0:	b4 e0       	ldi	r27, 0x04	; 4
    1eb2:	a6 95       	lsr	r26
    1eb4:	97 95       	ror	r25
    1eb6:	87 95       	ror	r24
    1eb8:	77 95       	ror	r23
    1eba:	67 95       	ror	r22
    1ebc:	ba 95       	dec	r27
    1ebe:	c9 f7       	brne	.-14     	; 0x1eb2 <__ultoa_invert+0x86>
    1ec0:	00 97       	sbiw	r24, 0x00	; 0
    1ec2:	61 05       	cpc	r22, r1
    1ec4:	71 05       	cpc	r23, r1
    1ec6:	08 95       	ret
    1ec8:	9b 01       	movw	r18, r22
    1eca:	ac 01       	movw	r20, r24
    1ecc:	0a 2e       	mov	r0, r26
    1ece:	06 94       	lsr	r0
    1ed0:	57 95       	ror	r21
    1ed2:	47 95       	ror	r20
    1ed4:	37 95       	ror	r19
    1ed6:	27 95       	ror	r18
    1ed8:	ba 95       	dec	r27
    1eda:	c9 f7       	brne	.-14     	; 0x1ece <__ultoa_invert+0xa2>
    1edc:	62 0f       	add	r22, r18
    1ede:	73 1f       	adc	r23, r19
    1ee0:	84 1f       	adc	r24, r20
    1ee2:	95 1f       	adc	r25, r21
    1ee4:	a0 1d       	adc	r26, r0
    1ee6:	08 95       	ret

00001ee8 <_exit>:
    1ee8:	f8 94       	cli

00001eea <__stop_program>:
    1eea:	ff cf       	rjmp	.-2      	; 0x1eea <__stop_program>
